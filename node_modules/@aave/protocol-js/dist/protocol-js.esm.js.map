{"version":3,"file":"protocol-js.esm.js","sources":["../src/helpers/bignumber.ts","../src/helpers/ray-math.ts","../src/v1/types.ts","../src/helpers/constants.ts","../src/v1/computations-and-formatting.ts","../src/helpers/pool-math.ts","../src/v2/computations-and-formatting.ts","../src/tx-builder/types/index.ts","../node_modules/regenerator-runtime/runtime.js","../src/tx-builder/config/v2/addresses.ts","../src/tx-builder/config/index.ts","../src/tx-builder/contract-types/factories/IAaveGovernanceV2__factory.ts","../src/tx-builder/contract-types/factories/IAaveStakingHelper__factory.ts","../src/tx-builder/contract-types/factories/IDebtTokenBase__factory.ts","../src/tx-builder/contract-types/factories/IERC20Detailed__factory.ts","../src/tx-builder/contract-types/factories/IFaucet__factory.ts","../src/tx-builder/contract-types/factories/IGovernancePowerDelegationToken__factory.ts","../src/tx-builder/contract-types/factories/IGovernanceStrategy__factory.ts","../src/tx-builder/contract-types/factories/IGovernanceV2Helper__factory.ts","../src/tx-builder/contract-types/factories/ILendingPool__factory.ts","../src/tx-builder/contract-types/factories/ILendToAaveMigrator__factory.ts","../src/tx-builder/contract-types/factories/IMinter__factory.ts","../src/tx-builder/contract-types/factories/IRepayWithCollateral__factory.ts","../src/tx-builder/contract-types/factories/IStakedToken__factory.ts","../src/tx-builder/contract-types/factories/ISwapCollateral__factory.ts","../src/tx-builder/contract-types/factories/ISynthetix__factory.ts","../src/tx-builder/contract-types/factories/IWETHGateway__factory.ts","../src/tx-builder/utils/parsings.ts","../src/tx-builder/validators/paramValidators.ts","../src/tx-builder/validators/validations.ts","../src/tx-builder/validators/methodValidators.ts","../src/tx-builder/utils/gasStation.ts","../src/tx-builder/services/BaseService.ts","../src/tx-builder/services/v2/LendingPool.ts","../src/tx-builder/services/ERC20.ts","../src/tx-builder/services/Faucet.ts","../src/tx-builder/services/LTAMigrator.ts","../src/tx-builder/services/Staking.ts","../src/tx-builder/services/SynthetixService.ts","../src/tx-builder/txBuilder.ts","../src/tx-builder/services/WETHGateway.ts","../src/tx-builder/services/BaseDebtToken.ts","../src/tx-builder/services/LiquiditySwapAdapter.ts","../src/tx-builder/services/RepayWithCollateralAdapter.ts","../src/tx-builder/types/GovernanceV2MethodTypes.ts","../src/tx-builder/types/GovernanceV2ReturnTypes.ts","../src/tx-builder/utils/ipfs.ts","../src/tx-builder/services/v2/AaveGovernanceV2.ts","../src/tx-builder/services/v2/GovernanceDelegationTokenService.ts","../src/tx-builder/v2.ts"],"sourcesContent":["import BigNumber from 'bignumber.js';\n\nexport type BigNumberValue = string | number | BigNumber;\n\nexport const BigNumberZD = BigNumber.clone({\n  DECIMAL_PLACES: 0,\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n});\n\nexport function valueToBigNumber(amount: BigNumberValue): BigNumber {\n  return new BigNumber(amount);\n}\n\nexport function valueToZDBigNumber(amount: BigNumberValue): BigNumber {\n  return new BigNumberZD(amount);\n}\n\nconst bn10 = new BigNumber(10);\n\nconst bn10PowLookup: { [key: number]: BigNumber } = {};\n\n/**\n * It's a performance optimized version of 10 ** x, which essentially memoizes previously used pows and resolves them as lookup.\n * @param decimals\n * @returns 10 ** decimals\n */\nexport function pow10(decimals: number): BigNumber {\n  if (!bn10PowLookup[decimals]) bn10PowLookup[decimals] = bn10.pow(decimals);\n  return bn10PowLookup[decimals];\n}\n\nexport function normalize(n: BigNumberValue, decimals: number): string {\n  return valueToBigNumber(n).dividedBy(pow10(decimals)).toString(10);\n}\n","import BigNumber from 'bignumber.js';\nimport { BigNumberValue, valueToZDBigNumber } from './bignumber';\n\nexport const WAD = valueToZDBigNumber(10).pow(18);\nexport const HALF_WAD = WAD.dividedBy(2);\n\nexport const RAY = valueToZDBigNumber(10).pow(27);\nexport const HALF_RAY = RAY.dividedBy(2);\n\nexport const WAD_RAY_RATIO = valueToZDBigNumber(10).pow(9);\n\nexport function wadMul(a: BigNumberValue, b: BigNumberValue): BigNumber {\n  return HALF_WAD.plus(valueToZDBigNumber(a).multipliedBy(b)).div(WAD);\n}\n\nexport function wadDiv(a: BigNumberValue, b: BigNumberValue): BigNumber {\n  const halfB = valueToZDBigNumber(b).div(2);\n\n  return halfB.plus(valueToZDBigNumber(a).multipliedBy(WAD)).div(b);\n}\n\nexport function rayMul(a: BigNumberValue, b: BigNumberValue): BigNumber {\n  return HALF_RAY.plus(valueToZDBigNumber(a).multipliedBy(b)).div(RAY);\n}\n\nexport function rayDiv(a: BigNumberValue, b: BigNumberValue): BigNumber {\n  const halfB = valueToZDBigNumber(b).div(2);\n\n  return halfB.plus(valueToZDBigNumber(a).multipliedBy(RAY)).div(b);\n}\n\nexport function rayToWad(a: BigNumberValue): BigNumber {\n  const halfRatio = valueToZDBigNumber(WAD_RAY_RATIO).div(2);\n\n  return halfRatio.plus(a).div(WAD_RAY_RATIO);\n}\n\nexport function wadToRay(a: BigNumberValue): BigNumber {\n  return valueToZDBigNumber(a).multipliedBy(WAD_RAY_RATIO).decimalPlaces(0);\n}\n\nexport function rayPow(a: BigNumberValue, p: BigNumberValue): BigNumber {\n  let x = valueToZDBigNumber(a);\n  let n = valueToZDBigNumber(p);\n  let z = !n.modulo(2).eq(0) ? x : valueToZDBigNumber(RAY);\n\n  for (n = n.div(2); !n.eq(0); n = n.div(2)) {\n    x = rayMul(x, x);\n\n    if (!n.modulo(2).eq(0)) {\n      z = rayMul(z, x);\n    }\n  }\n  return z;\n}\n\n/**\n * RayPow is slow and gas intensive therefore in v2 we switched to binomial approximation on the contract level.\n * While the results ar not exact to the last decimal, they are close enough.\n */\nexport function binomialApproximatedRayPow(\n  a: BigNumberValue,\n  p: BigNumberValue\n): BigNumber {\n  const base = valueToZDBigNumber(a);\n  const exp = valueToZDBigNumber(p);\n  if (exp.eq(0)) return RAY;\n  const expMinusOne = exp.minus(1);\n  const expMinusTwo = exp.gt(2) ? exp.minus(2) : 0;\n\n  const basePowerTwo = rayMul(base, base);\n  const basePowerThree = rayMul(basePowerTwo, base);\n\n  const firstTerm = exp.multipliedBy(base);\n  const secondTerm = exp\n    .multipliedBy(expMinusOne)\n    .multipliedBy(basePowerTwo)\n    .div(2);\n  const thirdTerm = exp\n    .multipliedBy(expMinusOne)\n    .multipliedBy(expMinusTwo)\n    .multipliedBy(basePowerThree)\n    .div(6);\n\n  return RAY.plus(firstTerm).plus(secondTerm).plus(thirdTerm);\n}\n\nexport function rayToDecimal(a: BigNumberValue): BigNumber {\n  return valueToZDBigNumber(a).dividedBy(RAY);\n}\n","export enum BorrowRateMode {\n  None = 'None',\n  Stable = 'Stable',\n  Variable = 'Variable',\n}\n\nexport type ReserveRatesData = {\n  id: string;\n  symbol: string;\n  paramsHistory: {\n    variableBorrowIndex: string;\n    liquidityIndex: string;\n    timestamp: number;\n  }[];\n};\n\nexport type ReserveData = {\n  id: string;\n  underlyingAsset: string;\n  name: string;\n  symbol: string;\n  decimals: number;\n  isActive: boolean;\n  isFreezed: boolean;\n  usageAsCollateralEnabled: boolean;\n  borrowingEnabled: boolean;\n  stableBorrowRateEnabled: boolean;\n  baseLTVasCollateral: string;\n  optimalUtilisationRate: string;\n  stableRateSlope1: string;\n  stableRateSlope2: string;\n  averageStableBorrowRate: string;\n  baseVariableBorrowRate: string;\n  variableRateSlope1: string;\n  variableRateSlope2: string;\n  liquidityIndex: string;\n  reserveLiquidationThreshold: string;\n  reserveLiquidationBonus: string;\n  variableBorrowIndex: string;\n  variableBorrowRate: string;\n  avg30DaysVariableBorrowRate?: string;\n  availableLiquidity: string;\n  stableBorrowRate: string;\n  liquidityRate: string;\n  avg30DaysLiquidityRate?: string;\n  totalBorrows: string;\n  totalBorrowsStable: string;\n  totalBorrowsVariable: string;\n  totalLiquidity: string;\n  utilizationRate: string;\n  lastUpdateTimestamp: number;\n  aToken: {\n    id: string;\n  };\n  price: {\n    priceInEth: string;\n  };\n};\n\nexport type UserReserveData = {\n  principalATokenBalance: string;\n  userBalanceIndex: string;\n  redirectedBalance: string;\n  interestRedirectionAddress: string;\n  usageAsCollateralEnabledOnUser: boolean;\n  borrowRate: string;\n  borrowRateMode: BorrowRateMode;\n  originationFee: string;\n  principalBorrows: string;\n  variableBorrowIndex: string;\n  lastUpdateTimestamp: number;\n  reserve: {\n    id: string;\n    underlyingAsset: string;\n    name: string;\n    symbol: string;\n    decimals: number;\n    liquidityRate: string;\n    reserveLiquidationBonus: string;\n    lastUpdateTimestamp: number;\n    aToken: {\n      id: string;\n    };\n  };\n};\n\nexport type ComputedUserReserve = UserReserveData & {\n  currentUnderlyingBalance: string;\n  currentUnderlyingBalanceETH: string;\n  currentUnderlyingBalanceUSD: string;\n\n  currentBorrows: string;\n  currentBorrowsETH: string;\n  currentBorrowsUSD: string;\n\n  principalBorrowsETH: string;\n  principalBorrowsUSD: string;\n\n  originationFeeETH: string;\n  originationFeeUSD: string;\n};\n\nexport type UserSummaryData = {\n  id: string;\n  totalLiquidityETH: string;\n  totalCollateralETH: string;\n  totalBorrowsETH: string;\n  totalFeesETH: string;\n  totalFeesUSD: string;\n  totalLiquidityUSD: string;\n  totalCollateralUSD: string;\n  totalBorrowsUSD: string;\n  totalBorrowsWithFeesETH: string;\n  totalBorrowsWithFeesUSD: string;\n  availableBorrowsETH: string;\n  currentLoanToValue: string;\n  currentLiquidationThreshold: string;\n  maxAmountToWithdrawInEth: string;\n  healthFactor: string;\n  reservesData: ComputedUserReserve[];\n};\n","import { valueToBigNumber } from './bignumber';\n\nexport const SECONDS_PER_YEAR = valueToBigNumber('31536000');\nexport const ETH_DECIMALS = 18;\nexport const USD_DECIMALS = 10;\nexport const RAY_DECIMALS = 27;\n","import BigNumber from 'bignumber.js';\nimport * as RayMath from '../helpers/ray-math';\nimport {\n  ReserveData,\n  ComputedUserReserve,\n  UserReserveData,\n  UserSummaryData,\n  BorrowRateMode,\n  ReserveRatesData,\n} from './types';\nimport {\n  BigNumberValue,\n  valueToBigNumber,\n  valueToZDBigNumber,\n  normalize,\n  pow10,\n} from '../helpers/bignumber';\nimport {\n  ETH_DECIMALS,\n  RAY_DECIMALS,\n  SECONDS_PER_YEAR,\n  USD_DECIMALS,\n} from '../helpers/constants';\n\nexport type GetCompoundedBorrowBalanceParamsReserve = Pick<\n  ReserveData,\n  'variableBorrowRate' | 'lastUpdateTimestamp' | 'variableBorrowIndex'\n>;\nexport type GetCompoundedBorrowBalanceParamsUserReserve = Pick<\n  UserReserveData,\n  | 'principalBorrows'\n  | 'borrowRateMode'\n  | 'variableBorrowIndex'\n  | 'borrowRate'\n  | 'lastUpdateTimestamp'\n>;\n\nexport function getCompoundedBorrowBalance(\n  reserve: GetCompoundedBorrowBalanceParamsReserve,\n  userReserve: GetCompoundedBorrowBalanceParamsUserReserve,\n  currentTimestamp: number\n): BigNumber {\n  const principalBorrows = valueToZDBigNumber(userReserve.principalBorrows);\n  if (principalBorrows.eq('0')) {\n    return valueToZDBigNumber('0');\n  }\n\n  let cumulatedInterest;\n  if (userReserve.borrowRateMode === BorrowRateMode.Variable) {\n    let compoundedInterest = calculateCompoundedInterest(\n      reserve.variableBorrowRate,\n      currentTimestamp,\n      reserve.lastUpdateTimestamp\n    );\n\n    cumulatedInterest = RayMath.rayDiv(\n      RayMath.rayMul(compoundedInterest, reserve.variableBorrowIndex),\n      userReserve.variableBorrowIndex\n    );\n  } else {\n    // if stable\n    cumulatedInterest = calculateCompoundedInterest(\n      userReserve.borrowRate,\n      currentTimestamp,\n      userReserve.lastUpdateTimestamp\n    );\n  }\n\n  const borrowBalanceRay = RayMath.wadToRay(principalBorrows);\n\n  return RayMath.rayToWad(RayMath.rayMul(borrowBalanceRay, cumulatedInterest));\n}\n\nexport const calculateCompoundedInterest = (\n  rate: BigNumberValue,\n  currentTimestamp: number,\n  lastUpdateTimestamp: number\n): BigNumber => {\n  const timeDelta = valueToZDBigNumber(currentTimestamp - lastUpdateTimestamp);\n  const ratePerSecond = valueToZDBigNumber(rate).dividedBy(SECONDS_PER_YEAR);\n  return RayMath.binomialApproximatedRayPow(ratePerSecond, timeDelta);\n};\n\nexport const calculateLinearInterest = (\n  rate: BigNumberValue,\n  currentTimestamp: number,\n  lastUpdateTimestamp: number\n) => {\n  const timeDelta = RayMath.wadToRay(\n    valueToZDBigNumber(currentTimestamp - lastUpdateTimestamp)\n  );\n  const timeDeltaInSeconds = RayMath.rayDiv(\n    timeDelta,\n    RayMath.wadToRay(SECONDS_PER_YEAR)\n  );\n  return RayMath.rayMul(rate, timeDeltaInSeconds).plus(RayMath.RAY);\n};\n\nexport function calculateHealthFactorFromBalances(\n  collateralBalanceETH: BigNumberValue,\n  borrowBalanceETH: BigNumberValue,\n  totalFeesETH: BigNumberValue,\n  currentLiquidationThreshold: BigNumberValue\n): BigNumber {\n  if (valueToBigNumber(borrowBalanceETH).eq(0)) {\n    return valueToBigNumber('-1'); // invalid number\n  }\n  return valueToBigNumber(collateralBalanceETH)\n    .multipliedBy(currentLiquidationThreshold)\n    .dividedBy(100)\n    .div(valueToBigNumber(borrowBalanceETH).plus(totalFeesETH));\n}\n\nexport function calculateHealthFactorFromBalancesBigUnits(\n  collateralBalanceETH: BigNumberValue,\n  borrowBalanceETH: BigNumberValue,\n  totalFeesETH: BigNumberValue,\n  currentLiquidationThreshold: BigNumberValue\n): BigNumber {\n  return calculateHealthFactorFromBalances(\n    collateralBalanceETH,\n    borrowBalanceETH,\n    totalFeesETH,\n    new BigNumber(currentLiquidationThreshold)\n      .multipliedBy(100)\n      .decimalPlaces(0, BigNumber.ROUND_DOWN)\n  );\n}\n\nexport function calculateAvailableBorrowsETH(\n  collateralBalanceETH: BigNumberValue,\n  borrowBalanceETH: BigNumberValue,\n  totalFeesETH: BigNumberValue,\n  currentLtv: BigNumberValue\n): BigNumber {\n  if (valueToZDBigNumber(currentLtv).eq(0)) {\n    return valueToZDBigNumber('0');\n  }\n  let availableBorrowsETH = valueToZDBigNumber(collateralBalanceETH)\n    .multipliedBy(currentLtv)\n    .dividedBy(100);\n  if (availableBorrowsETH.lt(borrowBalanceETH)) {\n    return valueToZDBigNumber('0');\n  }\n  availableBorrowsETH = availableBorrowsETH\n    .minus(borrowBalanceETH)\n    .minus(totalFeesETH);\n  const borrowFee = availableBorrowsETH.multipliedBy('0.0025');\n  return availableBorrowsETH.minus(borrowFee);\n}\n\nexport type GetReserveNormalizedIncomeReserve = Pick<\n  ReserveData,\n  'liquidityRate' | 'liquidityIndex' | 'lastUpdateTimestamp'\n>;\n\nexport function getReserveNormalizedIncome(\n  reserve: GetReserveNormalizedIncomeReserve,\n  currentTimestamp: number\n): BigNumber {\n  const { liquidityRate, liquidityIndex, lastUpdateTimestamp } = reserve;\n  if (valueToZDBigNumber(liquidityRate).eq('0')) {\n    return valueToZDBigNumber(liquidityIndex);\n  }\n\n  const cumulatedInterest = calculateLinearInterest(\n    liquidityRate,\n    currentTimestamp,\n    lastUpdateTimestamp\n  );\n\n  return RayMath.rayMul(cumulatedInterest, liquidityIndex);\n}\n\nexport type CalculateCumulatedBalancePoolReserve = GetReserveNormalizedIncomeReserve;\nexport type CalculateCumulatedBalanceUserReserve = Pick<\n  UserReserveData,\n  'userBalanceIndex'\n>;\n\nexport function calculateCumulatedBalance(\n  balance: BigNumberValue,\n  userReserve: CalculateCumulatedBalanceUserReserve,\n  poolReserve: CalculateCumulatedBalancePoolReserve,\n  currentTimestamp: number\n): BigNumber {\n  return RayMath.rayToWad(\n    RayMath.rayDiv(\n      RayMath.rayMul(\n        RayMath.wadToRay(balance),\n        getReserveNormalizedIncome(poolReserve, currentTimestamp)\n      ),\n      userReserve.userBalanceIndex\n    )\n  );\n}\n\nexport type CalculateCurrentUnderlyingBalancePoolReserve = CalculateCumulatedBalancePoolReserve;\nexport type CalculateCurrentUnderlyingBalanceUserReserve = CalculateCumulatedBalanceUserReserve &\n  Pick<\n    UserReserveData,\n    | 'principalATokenBalance'\n    | 'redirectedBalance'\n    | 'interestRedirectionAddress'\n  >;\n\nexport function calculateCurrentUnderlyingBalance(\n  userReserve: CalculateCurrentUnderlyingBalanceUserReserve,\n  poolReserve: CalculateCurrentUnderlyingBalancePoolReserve,\n  currentTimestamp: number\n): BigNumber {\n  if (\n    userReserve.principalATokenBalance === '0' &&\n    userReserve.redirectedBalance === '0'\n  ) {\n    return valueToZDBigNumber('0');\n  }\n  if (\n    userReserve.interestRedirectionAddress !==\n    '0x0000000000000000000000000000000000000000'\n  ) {\n    return valueToZDBigNumber(userReserve.principalATokenBalance).plus(\n      calculateCumulatedBalance(\n        userReserve.redirectedBalance,\n        userReserve,\n        poolReserve,\n        currentTimestamp\n      ).minus(userReserve.redirectedBalance)\n    );\n  }\n  return calculateCumulatedBalance(\n    valueToBigNumber(userReserve.redirectedBalance)\n      .plus(userReserve.principalATokenBalance)\n      .toString(),\n    userReserve,\n    poolReserve,\n    currentTimestamp\n  ).minus(userReserve.redirectedBalance);\n}\n\nfunction computeUserReserveData(\n  poolReserve: ReserveData,\n  userReserve: UserReserveData,\n  usdPriceEth: BigNumberValue,\n  currentTimestamp: number\n): ComputedUserReserve {\n  const {\n    price: { priceInEth },\n    decimals,\n  } = poolReserve;\n  const currentUnderlyingBalance = calculateCurrentUnderlyingBalance(\n    userReserve,\n    poolReserve,\n    currentTimestamp\n  );\n  const currentUnderlyingBalanceETH = currentUnderlyingBalance\n    .multipliedBy(priceInEth)\n    .dividedBy(pow10(decimals));\n  const currentUnderlyingBalanceUSD = currentUnderlyingBalanceETH\n    .multipliedBy(pow10(USD_DECIMALS))\n    .dividedBy(usdPriceEth)\n    .toFixed(0);\n\n  const principalBorrowsETH = valueToZDBigNumber(userReserve.principalBorrows)\n    .multipliedBy(priceInEth)\n    .dividedBy(pow10(decimals));\n  const principalBorrowsUSD = principalBorrowsETH\n    .multipliedBy(pow10(USD_DECIMALS))\n    .dividedBy(usdPriceEth)\n    .toFixed(0);\n\n  const currentBorrows = getCompoundedBorrowBalance(\n    poolReserve,\n    userReserve,\n    currentTimestamp\n  );\n  const currentBorrowsETH = currentBorrows\n    .multipliedBy(priceInEth)\n    .dividedBy(pow10(decimals));\n  const currentBorrowsUSD = currentBorrowsETH\n    .multipliedBy(pow10(USD_DECIMALS))\n    .dividedBy(usdPriceEth)\n    .toFixed(0);\n\n  const originationFeeETH = valueToZDBigNumber(userReserve.originationFee)\n    .multipliedBy(priceInEth)\n    .dividedBy(pow10(decimals));\n  const originationFeeUSD = originationFeeETH\n    .multipliedBy(pow10(USD_DECIMALS))\n    .dividedBy(usdPriceEth)\n    .toFixed(0);\n\n  return {\n    ...userReserve,\n    principalBorrowsUSD,\n    currentBorrowsUSD,\n    originationFeeUSD,\n    currentUnderlyingBalanceUSD,\n    originationFeeETH: originationFeeETH.toString(),\n    currentBorrows: currentBorrows.toString(),\n    currentBorrowsETH: currentBorrowsETH.toString(),\n    principalBorrowsETH: principalBorrowsETH.toString(),\n    currentUnderlyingBalance: currentUnderlyingBalance.toFixed(),\n    currentUnderlyingBalanceETH: currentUnderlyingBalanceETH.toFixed(),\n  };\n}\n\nexport function computeRawUserSummaryData(\n  poolReservesData: ReserveData[],\n  rawUserReserves: UserReserveData[],\n  userId: string,\n  usdPriceEth: BigNumberValue,\n  currentTimestamp: number\n): UserSummaryData {\n  let totalLiquidityETH = valueToZDBigNumber('0');\n  let totalCollateralETH = valueToZDBigNumber('0');\n  let totalBorrowsETH = valueToZDBigNumber('0');\n  let totalFeesETH = valueToZDBigNumber('0');\n  let currentLtv = valueToBigNumber('0');\n  let currentLiquidationThreshold = valueToBigNumber('0');\n\n  const userReservesData = rawUserReserves\n    .map((userReserve) => {\n      const poolReserve = poolReservesData.find(\n        (reserve) => reserve.id === userReserve.reserve.id\n      );\n      if (!poolReserve) {\n        throw new Error(\n          'Reserve is not registered on platform, please contact support'\n        );\n      }\n      const computedUserReserve = computeUserReserveData(\n        poolReserve,\n        userReserve,\n        usdPriceEth,\n        currentTimestamp\n      );\n      totalLiquidityETH = totalLiquidityETH.plus(\n        computedUserReserve.currentUnderlyingBalanceETH\n      );\n      totalBorrowsETH = totalBorrowsETH.plus(\n        computedUserReserve.currentBorrowsETH\n      );\n      totalFeesETH = totalFeesETH.plus(computedUserReserve.originationFeeETH);\n\n      // asset enabled as collateral\n      if (\n        poolReserve.usageAsCollateralEnabled &&\n        userReserve.usageAsCollateralEnabledOnUser\n      ) {\n        totalCollateralETH = totalCollateralETH.plus(\n          computedUserReserve.currentUnderlyingBalanceETH\n        );\n        currentLtv = currentLtv.plus(\n          valueToBigNumber(\n            computedUserReserve.currentUnderlyingBalanceETH\n          ).multipliedBy(poolReserve.baseLTVasCollateral)\n        );\n        currentLiquidationThreshold = currentLiquidationThreshold.plus(\n          valueToBigNumber(\n            computedUserReserve.currentUnderlyingBalanceETH\n          ).multipliedBy(poolReserve.reserveLiquidationThreshold)\n        );\n      }\n      return computedUserReserve;\n    })\n    .sort((a, b) =>\n      a.reserve.symbol > b.reserve.symbol\n        ? 1\n        : a.reserve.symbol < b.reserve.symbol\n        ? -1\n        : 0\n    );\n\n  if (currentLtv.gt(0)) {\n    currentLtv = currentLtv\n      .div(totalCollateralETH)\n      .decimalPlaces(0, BigNumber.ROUND_DOWN);\n  }\n  if (currentLiquidationThreshold.gt(0)) {\n    currentLiquidationThreshold = currentLiquidationThreshold\n      .div(totalCollateralETH)\n      .decimalPlaces(0, BigNumber.ROUND_DOWN);\n  }\n\n  const healthFactor = calculateHealthFactorFromBalances(\n    totalCollateralETH,\n    totalBorrowsETH,\n    totalFeesETH,\n    currentLiquidationThreshold\n  );\n\n  const totalCollateralUSD = totalCollateralETH\n    .multipliedBy(pow10(USD_DECIMALS))\n    .dividedBy(usdPriceEth)\n    .toString();\n\n  const totalLiquidityUSD = totalLiquidityETH\n    .multipliedBy(pow10(USD_DECIMALS))\n    .dividedBy(usdPriceEth)\n    .toString();\n\n  const totalBorrowsUSD = totalBorrowsETH\n    .multipliedBy(pow10(USD_DECIMALS))\n    .dividedBy(usdPriceEth)\n    .toString();\n\n  const totalFeesUSD = totalFeesETH\n    .multipliedBy(pow10(USD_DECIMALS))\n    .dividedBy(usdPriceEth);\n\n  const totalBorrowsWithFeesETH = totalFeesETH.plus(totalBorrowsETH);\n  const totalBorrowsWithFeesUSD = totalFeesUSD.plus(totalBorrowsUSD);\n  const availableBorrowsETH = calculateAvailableBorrowsETH(\n    totalCollateralETH,\n    totalBorrowsETH,\n    totalFeesETH,\n    currentLtv\n  );\n\n  const totalBorrowsAndFeesETH = totalBorrowsETH.plus(totalFeesETH);\n  const maxAmountToWithdrawInEth = totalLiquidityETH.minus(\n    totalBorrowsAndFeesETH.eq(0)\n      ? '0'\n      : totalBorrowsAndFeesETH\n          .multipliedBy(100)\n          .dividedBy(currentLiquidationThreshold)\n  );\n\n  return {\n    totalLiquidityUSD,\n    totalCollateralUSD,\n    totalBorrowsUSD,\n    id: userId,\n    totalLiquidityETH: totalLiquidityETH.toString(),\n    totalCollateralETH: totalCollateralETH.toString(),\n    totalFeesETH: totalFeesETH.toString(),\n    totalBorrowsETH: totalBorrowsETH.toString(),\n    availableBorrowsETH: availableBorrowsETH.toString(),\n    currentLoanToValue: currentLtv.toString(),\n    currentLiquidationThreshold: currentLiquidationThreshold.toString(),\n    maxAmountToWithdrawInEth: maxAmountToWithdrawInEth.toString(),\n    healthFactor: healthFactor.toString(),\n    reservesData: userReservesData,\n    totalFeesUSD: totalFeesUSD.toString(),\n    totalBorrowsWithFeesETH: totalBorrowsWithFeesETH.toString(),\n    totalBorrowsWithFeesUSD: totalBorrowsWithFeesUSD.toString(),\n  };\n}\n\nexport function formatUserSummaryData(\n  poolReservesData: ReserveData[],\n  rawUserReserves: UserReserveData[],\n  userId: string,\n  usdPriceEth: BigNumberValue,\n  currentTimestamp: number\n): UserSummaryData {\n  const userData = computeRawUserSummaryData(\n    poolReservesData,\n    rawUserReserves,\n    userId,\n    usdPriceEth,\n    currentTimestamp\n  );\n  const userReservesData = userData.reservesData.map(\n    ({ reserve, ...userReserve }): ComputedUserReserve => {\n      const reserveDecimals = reserve.decimals;\n      return {\n        ...userReserve,\n        reserve: {\n          ...reserve,\n          reserveLiquidationBonus: normalize(\n            valueToBigNumber(reserve.reserveLiquidationBonus).minus(100),\n            2\n          ),\n          liquidityRate: normalize(reserve.liquidityRate, RAY_DECIMALS),\n        },\n        redirectedBalance: normalize(\n          userReserve.redirectedBalance,\n          reserveDecimals\n        ),\n        principalATokenBalance: normalize(\n          userReserve.principalATokenBalance,\n          reserveDecimals\n        ),\n        borrowRate: normalize(userReserve.borrowRate, RAY_DECIMALS),\n        lastUpdateTimestamp: userReserve.lastUpdateTimestamp,\n        variableBorrowIndex: normalize(\n          userReserve.variableBorrowIndex,\n          RAY_DECIMALS\n        ),\n        userBalanceIndex: normalize(userReserve.userBalanceIndex, RAY_DECIMALS),\n        currentUnderlyingBalance: normalize(\n          userReserve.currentUnderlyingBalance,\n          reserveDecimals\n        ),\n        currentUnderlyingBalanceETH: normalize(\n          userReserve.currentUnderlyingBalanceETH,\n          ETH_DECIMALS\n        ),\n        currentUnderlyingBalanceUSD: normalize(\n          userReserve.currentUnderlyingBalanceUSD,\n          USD_DECIMALS\n        ),\n        principalBorrows: normalize(\n          userReserve.principalBorrows,\n          reserveDecimals\n        ),\n        principalBorrowsETH: normalize(\n          userReserve.principalBorrowsETH,\n          ETH_DECIMALS\n        ),\n        principalBorrowsUSD: normalize(\n          userReserve.principalBorrowsUSD,\n          USD_DECIMALS\n        ),\n        currentBorrows: normalize(userReserve.currentBorrows, reserveDecimals),\n        currentBorrowsETH: normalize(\n          userReserve.currentBorrowsETH,\n          ETH_DECIMALS\n        ),\n        currentBorrowsUSD: normalize(\n          userReserve.currentBorrowsUSD,\n          USD_DECIMALS\n        ),\n        originationFee: normalize(userReserve.originationFee, reserveDecimals),\n        originationFeeETH: normalize(\n          userReserve.originationFeeETH,\n          ETH_DECIMALS\n        ),\n        originationFeeUSD: normalize(\n          userReserve.originationFeeUSD,\n          USD_DECIMALS\n        ),\n      };\n    }\n  );\n  return {\n    id: userData.id,\n    reservesData: userReservesData,\n    totalLiquidityETH: normalize(userData.totalLiquidityETH, ETH_DECIMALS),\n    totalLiquidityUSD: normalize(userData.totalLiquidityUSD, USD_DECIMALS),\n    totalCollateralETH: normalize(userData.totalCollateralETH, ETH_DECIMALS),\n    totalCollateralUSD: normalize(userData.totalCollateralUSD, USD_DECIMALS),\n    totalFeesETH: normalize(userData.totalFeesETH, ETH_DECIMALS),\n    totalFeesUSD: normalize(userData.totalFeesUSD, USD_DECIMALS),\n    totalBorrowsETH: normalize(userData.totalBorrowsETH, ETH_DECIMALS),\n    totalBorrowsUSD: normalize(userData.totalBorrowsUSD, USD_DECIMALS),\n    totalBorrowsWithFeesETH: normalize(\n      userData.totalBorrowsWithFeesETH,\n      ETH_DECIMALS\n    ),\n    totalBorrowsWithFeesUSD: normalize(\n      userData.totalBorrowsWithFeesUSD,\n      USD_DECIMALS\n    ),\n    availableBorrowsETH: normalize(userData.availableBorrowsETH, ETH_DECIMALS),\n    currentLoanToValue: normalize(userData.currentLoanToValue, 2),\n    currentLiquidationThreshold: normalize(\n      userData.currentLiquidationThreshold,\n      2\n    ),\n    maxAmountToWithdrawInEth: normalize(\n      userData.maxAmountToWithdrawInEth,\n      ETH_DECIMALS\n    ),\n    healthFactor: userData.healthFactor,\n  };\n}\n\nexport function calculateAverageRate(\n  index0: string,\n  index1: string,\n  timestamp0: number,\n  timestamp1: number\n): string {\n  return new BigNumber(index1)\n    .dividedBy(index0)\n    .minus('1')\n    .dividedBy(timestamp1 - timestamp0)\n    .multipliedBy('31536000')\n    .toString();\n}\n\nexport function formatReserves(\n  reserves: ReserveData[],\n  reserveIndexes30DaysAgo?: ReserveRatesData[]\n): ReserveData[] {\n  return reserves.map((reserve) => {\n    const reserve30DaysAgo = reserveIndexes30DaysAgo?.find(\n      (res) => res.id === reserve.id\n    )?.paramsHistory?.[0];\n\n    return {\n      ...reserve,\n      price: {\n        ...reserve.price,\n        priceInEth: normalize(reserve.price.priceInEth, ETH_DECIMALS),\n      },\n      baseLTVasCollateral: normalize(reserve.baseLTVasCollateral, 2),\n      variableBorrowRate: normalize(reserve.variableBorrowRate, RAY_DECIMALS),\n      avg30DaysVariableBorrowRate: reserve30DaysAgo\n        ? calculateAverageRate(\n            reserve30DaysAgo.variableBorrowIndex,\n            reserve.variableBorrowIndex,\n            reserve30DaysAgo.timestamp,\n            reserve.lastUpdateTimestamp\n          )\n        : undefined,\n      avg30DaysLiquidityRate: reserve30DaysAgo\n        ? calculateAverageRate(\n            reserve30DaysAgo.liquidityIndex,\n            reserve.liquidityIndex,\n            reserve30DaysAgo.timestamp,\n            reserve.lastUpdateTimestamp\n          )\n        : undefined,\n\n      stableBorrowRate: normalize(reserve.stableBorrowRate, RAY_DECIMALS),\n      liquidityRate: normalize(reserve.liquidityRate, RAY_DECIMALS),\n      totalLiquidity: normalize(reserve.totalLiquidity, reserve.decimals),\n      availableLiquidity: normalize(\n        reserve.availableLiquidity,\n        reserve.decimals\n      ),\n      liquidityIndex: normalize(reserve.liquidityIndex, RAY_DECIMALS),\n      reserveLiquidationThreshold: normalize(\n        reserve.reserveLiquidationThreshold,\n        2\n      ),\n      reserveLiquidationBonus: normalize(\n        valueToBigNumber(reserve.reserveLiquidationBonus).minus(100),\n        2\n      ),\n      totalBorrows: normalize(reserve.totalBorrows, reserve.decimals),\n      totalBorrowsVariable: normalize(\n        reserve.totalBorrowsVariable,\n        reserve.decimals\n      ),\n      totalBorrowsStable: normalize(\n        reserve.totalBorrowsStable,\n        reserve.decimals\n      ),\n      variableBorrowIndex: normalize(reserve.variableBorrowIndex, RAY_DECIMALS),\n    };\n  });\n}\n\nexport function calculateInterestRates(\n  reserve: ReserveData,\n  amountToDeposit: BigNumberValue,\n  amountToBorrow: BigNumberValue,\n  borrowMode: 'stable' | 'variable' = 'variable'\n) {\n  const { optimalUtilisationRate } = reserve;\n  const baseVariableBorrowRate = valueToBigNumber(\n    reserve.baseVariableBorrowRate\n  );\n  const totalBorrowsStable = valueToBigNumber(reserve.totalBorrowsStable).plus(\n    borrowMode === 'stable' ? amountToBorrow : '0'\n  );\n  const totalBorrowsVariable = valueToBigNumber(\n    reserve.totalBorrowsVariable\n  ).plus(borrowMode === 'variable' ? amountToBorrow : '0');\n  const totalBorrows = totalBorrowsStable.plus(totalBorrowsVariable);\n  const totalDeposits = valueToBigNumber(reserve.totalLiquidity).plus(\n    amountToDeposit\n  );\n  const utilizationRate =\n    totalDeposits.eq(0) && totalBorrows.eq(0)\n      ? valueToBigNumber(0)\n      : totalBorrows.dividedBy(totalDeposits);\n\n  let currentStableBorrowRate = valueToBigNumber(reserve.stableBorrowRate);\n  let currentVariableBorrowRate = valueToBigNumber(0);\n  let currentLiquidityRate = valueToBigNumber(0);\n\n  if (utilizationRate.gt(optimalUtilisationRate)) {\n    const excessUtilizationRateRatio = utilizationRate\n      .minus(optimalUtilisationRate)\n      .dividedBy(valueToBigNumber(1).minus(optimalUtilisationRate));\n\n    currentStableBorrowRate = currentStableBorrowRate\n      .plus(reserve.stableRateSlope1)\n      .plus(excessUtilizationRateRatio.multipliedBy(reserve.stableRateSlope2));\n    currentVariableBorrowRate = baseVariableBorrowRate\n      .plus(reserve.variableRateSlope1)\n      .plus(\n        excessUtilizationRateRatio.multipliedBy(reserve.variableRateSlope2)\n      );\n  } else {\n    currentStableBorrowRate = currentVariableBorrowRate.plus(\n      utilizationRate\n        .dividedBy(optimalUtilisationRate)\n        .multipliedBy(reserve.stableRateSlope1)\n    );\n    currentVariableBorrowRate = baseVariableBorrowRate.plus(\n      utilizationRate\n        .dividedBy(optimalUtilisationRate)\n        .multipliedBy(reserve.variableRateSlope1)\n    );\n  }\n\n  if (!totalBorrows.eq(0)) {\n    const weightedVariableRate = currentVariableBorrowRate.multipliedBy(\n      totalBorrowsVariable\n    );\n    const weightedStableRate = valueToBigNumber(\n      reserve.averageStableBorrowRate\n    ).multipliedBy(totalBorrowsStable);\n\n    currentLiquidityRate = weightedVariableRate\n      .plus(weightedStableRate)\n      .dividedBy(totalBorrows);\n  }\n\n  return {\n    variableBorrowRate: currentVariableBorrowRate.toString(),\n    stableBorrowRate: currentStableBorrowRate.toString(),\n    liquidityRate: currentLiquidityRate.toString(),\n  };\n}\n","import BigNumber from 'bignumber.js';\n\nimport {\n  BigNumberValue,\n  valueToBigNumber,\n  valueToZDBigNumber,\n  pow10,\n} from './bignumber';\nimport * as RayMath from './ray-math';\nimport { SECONDS_PER_YEAR } from './constants';\n\nexport const LTV_PRECISION = 4;\n\nexport function calculateCompoundedInterest(\n  rate: BigNumberValue,\n  currentTimestamp: number,\n  lastUpdateTimestamp: number\n): BigNumber {\n  const timeDelta = valueToZDBigNumber(currentTimestamp - lastUpdateTimestamp);\n  const ratePerSecond = valueToZDBigNumber(rate).dividedBy(SECONDS_PER_YEAR);\n  return RayMath.binomialApproximatedRayPow(ratePerSecond, timeDelta);\n}\n\nexport function getCompoundedBalance(\n  _principalBalance: BigNumberValue,\n  _reserveIndex: BigNumberValue,\n  _reserveRate: BigNumberValue,\n  _lastUpdateTimestamp: number,\n  currentTimestamp: number\n): BigNumber {\n  const principalBalance = valueToZDBigNumber(_principalBalance);\n  if (principalBalance.eq('0')) {\n    return principalBalance;\n  }\n\n  const compoundedInterest = calculateCompoundedInterest(\n    _reserveRate,\n    currentTimestamp,\n    _lastUpdateTimestamp\n  );\n  const cumulatedInterest = RayMath.rayMul(compoundedInterest, _reserveIndex);\n  const principalBalanceRay = RayMath.wadToRay(principalBalance);\n\n  return RayMath.rayToWad(\n    RayMath.rayMul(principalBalanceRay, cumulatedInterest)\n  );\n}\n\nexport function getCompoundedStableBalance(\n  _principalBalance: BigNumberValue,\n  _userStableRate: BigNumberValue,\n  _lastUpdateTimestamp: number,\n  currentTimestamp: number\n): BigNumber {\n  const principalBalance = valueToZDBigNumber(_principalBalance);\n  if (principalBalance.eq('0')) {\n    return principalBalance;\n  }\n\n  const cumulatedInterest = calculateCompoundedInterest(\n    _userStableRate,\n    currentTimestamp,\n    _lastUpdateTimestamp\n  );\n  const principalBalanceRay = RayMath.wadToRay(principalBalance);\n\n  return RayMath.rayToWad(\n    RayMath.rayMul(principalBalanceRay, cumulatedInterest)\n  );\n}\n\nexport function calculateHealthFactorFromBalances(\n  collateralBalanceETH: BigNumberValue,\n  borrowBalanceETH: BigNumberValue,\n  currentLiquidationThreshold: BigNumberValue\n): BigNumber {\n  if (valueToBigNumber(borrowBalanceETH).eq(0)) {\n    return valueToBigNumber('-1'); // invalid number\n  }\n  return valueToBigNumber(collateralBalanceETH)\n    .multipliedBy(currentLiquidationThreshold)\n    .dividedBy(pow10(LTV_PRECISION))\n    .div(borrowBalanceETH);\n}\n\nexport function calculateHealthFactorFromBalancesBigUnits(\n  collateralBalanceETH: BigNumberValue,\n  borrowBalanceETH: BigNumberValue,\n  currentLiquidationThreshold: BigNumberValue\n): BigNumber {\n  return calculateHealthFactorFromBalances(\n    collateralBalanceETH,\n    borrowBalanceETH,\n    new BigNumber(currentLiquidationThreshold)\n      .multipliedBy(pow10(LTV_PRECISION))\n      .decimalPlaces(0, BigNumber.ROUND_DOWN)\n  );\n}\n\nexport function calculateAvailableBorrowsETH(\n  collateralBalanceETH: BigNumberValue,\n  borrowBalanceETH: BigNumberValue,\n  currentLtv: BigNumberValue\n): BigNumber {\n  if (valueToZDBigNumber(currentLtv).eq(0)) {\n    return valueToZDBigNumber('0');\n  }\n  const availableBorrowsETH = valueToZDBigNumber(collateralBalanceETH)\n    .multipliedBy(currentLtv)\n    .dividedBy(pow10(LTV_PRECISION))\n    .minus(borrowBalanceETH);\n  return availableBorrowsETH.gt('0')\n    ? availableBorrowsETH\n    : valueToZDBigNumber('0');\n}\n\nexport function calculateAverageRate(\n  index0: string,\n  index1: string,\n  timestamp0: number,\n  timestamp1: number\n): string {\n  return valueToBigNumber(index1)\n    .dividedBy(index0)\n    .minus('1')\n    .dividedBy(timestamp1 - timestamp0)\n    .multipliedBy(SECONDS_PER_YEAR)\n    .toString();\n}\n","import BigNumber from 'bignumber.js';\n\nimport {\n  BigNumberValue,\n  valueToBigNumber,\n  valueToZDBigNumber,\n  normalize,\n  pow10,\n} from '../helpers/bignumber';\nimport {\n  calculateAvailableBorrowsETH,\n  calculateHealthFactorFromBalances,\n  getCompoundedBalance,\n  getCompoundedStableBalance,\n  calculateAverageRate,\n  LTV_PRECISION,\n  calculateCompoundedInterest,\n} from '../helpers/pool-math';\nimport { rayMul } from '../helpers/ray-math';\nimport {\n  ComputedUserReserve,\n  ReserveData,\n  UserReserveData,\n  UserSummaryData,\n  ReserveRatesData,\n  ComputedReserveData,\n} from './types';\nimport { ETH_DECIMALS, RAY_DECIMALS, USD_DECIMALS } from '../helpers/constants';\n\nexport function getEthAndUsdBalance(\n  balance: BigNumberValue,\n  priceInEth: BigNumberValue,\n  decimals: number,\n  usdPriceEth: BigNumberValue\n): [string, string] {\n  const balanceInEth = valueToZDBigNumber(balance)\n    .multipliedBy(priceInEth)\n    .dividedBy(pow10(decimals));\n  const balanceInUsd = balanceInEth\n    .multipliedBy(pow10(USD_DECIMALS))\n    .dividedBy(usdPriceEth)\n    .toFixed(0);\n  return [balanceInEth.toString(), balanceInUsd];\n}\n\n/*\ntype ComputeUserReserveDataPoolReserve = Pick<\n  ReserveData,\n  | 'price'\n  | 'decimals'\n  | 'liquidityIndex'\n  | 'liquidityRate'\n  | 'lastUpdateTimestamp'\n  | 'variableBorrowIndex'\n  | 'variableBorrowRate'\n>;\n\ntype ComputeUserReserveDataUserReserve = Pick<\n  UserReserveData,\n  | 'scaledATokenBalance'\n  | 'scaledVariableDebt'\n  | 'principalStableDebt'\n  | 'stableBorrowRate'\n  | 'stableBorrowLastUpdateTimestamp'\n>;\n*/\n\nexport function computeUserReserveData(\n  poolReserve: ReserveData,\n  userReserve: UserReserveData,\n  usdPriceEth: BigNumberValue,\n  currentTimestamp: number\n): ComputedUserReserve {\n  const {\n    price: { priceInEth },\n    decimals,\n  } = poolReserve;\n  const underlyingBalance = getCompoundedBalance(\n    userReserve.scaledATokenBalance,\n    poolReserve.liquidityIndex,\n    poolReserve.liquidityRate,\n    poolReserve.lastUpdateTimestamp,\n    currentTimestamp\n  ).toString();\n  const [underlyingBalanceETH, underlyingBalanceUSD] = getEthAndUsdBalance(\n    underlyingBalance,\n    priceInEth,\n    decimals,\n    usdPriceEth\n  );\n\n  const variableBorrows = getCompoundedBalance(\n    userReserve.scaledVariableDebt,\n    poolReserve.variableBorrowIndex,\n    poolReserve.variableBorrowRate,\n    poolReserve.lastUpdateTimestamp,\n    currentTimestamp\n  ).toString();\n\n  const [variableBorrowsETH, variableBorrowsUSD] = getEthAndUsdBalance(\n    variableBorrows,\n    priceInEth,\n    decimals,\n    usdPriceEth\n  );\n\n  const stableBorrows = getCompoundedStableBalance(\n    userReserve.principalStableDebt,\n    userReserve.stableBorrowRate,\n    userReserve.stableBorrowLastUpdateTimestamp,\n    currentTimestamp\n  ).toString();\n\n  const [stableBorrowsETH, stableBorrowsUSD] = getEthAndUsdBalance(\n    stableBorrows,\n    priceInEth,\n    decimals,\n    usdPriceEth\n  );\n\n  return {\n    ...userReserve,\n    underlyingBalance,\n    underlyingBalanceETH,\n    underlyingBalanceUSD,\n    variableBorrows,\n    variableBorrowsETH,\n    variableBorrowsUSD,\n    stableBorrows,\n    stableBorrowsETH,\n    stableBorrowsUSD,\n    totalBorrows: valueToZDBigNumber(variableBorrows)\n      .plus(stableBorrows)\n      .toString(),\n    totalBorrowsETH: valueToZDBigNumber(variableBorrowsETH)\n      .plus(stableBorrowsETH)\n      .toString(),\n    totalBorrowsUSD: valueToZDBigNumber(variableBorrowsUSD)\n      .plus(stableBorrowsUSD)\n      .toString(),\n  };\n}\n\nexport function computeRawUserSummaryData(\n  poolReservesData: ReserveData[],\n  rawUserReserves: UserReserveData[],\n  userId: string,\n  usdPriceEth: BigNumberValue,\n  currentTimestamp: number\n): UserSummaryData {\n  let totalLiquidityETH = valueToZDBigNumber('0');\n  let totalCollateralETH = valueToZDBigNumber('0');\n  let totalBorrowsETH = valueToZDBigNumber('0');\n  let currentLtv = valueToBigNumber('0');\n  let currentLiquidationThreshold = valueToBigNumber('0');\n\n  const userReservesData = rawUserReserves\n    .map((userReserve) => {\n      const poolReserve = poolReservesData.find(\n        (reserve) => reserve.id === userReserve.reserve.id\n      );\n      if (!poolReserve) {\n        throw new Error(\n          'Reserve is not registered on platform, please contact support'\n        );\n      }\n      const computedUserReserve = computeUserReserveData(\n        poolReserve,\n        userReserve,\n        usdPriceEth,\n        currentTimestamp\n      );\n      totalLiquidityETH = totalLiquidityETH.plus(\n        computedUserReserve.underlyingBalanceETH\n      );\n      totalBorrowsETH = totalBorrowsETH\n        .plus(computedUserReserve.variableBorrowsETH)\n        .plus(computedUserReserve.stableBorrowsETH);\n\n      // asset enabled as collateral\n      if (\n        poolReserve.usageAsCollateralEnabled &&\n        userReserve.usageAsCollateralEnabledOnUser\n      ) {\n        totalCollateralETH = totalCollateralETH.plus(\n          computedUserReserve.underlyingBalanceETH\n        );\n        currentLtv = currentLtv.plus(\n          valueToBigNumber(\n            computedUserReserve.underlyingBalanceETH\n          ).multipliedBy(poolReserve.baseLTVasCollateral)\n        );\n        currentLiquidationThreshold = currentLiquidationThreshold.plus(\n          valueToBigNumber(\n            computedUserReserve.underlyingBalanceETH\n          ).multipliedBy(poolReserve.reserveLiquidationThreshold)\n        );\n      }\n      return computedUserReserve;\n    })\n    .sort((a, b) =>\n      a.reserve.symbol > b.reserve.symbol\n        ? 1\n        : a.reserve.symbol < b.reserve.symbol\n        ? -1\n        : 0\n    );\n\n  if (currentLtv.gt(0)) {\n    currentLtv = currentLtv\n      .div(totalCollateralETH)\n      .decimalPlaces(0, BigNumber.ROUND_DOWN);\n  }\n  if (currentLiquidationThreshold.gt(0)) {\n    currentLiquidationThreshold = currentLiquidationThreshold\n      .div(totalCollateralETH)\n      .decimalPlaces(0, BigNumber.ROUND_DOWN);\n  }\n\n  const healthFactor = calculateHealthFactorFromBalances(\n    totalCollateralETH,\n    totalBorrowsETH,\n    currentLiquidationThreshold\n  );\n\n  const totalCollateralUSD = totalCollateralETH\n    .multipliedBy(pow10(USD_DECIMALS))\n    .dividedBy(usdPriceEth)\n    .toString();\n\n  const totalLiquidityUSD = totalLiquidityETH\n    .multipliedBy(pow10(USD_DECIMALS))\n    .dividedBy(usdPriceEth)\n    .toString();\n\n  const totalBorrowsUSD = totalBorrowsETH\n    .multipliedBy(pow10(USD_DECIMALS))\n    .dividedBy(usdPriceEth)\n    .toString();\n\n  const availableBorrowsETH = calculateAvailableBorrowsETH(\n    totalCollateralETH,\n    totalBorrowsETH,\n    currentLtv\n  );\n\n  return {\n    totalLiquidityUSD,\n    totalCollateralUSD,\n    totalBorrowsUSD,\n    id: userId,\n    totalLiquidityETH: totalLiquidityETH.toString(),\n    totalCollateralETH: totalCollateralETH.toString(),\n    totalBorrowsETH: totalBorrowsETH.toString(),\n    availableBorrowsETH: availableBorrowsETH.toString(),\n    currentLoanToValue: currentLtv.toString(),\n    currentLiquidationThreshold: currentLiquidationThreshold.toString(),\n    healthFactor: healthFactor.toString(),\n    reservesData: userReservesData,\n  };\n}\n\nexport function formatUserSummaryData(\n  poolReservesData: ReserveData[],\n  rawUserReserves: UserReserveData[],\n  userId: string,\n  usdPriceEth: BigNumberValue,\n  currentTimestamp: number\n): UserSummaryData {\n  const userData = computeRawUserSummaryData(\n    poolReservesData,\n    rawUserReserves,\n    userId,\n    usdPriceEth,\n    currentTimestamp\n  );\n  const userReservesData = userData.reservesData.map(\n    ({ reserve, ...userReserve }): ComputedUserReserve => {\n      const reserveDecimals = reserve.decimals;\n      return {\n        ...userReserve,\n        reserve: {\n          ...reserve,\n          reserveLiquidationBonus: normalize(\n            valueToBigNumber(reserve.reserveLiquidationBonus).minus(\n              pow10(LTV_PRECISION)\n            ),\n            4\n          ),\n          liquidityRate: normalize(reserve.liquidityRate, RAY_DECIMALS),\n        },\n        scaledATokenBalance: normalize(\n          userReserve.scaledATokenBalance,\n          reserveDecimals\n        ),\n        stableBorrowRate: normalize(userReserve.stableBorrowRate, RAY_DECIMALS),\n        variableBorrowIndex: normalize(\n          userReserve.variableBorrowIndex,\n          RAY_DECIMALS\n        ),\n        underlyingBalance: normalize(\n          userReserve.underlyingBalance,\n          reserveDecimals\n        ),\n        underlyingBalanceETH: normalize(\n          userReserve.underlyingBalanceETH,\n          ETH_DECIMALS\n        ),\n        underlyingBalanceUSD: normalize(\n          userReserve.underlyingBalanceUSD,\n          USD_DECIMALS\n        ),\n        stableBorrows: normalize(userReserve.stableBorrows, reserveDecimals),\n        stableBorrowsETH: normalize(userReserve.stableBorrowsETH, ETH_DECIMALS),\n        stableBorrowsUSD: normalize(userReserve.stableBorrowsUSD, USD_DECIMALS),\n        variableBorrows: normalize(\n          userReserve.variableBorrows,\n          reserveDecimals\n        ),\n        variableBorrowsETH: normalize(\n          userReserve.variableBorrowsETH,\n          ETH_DECIMALS\n        ),\n        variableBorrowsUSD: normalize(\n          userReserve.variableBorrowsUSD,\n          USD_DECIMALS\n        ),\n        totalBorrows: normalize(userReserve.totalBorrows, reserveDecimals),\n        totalBorrowsETH: normalize(userReserve.totalBorrowsETH, ETH_DECIMALS),\n        totalBorrowsUSD: normalize(userReserve.totalBorrowsUSD, USD_DECIMALS),\n      };\n    }\n  );\n  return {\n    id: userData.id,\n    reservesData: userReservesData,\n    totalLiquidityETH: normalize(userData.totalLiquidityETH, ETH_DECIMALS),\n    totalLiquidityUSD: normalize(userData.totalLiquidityUSD, USD_DECIMALS),\n    totalCollateralETH: normalize(userData.totalCollateralETH, ETH_DECIMALS),\n    totalCollateralUSD: normalize(userData.totalCollateralUSD, USD_DECIMALS),\n    totalBorrowsETH: normalize(userData.totalBorrowsETH, ETH_DECIMALS),\n    totalBorrowsUSD: normalize(userData.totalBorrowsUSD, USD_DECIMALS),\n    availableBorrowsETH: normalize(userData.availableBorrowsETH, ETH_DECIMALS),\n    currentLoanToValue: normalize(userData.currentLoanToValue, 4),\n    currentLiquidationThreshold: normalize(\n      userData.currentLiquidationThreshold,\n      4\n    ),\n    healthFactor: userData.healthFactor,\n  };\n}\n\nexport function formatReserves(\n  reserves: ReserveData[],\n  currentTimestamp: number,\n  reserveIndexes30DaysAgo?: ReserveRatesData[]\n): ComputedReserveData[] {\n  return reserves.map((reserve) => {\n    const reserve30DaysAgo = reserveIndexes30DaysAgo?.find(\n      (res) => res.id === reserve.id\n    )?.paramsHistory?.[0];\n\n    const availableLiquidity = normalize(\n      reserve.availableLiquidity,\n      reserve.decimals\n    );\n\n    const totalVariableDebt = normalize(\n      rayMul(reserve.totalScaledVariableDebt, reserve.variableBorrowIndex),\n      reserve.decimals\n    );\n    const totalStableDebt = normalize(\n      rayMul(\n        reserve.totalPrincipalStableDebt,\n        calculateCompoundedInterest(\n          reserve.averageStableRate,\n          currentTimestamp,\n          reserve.stableDebtLastUpdateTimestamp\n        )\n      ),\n      reserve.decimals\n    );\n\n    const totalDebt = valueToBigNumber(totalStableDebt).plus(totalVariableDebt);\n\n    const totalLiquidity = totalDebt.plus(availableLiquidity).toString();\n    const utilizationRate =\n      totalLiquidity !== '0'\n        ? totalDebt.dividedBy(totalLiquidity).toString()\n        : '0';\n    return {\n      ...reserve,\n      totalVariableDebt,\n      totalStableDebt,\n      totalLiquidity,\n      availableLiquidity,\n      utilizationRate,\n      totalDebt: totalDebt.toString(),\n      price: {\n        ...reserve.price,\n        priceInEth: normalize(reserve.price.priceInEth, ETH_DECIMALS),\n      },\n      baseLTVasCollateral: normalize(\n        reserve.baseLTVasCollateral,\n        LTV_PRECISION\n      ),\n      reserveFactor: normalize(reserve.reserveFactor, LTV_PRECISION),\n      variableBorrowRate: normalize(reserve.variableBorrowRate, RAY_DECIMALS),\n      avg30DaysVariableBorrowRate: reserve30DaysAgo\n        ? calculateAverageRate(\n            reserve30DaysAgo.variableBorrowIndex,\n            reserve.variableBorrowIndex,\n            reserve30DaysAgo.timestamp,\n            reserve.lastUpdateTimestamp\n          )\n        : undefined,\n      avg30DaysLiquidityRate: reserve30DaysAgo\n        ? calculateAverageRate(\n            reserve30DaysAgo.liquidityIndex,\n            reserve.liquidityIndex,\n            reserve30DaysAgo.timestamp,\n            reserve.lastUpdateTimestamp\n          )\n        : undefined,\n\n      stableBorrowRate: normalize(reserve.stableBorrowRate, RAY_DECIMALS),\n      liquidityRate: normalize(reserve.liquidityRate, RAY_DECIMALS),\n      liquidityIndex: normalize(reserve.liquidityIndex, RAY_DECIMALS),\n      reserveLiquidationThreshold: normalize(\n        reserve.reserveLiquidationThreshold,\n        4\n      ),\n      reserveLiquidationBonus: normalize(\n        valueToBigNumber(reserve.reserveLiquidationBonus).minus(\n          10 ** LTV_PRECISION\n        ),\n        4\n      ),\n      totalScaledVariableDebt: normalize(\n        reserve.totalScaledVariableDebt,\n        reserve.decimals\n      ),\n      totalPrincipalStableDebt: normalize(\n        reserve.totalPrincipalStableDebt,\n        reserve.decimals\n      ),\n      variableBorrowIndex: normalize(reserve.variableBorrowIndex, RAY_DECIMALS),\n    };\n  });\n}\n","import { providers, BigNumber, BytesLike, PopulatedTransaction } from 'ethers';\n\nexport type tEthereumAddress = string;\nexport type tStringCurrencyUnits = string; // ex 2.5 eth\nexport type tStringDecimalUnits = string; // ex 2500000000000000000\nexport type ENS = string; // something.eth\n\n/** InterestRate options */\nexport enum InterestRate {\n  None = 'None',\n  Stable = 'Stable',\n  Variable = 'Variable',\n}\n\nexport enum Market {\n  Proto = 'proto',\n  // Uniswap = 'uniswap',\n}\n\nexport enum Network {\n  mainnet = 'mainnet',\n  ropsten = 'ropsten',\n  kovan = 'kovan',\n}\n\nexport enum ChainId {\n  mainnet = 1,\n  ropsten = 3,\n  kovan = 42,\n}\n\nexport enum eEthereumTxType {\n  ERC20_APPROVAL = 'ERC20_APPROVAL',\n  DLP_ACTION = 'DLP_ACTION',\n  GOVERNANCE_ACTION = 'GOVERNANCE_ACTION',\n  GOV_DELEGATION_ACTION = 'GOV_DELEGATION_ACTION',\n  STAKE_ACTION = 'STAKE_ACTION',\n  MIGRATION_LEND_AAVE = 'MIGRATION_LEND_AAVE',\n  FAUCET_MINT = 'FAUCET_MINT',\n}\n\nexport enum ProtocolAction {\n  default = 'default',\n  withdraw = 'withdraw',\n  deposit = 'deposit',\n  liquidationCall = 'liquidationCall',\n  liquidationFlash = 'liquidationFlash',\n  repay = 'repay',\n  swapCollateral = 'swapCollateral',\n  repayCollateral = 'repayCollateral',\n  withdrawETH = 'withdrawETH',\n  borrowETH = 'borrwoETH',\n}\n\nexport enum GovernanceVote {\n  Abstain = 0,\n  Yes = 1,\n  No = 2,\n}\n\nexport enum Stake {\n  Aave = 'Aave',\n  Balancer = 'Balancer',\n}\n\nexport type GasRecommendationType = {\n  [action: string]: {\n    limit: string;\n    recommended: string;\n  };\n};\n\nexport type GeneratedTx = {\n  tx: transactionType;\n  gas: {\n    price: string;\n    limit: string;\n  };\n};\n\nexport type transactionType = {\n  value?: string;\n  from?: string;\n  to?: string;\n  nonce?: number;\n  gasLimit?: BigNumber;\n  gasPrice?: BigNumber;\n  data?: string;\n  chainId?: number;\n};\n\nexport type AddressModel = {\n  ADDRESS_PROVIDER_ADDRESS: tEthereumAddress;\n  LENDINGPOOL_ADDRESS: tEthereumAddress;\n  LENDINGPOOL_CORE_ADDRESS: tEthereumAddress;\n  SYNTHETIX_PROXY_ADDRESS: tEthereumAddress;\n  GOVERNANCE_PROTO_CONTRACT: tEthereumAddress;\n  LEND_TO_AAVE_MIGRATOR: tEthereumAddress;\n  WETH_GATEWAY: tEthereumAddress;\n  FAUCET: tEthereumAddress;\n  SWAP_COLLATERAL_ADAPTER: tEthereumAddress;\n  REPAY_WITH_COLLATERAL_ADAPTER: tEthereumAddress;\n  AAVE_GOVERNANCE_V2: tEthereumAddress;\n  AAVE_GOVERNANCE_V2_EXECUTOR_SHORT: tEthereumAddress;\n  AAVE_GOVERNANCE_V2_EXECUTOR_LONG: tEthereumAddress;\n  AAVE_GOVERNANCE_V2_HELPER: tEthereumAddress;\n  FLASHLIQUIDATION: tEthereumAddress;\n};\n\nexport type tCommonContractAddressBetweenMarkets = Pick<\n  AddressModel,\n  | 'SYNTHETIX_PROXY_ADDRESS'\n  | 'GOVERNANCE_PROTO_CONTRACT'\n  | 'LEND_TO_AAVE_MIGRATOR'\n  | 'WETH_GATEWAY'\n  | 'FAUCET'\n  | 'SWAP_COLLATERAL_ADAPTER'\n  | 'REPAY_WITH_COLLATERAL_ADAPTER'\n  | 'FLASHLIQUIDATION'\n>;\n\nexport type tDistinctContractAddressBetweenMarkets = Pick<\n  AddressModel,\n  | 'ADDRESS_PROVIDER_ADDRESS'\n  | 'LENDINGPOOL_ADDRESS'\n  | 'LENDINGPOOL_CORE_ADDRESS'\n>;\n\nexport type tDistinctContractAddressBetweenMarketsV2 = Pick<\n  AddressModel,\n  'LENDINGPOOL_ADDRESS'\n>;\n\nexport type tDistinctGovernanceV2Addresses = Pick<\n  AddressModel,\n  | 'AAVE_GOVERNANCE_V2'\n  | 'AAVE_GOVERNANCE_V2_EXECUTOR_SHORT'\n  | 'AAVE_GOVERNANCE_V2_EXECUTOR_LONG'\n  | 'AAVE_GOVERNANCE_V2_HELPER'\n>;\n\nexport type tdistinctStakingAddressesBetweenTokens = {\n  TOKEN_STAKING_ADDRESS: tEthereumAddress;\n  STAKING_HELPER_ADDRESS: tEthereumAddress;\n  canUsePermit: boolean;\n};\n\nexport type ContractAddresses = {\n  [contractName: string]: tEthereumAddress;\n};\n\nexport type Configuration = {\n  network: Network;\n  provider:\n    | providers.JsonRpcProvider\n    | providers.BaseProvider\n    | providers.Web3Provider;\n};\n\nexport type EthereumTransactionTypeExtended = {\n  txType: eEthereumTxType;\n  tx: () => Promise<transactionType>;\n  gas?: GasResponse;\n};\n\nexport type TransactionGenerationMethod = {\n  rawTxMethod: () => Promise<PopulatedTransaction>;\n  from: tEthereumAddress;\n  value?: string;\n  gasSurplus?: number;\n  action?: ProtocolAction;\n};\n\nexport type TransactionGasGenerationMethod = {\n  txCallback: () => Promise<transactionType>;\n  action?: ProtocolAction;\n};\n\nexport type GasType = {\n  gasLimit: string | undefined;\n  gasPrice: string;\n};\nexport type GasResponse = () => Promise<GasType | null>;\n\nexport type TokenMetadataType = {\n  name: string;\n  symbol: string;\n  decimals: number;\n  address: string;\n};\n\nexport type DefaultProviderKeys = {\n  etherscan?: string;\n  infura?: string;\n  alchemy?: string;\n};\n\nexport type GovernanceConfigType = {\n  [network: string]: tDistinctGovernanceV2Addresses;\n};\nexport type StakingConfigType = {\n  [sToken: string]: {\n    [network: string]: tdistinctStakingAddressesBetweenTokens;\n  };\n};\n\nexport type CommonConfigType = {\n  [network: string]: tCommonContractAddressBetweenMarkets;\n};\n\nexport type LendingPoolConfigType = {\n  [pool: string]: {\n    [network: string]: tDistinctContractAddressBetweenMarketsV2;\n  };\n};\n\nexport type EnabledNetworksType = {\n  staking: {\n    [sToken: string]: Network[];\n  };\n  lendingPool: {\n    [market: string]: Network[];\n  };\n  governance: Network[];\n  wethGateway: Network[];\n  faucet: Network[];\n  liquiditySwapAdapter: Network[];\n  repayWithCollateralAdapter: Network[];\n  aaveGovernanceV2: Network[];\n};\n\nexport type PermitSignature = {\n  amount: tStringCurrencyUnits;\n  deadline: string;\n  v: number;\n  r: BytesLike;\n  s: BytesLike;\n};\n\nexport type FlashLoanParams = {\n  assetToSwapToList: tEthereumAddress[]; // List of the addresses of the reserve to be swapped to and deposited\n  minAmountsToReceive: string[]; // List of min amounts to be received from the swap\n  swapAllBalance: boolean[]; // Flag indicating if all the user balance should be swapped\n  permitAmount: string[]; // List of amounts for the permit signature\n  deadline: string[]; // List of deadlines for the permit signature\n  v: number[]; // List of v param for the permit signature\n  r: BytesLike[]; // List of r param for the permit signature\n  s: BytesLike[]; // List of s param for the permit signature\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import {\n  CommonConfigType,\n  GovernanceConfigType,\n  LendingPoolConfigType,\n  Market,\n  Network,\n} from '../../types';\n\nexport const commonContractAddressBetweenMarketsV2: CommonConfigType = {\n  [Network.kovan]: {\n    SYNTHETIX_PROXY_ADDRESS: '',\n    GOVERNANCE_PROTO_CONTRACT: '0x8134929c3dcb1b8b82f27f53424b959fb82182f2',\n    LEND_TO_AAVE_MIGRATOR: '0x8cC8965FEf45a448bdbe3C749683b280eF2E17Ea',\n    WETH_GATEWAY: '0xf8aC10E65F2073460aAD5f28E1EABE807DC287CF',\n    FAUCET: '0x600103d518cC5E8f3319D532eB4e5C268D32e604',\n    SWAP_COLLATERAL_ADAPTER: '0xC18451d36aA370fDACe8d45839bF975F48f7AEa1',\n    REPAY_WITH_COLLATERAL_ADAPTER: '0xf86Be05f535EC2d217E4c6116B3fa147ee5C05A1',\n    FLASHLIQUIDATION: '0x9D50F0b23b1805773f607F0B4678d724322B7AC2',\n  },\n  [Network.ropsten]: {\n    SYNTHETIX_PROXY_ADDRESS: '',\n    GOVERNANCE_PROTO_CONTRACT: '',\n    LEND_TO_AAVE_MIGRATOR: '',\n    WETH_GATEWAY: '',\n    FAUCET: '0xcCB8f5183065AF6C40d3A13ae669FB8F92A11C05',\n    SWAP_COLLATERAL_ADAPTER: '',\n    REPAY_WITH_COLLATERAL_ADAPTER: '',\n    FLASHLIQUIDATION: '',\n  },\n  [Network.mainnet]: {\n    SYNTHETIX_PROXY_ADDRESS: '0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f',\n    GOVERNANCE_PROTO_CONTRACT: '0x8a2efd9a790199f4c94c6effe210fce0b4724f52',\n    LEND_TO_AAVE_MIGRATOR: '0x317625234562b1526ea2fac4030ea499c5291de4',\n    WETH_GATEWAY: '0xDcD33426BA191383f1c9B431A342498fdac73488',\n    FAUCET: '',\n    SWAP_COLLATERAL_ADAPTER: '0x63a3f444e97d14e671e7ee323c4234c8095e3516',\n    REPAY_WITH_COLLATERAL_ADAPTER: '0x498c5431eb517101582988fbb36431ddaac8f4b1',\n    FLASHLIQUIDATION: '',\n  },\n};\n\nexport const distinctContractAddressBetweenMarketsV2: LendingPoolConfigType = {\n  [Market.Proto]: {\n    [Network.kovan]: {\n      LENDINGPOOL_ADDRESS: '0xE0fBa4Fc209b4948668006B2bE61711b7f465bAe',\n    },\n    [Network.ropsten]: {\n      LENDINGPOOL_ADDRESS: '',\n    },\n    [Network.mainnet]: {\n      LENDINGPOOL_ADDRESS: '0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9',\n    },\n  },\n};\n\nexport const aaveGovernanceV2Addresses: GovernanceConfigType = {\n  [Network.kovan]: {\n    AAVE_GOVERNANCE_V2: '0xc2eBaB3Bac8f2f5028f5C7317027A41EBFCa31D2',\n    AAVE_GOVERNANCE_V2_EXECUTOR_SHORT:\n      '0x462eD5dc919BE6C96639D5f31ab919EBA8F31831', // executor for testing\n    AAVE_GOVERNANCE_V2_EXECUTOR_LONG:\n      '0x7e5195b0A6a60b371Ba3276032CF6958eADFA652',\n    AAVE_GOVERNANCE_V2_HELPER: '0xffd5BEb5712952FC9a9DDC7499487422B29Fdda6',\n  },\n  [Network.ropsten]: {\n    AAVE_GOVERNANCE_V2: '',\n    AAVE_GOVERNANCE_V2_EXECUTOR_SHORT: '',\n    AAVE_GOVERNANCE_V2_EXECUTOR_LONG: '',\n    AAVE_GOVERNANCE_V2_HELPER: '',\n  },\n  [Network.mainnet]: {\n    AAVE_GOVERNANCE_V2: '0xEC568fffba86c094cf06b22134B23074DFE2252c',\n    AAVE_GOVERNANCE_V2_EXECUTOR_SHORT:\n      '0x61910EcD7e8e942136CE7Fe7943f956cea1CC2f7',\n    AAVE_GOVERNANCE_V2_EXECUTOR_LONG:\n      '0xEE56e2B3D491590B5b31738cC34d5232F378a8D5',\n    AAVE_GOVERNANCE_V2_HELPER: '0x16ff7583ea21055bf5f929ec4b896d997ff35847',\n  },\n};\n","import { BigNumber, constants } from 'ethers';\nimport {\n  EnabledNetworksType,\n  GasRecommendationType,\n  Market,\n  Network,\n  ProtocolAction,\n  Stake,\n  StakingConfigType,\n} from '../types';\n\nexport const DEFAULT_NULL_VALUE_ON_TX = BigNumber.from(0).toHexString();\nexport const DEFAULT_APPROVE_AMOUNT = constants.MaxUint256.toString();\nexport const MAX_UINT_AMOUNT =\n  '115792089237316195423570985008687907853269984665640564039457584007913129639935';\nexport const SUPER_BIG_ALLOWANCE_NUMBER =\n  '11579208923731619542357098500868790785326998466564056403945758400791';\nexport const API_ETH_MOCK_ADDRESS =\n  '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE';\nexport const uniswapEthAmount = '0.1';\nexport const SURPLUS = '0.05';\n\nexport const gasLimitRecommendations: GasRecommendationType = {\n  [ProtocolAction.default]: {\n    limit: '210000',\n    recommended: '210000',\n  },\n  [ProtocolAction.deposit]: {\n    limit: '300000',\n    recommended: '300000',\n  },\n  [ProtocolAction.withdraw]: {\n    limit: '230000',\n    recommended: '300000',\n  },\n  [ProtocolAction.liquidationCall]: {\n    limit: '700000',\n    recommended: '700000',\n  },\n  [ProtocolAction.liquidationFlash]: {\n    limit: '995000',\n    recommended: '995000',\n  },\n  [ProtocolAction.repay]: {\n    limit: '300000',\n    recommended: '300000',\n  },\n  [ProtocolAction.borrowETH]: {\n    limit: '450000',\n    recommended: '450000',\n  },\n  [ProtocolAction.withdrawETH]: {\n    limit: '640000',\n    recommended: '640000',\n  },\n  [ProtocolAction.swapCollateral]: {\n    limit: '700000',\n    recommended: '700000',\n  },\n  [ProtocolAction.repayCollateral]: {\n    limit: '700000',\n    recommended: '700000',\n  },\n};\n\nexport const distinctStakingAddressesBetweenTokens: StakingConfigType = {\n  [Stake.Aave]: {\n    [Network.kovan]: {\n      canUsePermit: true,\n      TOKEN_STAKING_ADDRESS: '0xf2fbf9A6710AfDa1c4AaB2E922DE9D69E0C97fd2',\n      STAKING_HELPER_ADDRESS: '0xf267aCc8BF1D8b41c89b6dc1a0aD8439dfbc890c',\n    },\n    [Network.ropsten]: {\n      canUsePermit: false,\n      TOKEN_STAKING_ADDRESS: '',\n      STAKING_HELPER_ADDRESS: '',\n    },\n    [Network.mainnet]: {\n      canUsePermit: true,\n      TOKEN_STAKING_ADDRESS: '0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      STAKING_HELPER_ADDRESS: '0xce0424653fb2fd48ed1b621bdbd60db16b2e388a',\n    },\n  },\n  [Stake.Balancer]: {\n    [Network.kovan]: {\n      canUsePermit: false,\n      TOKEN_STAKING_ADDRESS: '0x31ce45Ab6E26C72c47C52c27498D460099545ef2',\n      STAKING_HELPER_ADDRESS: '',\n    },\n    [Network.ropsten]: {\n      canUsePermit: false,\n      TOKEN_STAKING_ADDRESS: '',\n      STAKING_HELPER_ADDRESS: '',\n    },\n    [Network.mainnet]: {\n      canUsePermit: false,\n      TOKEN_STAKING_ADDRESS: '0xa1116930326D21fB917d5A27F1E9943A9595fb47',\n      STAKING_HELPER_ADDRESS: '',\n    },\n  },\n};\n\nexport const enabledNetworksByService: EnabledNetworksType = {\n  staking: {\n    [Stake.Balancer]: [Network.kovan, Network.mainnet],\n    [Stake.Aave]: [Network.kovan, Network.mainnet],\n  },\n  lendingPool: {\n    [Market.Proto]: [Network.kovan, Network.mainnet],\n  },\n  governance: [Network.kovan, Network.mainnet],\n  wethGateway: [Network.kovan, Network.mainnet],\n  faucet: [Network.kovan],\n  liquiditySwapAdapter: [Network.kovan, Network.mainnet],\n  repayWithCollateralAdapter: [Network.kovan, Network.mainnet],\n  aaveGovernanceV2: [Network.kovan, Network.mainnet],\n};\n\nexport * from './v2/addresses';\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IAaveGovernanceV2 } from \"../IAaveGovernanceV2\";\n\nexport class IAaveGovernanceV2__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IAaveGovernanceV2 {\n    return new Contract(address, _abi, signerOrProvider) as IAaveGovernanceV2;\n  }\n}\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"executor\",\n        type: \"address\",\n      },\n    ],\n    name: \"ExecutorAuthorized\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"executor\",\n        type: \"address\",\n      },\n    ],\n    name: \"ExecutorUnauthorized\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newStrategy\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"initiatorChange\",\n        type: \"address\",\n      },\n    ],\n    name: \"GovernanceStrategyChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ProposalCanceled\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"creator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"contract IExecutorWithTimelock\",\n        name: \"executor\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"string[]\",\n        name: \"signatures\",\n        type: \"string[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool[]\",\n        name: \"withDelegatecalls\",\n        type: \"bool[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"startBlock\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"endBlock\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"strategy\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"ipfsHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"ProposalCreated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"initiatorExecution\",\n        type: \"address\",\n      },\n    ],\n    name: \"ProposalExecuted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"executionTime\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"initiatorQueueing\",\n        type: \"address\",\n      },\n    ],\n    name: \"ProposalQueued\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"voter\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"support\",\n        type: \"bool\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"votingPower\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"VoteEmitted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newVotingDelay\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"initiatorChange\",\n        type: \"address\",\n      },\n    ],\n    name: \"VotingDelayChanged\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"__abdicate\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"executors\",\n        type: \"address[]\",\n      },\n    ],\n    name: \"authorizeExecutors\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"cancel\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IExecutorWithTimelock\",\n        name: \"executor\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"string[]\",\n        name: \"signatures\",\n        type: \"string[]\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"bool[]\",\n        name: \"withDelegatecalls\",\n        type: \"bool[]\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"ipfsHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"create\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"execute\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getGovernanceStrategy\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getGuardian\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getProposalById\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"id\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"creator\",\n            type: \"address\",\n          },\n          {\n            internalType: \"contract IExecutorWithTimelock\",\n            name: \"executor\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"targets\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[]\",\n            name: \"values\",\n            type: \"uint256[]\",\n          },\n          {\n            internalType: \"string[]\",\n            name: \"signatures\",\n            type: \"string[]\",\n          },\n          {\n            internalType: \"bytes[]\",\n            name: \"calldatas\",\n            type: \"bytes[]\",\n          },\n          {\n            internalType: \"bool[]\",\n            name: \"withDelegatecalls\",\n            type: \"bool[]\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"startBlock\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"endBlock\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"executionTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"forVotes\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"againstVotes\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"executed\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"canceled\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"address\",\n            name: \"strategy\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"ipfsHash\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct IAaveGovernanceV2.ProposalWithoutVotes\",\n        name: \"\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getProposalState\",\n    outputs: [\n      {\n        internalType: \"enum IAaveGovernanceV2.ProposalState\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getProposalsCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"voter\",\n        type: \"address\",\n      },\n    ],\n    name: \"getVoteOnProposal\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"bool\",\n            name: \"support\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"uint248\",\n            name: \"votingPower\",\n            type: \"uint248\",\n          },\n        ],\n        internalType: \"struct IAaveGovernanceV2.Vote\",\n        name: \"\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getVotingDelay\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"executor\",\n        type: \"address\",\n      },\n    ],\n    name: \"isExecutorAuthorized\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"queue\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"governanceStrategy\",\n        type: \"address\",\n      },\n    ],\n    name: \"setGovernanceStrategy\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"votingDelay\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setVotingDelay\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"support\",\n        type: \"bool\",\n      },\n    ],\n    name: \"submitVote\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"support\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"submitVoteBySignature\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"executors\",\n        type: \"address[]\",\n      },\n    ],\n    name: \"unauthorizeExecutors\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IAaveStakingHelper } from \"../IAaveStakingHelper\";\n\nexport class IAaveStakingHelper__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IAaveStakingHelper {\n    return new Contract(address, _abi, signerOrProvider) as IAaveStakingHelper;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"stake\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IDebtTokenBase } from \"../IDebtTokenBase\";\n\nexport class IDebtTokenBase__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IDebtTokenBase {\n    return new Contract(address, _abi, signerOrProvider) as IDebtTokenBase;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"delegatee\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approveDelegation\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"fromUser\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"toUser\",\n        type: \"address\",\n      },\n    ],\n    name: \"borrowAllowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IERC20Detailed } from \"../IERC20Detailed\";\n\nexport class IERC20Detailed__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IERC20Detailed {\n    return new Contract(address, _abi, signerOrProvider) as IERC20Detailed;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IFaucet } from \"../IFaucet\";\n\nexport class IFaucet__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IFaucet {\n    return new Contract(address, _abi, signerOrProvider) as IFaucet;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n    ],\n    name: \"getMinter\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IGovernancePowerDelegationToken } from \"../IGovernancePowerDelegationToken\";\n\nexport class IGovernancePowerDelegationToken__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IGovernancePowerDelegationToken {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as IGovernancePowerDelegationToken;\n  }\n}\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"delegator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"delegatee\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"enum IGovernancePowerDelegationToken.DelegationType\",\n        name: \"delegationType\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"DelegateChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"enum IGovernancePowerDelegationToken.DelegationType\",\n        name: \"delegationType\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"DelegatedPowerChanged\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"_nonces\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"delegatee\",\n        type: \"address\",\n      },\n    ],\n    name: \"delegate\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"delegatee\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"nonce\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"expiry\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"delegateBySig\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"delegatee\",\n        type: \"address\",\n      },\n      {\n        internalType: \"enum IGovernancePowerDelegationToken.DelegationType\",\n        name: \"delegationType\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"delegateByType\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"delegatee\",\n        type: \"address\",\n      },\n      {\n        internalType: \"enum IGovernancePowerDelegationToken.DelegationType\",\n        name: \"delegationType\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"nonce\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"expiry\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"delegateByTypeBySig\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"delegator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"enum IGovernancePowerDelegationToken.DelegationType\",\n        name: \"delegationType\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"getDelegateeByType\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"enum IGovernancePowerDelegationToken.DelegationType\",\n        name: \"delegationType\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"getPowerAtBlock\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        internalType: \"enum IGovernancePowerDelegationToken.DelegationType\",\n        name: \"delegationType\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"getPowerCurrent\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"totalSupplyAt\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IGovernanceStrategy } from \"../IGovernanceStrategy\";\n\nexport class IGovernanceStrategy__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IGovernanceStrategy {\n    return new Contract(address, _abi, signerOrProvider) as IGovernanceStrategy;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [],\n    name: \"AAVE\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"STK_AAVE\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getPropositionPowerAt\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getTotalPropositionSupplyAt\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getTotalVotingSupplyAt\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getVotingPowerAt\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IGovernanceV2Helper } from \"../IGovernanceV2Helper\";\n\nexport class IGovernanceV2Helper__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IGovernanceV2Helper {\n    return new Contract(address, _abi, signerOrProvider) as IGovernanceV2Helper;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"contract IAaveGovernanceV2\",\n        name: \"governance\",\n        type: \"address\",\n      },\n    ],\n    name: \"getProposal\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"totalVotingSupply\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"minimumQuorum\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"minimumDiff\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"executionTimeWithGracePeriod\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"proposalCreated\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"id\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"creator\",\n            type: \"address\",\n          },\n          {\n            internalType: \"contract IExecutorWithTimelock\",\n            name: \"executor\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"targets\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[]\",\n            name: \"values\",\n            type: \"uint256[]\",\n          },\n          {\n            internalType: \"string[]\",\n            name: \"signatures\",\n            type: \"string[]\",\n          },\n          {\n            internalType: \"bytes[]\",\n            name: \"calldatas\",\n            type: \"bytes[]\",\n          },\n          {\n            internalType: \"bool[]\",\n            name: \"withDelegatecalls\",\n            type: \"bool[]\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"startBlock\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"endBlock\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"executionTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"forVotes\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"againstVotes\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"executed\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"canceled\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"address\",\n            name: \"strategy\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"ipfsHash\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"enum IAaveGovernanceV2.ProposalState\",\n            name: \"proposalState\",\n            type: \"uint8\",\n          },\n        ],\n        internalType: \"struct IGovernanceV2Helper.ProposalStats\",\n        name: \"proposalStats\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"skip\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"limit\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"contract IAaveGovernanceV2\",\n        name: \"governance\",\n        type: \"address\",\n      },\n    ],\n    name: \"getProposals\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"totalVotingSupply\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"minimumQuorum\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"minimumDiff\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"executionTimeWithGracePeriod\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"proposalCreated\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"id\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"creator\",\n            type: \"address\",\n          },\n          {\n            internalType: \"contract IExecutorWithTimelock\",\n            name: \"executor\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"targets\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[]\",\n            name: \"values\",\n            type: \"uint256[]\",\n          },\n          {\n            internalType: \"string[]\",\n            name: \"signatures\",\n            type: \"string[]\",\n          },\n          {\n            internalType: \"bytes[]\",\n            name: \"calldatas\",\n            type: \"bytes[]\",\n          },\n          {\n            internalType: \"bool[]\",\n            name: \"withDelegatecalls\",\n            type: \"bool[]\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"startBlock\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"endBlock\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"executionTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"forVotes\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"againstVotes\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"executed\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"canceled\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"address\",\n            name: \"strategy\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"ipfsHash\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"enum IAaveGovernanceV2.ProposalState\",\n            name: \"proposalState\",\n            type: \"uint8\",\n          },\n        ],\n        internalType: \"struct IGovernanceV2Helper.ProposalStats[]\",\n        name: \"proposalsStats\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"tokens\",\n        type: \"address[]\",\n      },\n    ],\n    name: \"getTokensPower\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"votingPower\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"delegatedAddressVotingPower\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"propositionPower\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"delegatedAddressPropositionPower\",\n            type: \"address\",\n          },\n        ],\n        internalType: \"struct IGovernanceV2Helper.Power[]\",\n        name: \"power\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { ILendingPool } from \"../ILendingPool\";\n\nexport class ILendingPool__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ILendingPool {\n    return new Contract(address, _abi, signerOrProvider) as ILendingPool;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [],\n    name: \"FLASHLOAN_PREMIUM_TOTAL\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"reserve\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"interestRateMode\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"referralCode\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"address\",\n        name: \"onBehalfOf\",\n        type: \"address\",\n      },\n    ],\n    name: \"borrow\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"reserve\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"onBehalfOf\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"referralCode\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"deposit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"assets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"modes\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"onBehalfOf\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"params\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"referralCode\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"flashLoan\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"collateral\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"reserve\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"purchaseAmount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"receiveAToken\",\n        type: \"bool\",\n      },\n    ],\n    name: \"liquidationCall\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"reserve\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"rateMode\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"onBehalfOf\",\n        type: \"address\",\n      },\n    ],\n    name: \"repay\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"reserve\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"useAsCollateral\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setUserUseReserveAsCollateral\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"reserve\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"rateMode\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapBorrowRateMode\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"reserve\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n    ],\n    name: \"withdraw\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { ILendToAaveMigrator } from \"../ILendToAaveMigrator\";\n\nexport class ILendToAaveMigrator__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ILendToAaveMigrator {\n    return new Contract(address, _abi, signerOrProvider) as ILendToAaveMigrator;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [],\n    name: \"LEND\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"migrateFromLEND\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IMinter } from \"../IMinter\";\n\nexport class IMinter__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IMinter {\n    return new Contract(address, _abi, signerOrProvider) as IMinter;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [],\n    name: \"isEthRequired\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IRepayWithCollateral } from \"../IRepayWithCollateral\";\n\nexport class IRepayWithCollateral__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IRepayWithCollateral {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as IRepayWithCollateral;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"collateralAsset\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"debtAsset\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"collateralAmount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"debtRepayAmount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"debtRateMode\",\n        type: \"uint256\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"deadline\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"v\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"r\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"s\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct IRepayWithCollateral.PermitSignature\",\n        name: \"permitSignature\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"useEthPath\",\n        type: \"bool\",\n      },\n    ],\n    name: \"swapAndRepay\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IStakedToken } from \"../IStakedToken\";\n\nexport class IStakedToken__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IStakedToken {\n    return new Contract(address, _abi, signerOrProvider) as IStakedToken;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [],\n    name: \"REWARD_TOKEN\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"STAKED_TOKEN\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"claimRewards\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"cooldown\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"redeem\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"onBehalfOf\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"stake\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { ISwapCollateral } from \"../ISwapCollateral\";\n\nexport class ISwapCollateral__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ISwapCollateral {\n    return new Contract(address, _abi, signerOrProvider) as ISwapCollateral;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"assetToSwapFromList\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"assetToSwapToList\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amountToSwapList\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"minAmountsToReceive\",\n        type: \"uint256[]\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"deadline\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"v\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"r\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"s\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct ISwapCollateral.PermitSignature[]\",\n        name: \"permitParams\",\n        type: \"tuple[]\",\n      },\n      {\n        internalType: \"bool[]\",\n        name: \"useEthPath\",\n        type: \"bool[]\",\n      },\n    ],\n    name: \"swapAndDeposit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { ISynthetix } from \"../ISynthetix\";\n\nexport class ISynthetix__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ISynthetix {\n    return new Contract(address, _abi, signerOrProvider) as ISynthetix;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferableSynthetix\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"transferable\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IWETHGateway } from \"../IWETHGateway\";\n\nexport class IWETHGateway__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IWETHGateway {\n    return new Contract(address, _abi, signerOrProvider) as IWETHGateway;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"interesRateMode\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"referralCode\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"borrowETH\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"onBehalfOf\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"referralCode\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"depositETH\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"rateMode\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"onBehalfOf\",\n        type: \"address\",\n      },\n    ],\n    name: \"repayETH\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"onBehalfOf\",\n        type: \"address\",\n      },\n    ],\n    name: \"withdrawETH\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","import BigNumber from 'bignumber.js';\nimport {\n  API_ETH_MOCK_ADDRESS,\n  DEFAULT_NULL_VALUE_ON_TX,\n  uniswapEthAmount,\n} from '../config';\nimport { tStringDecimalUnits } from '../types';\n\nexport const parseNumber = (value: string, decimals: number): string => {\n  return new BigNumber(value)\n    .multipliedBy(new BigNumber(10).pow(decimals))\n    .toFixed(0);\n};\n\nexport const decimalsToCurrencyUnits = (\n  value: string,\n  decimals: number\n): string =>\n  new BigNumber(value).div(new BigNumber(10).pow(decimals)).toFixed();\n\nexport const getTxValue = (reserve: string, amount: string): string => {\n  return reserve.toLowerCase() === API_ETH_MOCK_ADDRESS.toLowerCase()\n    ? amount\n    : DEFAULT_NULL_VALUE_ON_TX;\n};\n\nexport const mintAmountsPerToken: { [token: string]: tStringDecimalUnits } = {\n  AAVE: parseNumber('100', 18),\n  BAT: parseNumber('100000', 18),\n  BUSD: parseNumber('10000', 18),\n  DAI: parseNumber('10000', 18),\n  ENJ: parseNumber('100000', 18),\n  KNC: parseNumber('10000', 18),\n  LEND: parseNumber('1000', 18), // Not available on v2, but to support v1 faucet\n  LINK: parseNumber('1000', 18),\n  MANA: parseNumber('100000', 18),\n  MKR: parseNumber('10', 18),\n  REN: parseNumber('10000', 18),\n  REP: parseNumber('1000', 18),\n  SNX: parseNumber('100', 18),\n  SUSD: parseNumber('10000', 18),\n  TUSD: '0', // The TusdMinter contract already mints the maximum\n  UNI: parseNumber('1000', 18),\n  USDC: parseNumber('10000', 6),\n  USDT: parseNumber('10000', 6),\n  WBTC: parseNumber('1', 8),\n  YFI: parseNumber('1', 18),\n  ZRX: parseNumber('100000', 18),\n  UNIUSDC: parseNumber(uniswapEthAmount, 6),\n  UNIDAI: parseNumber(uniswapEthAmount, 18),\n  UNIUSDT: parseNumber(uniswapEthAmount, 6),\n  UNIDAIETH: parseNumber(uniswapEthAmount, 18),\n  UNIUSDCETH: parseNumber(uniswapEthAmount, 18),\n  UNISETHETH: parseNumber(uniswapEthAmount, 18),\n  UNILENDETH: parseNumber(uniswapEthAmount, 18),\n  UNILINKETH: parseNumber(uniswapEthAmount, 18),\n  UNIMKRETH: parseNumber(uniswapEthAmount, 18),\n};\n\nexport const canBeEnsAddress = (ensAddress: string): boolean => {\n  return ensAddress.toLowerCase().endsWith('.eth');\n};\n","/* eslint-disable prefer-rest-params */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport 'reflect-metadata';\n\nexport const isEthAddressMetadataKey = Symbol('ethAddress');\nexport const isEthAddressOrENSMetadataKey = Symbol('ethOrENSAddress');\nexport const isPositiveMetadataKey = Symbol('isPositive');\nexport const isPositiveOrMinusOneMetadataKey = Symbol('isPositiveOrMinusOne');\nexport const is0OrPositiveMetadataKey = Symbol('is0OrPositiveMetadataKey');\nexport const optionalMetadataKey = Symbol('Optional');\n\nexport type paramsType = {\n  index: number;\n  field: string | undefined;\n};\n\n// tslint:disable-next-line: function-name\nexport function IsEthAddress(field?: string) {\n  return function (\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    target: any,\n    propertyKey: string | symbol,\n    parameterIndex: number\n  ): void {\n    const existingPossibleAddresses: paramsType[] =\n      Reflect.getOwnMetadata(isEthAddressMetadataKey, target, propertyKey) ||\n      [];\n\n    existingPossibleAddresses.push({\n      index: parameterIndex,\n      field,\n    });\n\n    Reflect.defineMetadata(\n      isEthAddressMetadataKey,\n      existingPossibleAddresses,\n      target,\n      propertyKey\n    );\n  };\n}\n\nexport function IsEthAddressOrENS(field?: string) {\n  return function (\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    target: any,\n    propertyKey: string | symbol,\n    parameterIndex: number\n  ): void {\n    const existingPossibleAddresses: paramsType[] =\n      Reflect.getOwnMetadata(\n        isEthAddressOrENSMetadataKey,\n        target,\n        propertyKey\n      ) || [];\n\n    existingPossibleAddresses.push({\n      index: parameterIndex,\n      field,\n    });\n\n    Reflect.defineMetadata(\n      isEthAddressOrENSMetadataKey,\n      existingPossibleAddresses,\n      target,\n      propertyKey\n    );\n  };\n}\n\nexport function IsPositiveAmount(field?: string) {\n  return function (\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    target: any,\n    propertyKey: string | symbol,\n    parameterIndex: number\n  ): void {\n    const params: paramsType[] =\n      Reflect.getOwnMetadata(isPositiveMetadataKey, target, propertyKey) || [];\n\n    params.push({ index: parameterIndex, field });\n\n    Reflect.defineMetadata(isPositiveMetadataKey, params, target, propertyKey);\n  };\n}\n\nexport function Is0OrPositiveAmount(field?: string) {\n  return function (\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    target: any,\n    propertyKey: string | symbol,\n    parameterIndex: number\n  ): void {\n    const params: paramsType[] =\n      Reflect.getOwnMetadata(is0OrPositiveMetadataKey, target, propertyKey) ||\n      [];\n\n    params.push({ index: parameterIndex, field });\n\n    Reflect.defineMetadata(\n      is0OrPositiveMetadataKey,\n      params,\n      target,\n      propertyKey\n    );\n  };\n}\n\nexport function IsPositiveOrMinusOneAmount(field?: string) {\n  return function (\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    target: any,\n    propertyKey: string | symbol,\n    parameterIndex: number\n  ): void {\n    const params: paramsType[] =\n      Reflect.getOwnMetadata(\n        isPositiveOrMinusOneMetadataKey,\n        target,\n        propertyKey\n      ) || [];\n\n    params.push({ index: parameterIndex, field });\n\n    Reflect.defineMetadata(\n      isPositiveOrMinusOneMetadataKey,\n      params,\n      target,\n      propertyKey\n    );\n  };\n}\n\nexport function Optional(\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  target: any,\n  propertyKey: string | symbol,\n  parameterIndex: number\n): void {\n  const existingOptionalParameters =\n    Reflect.getOwnMetadata(optionalMetadataKey, target, propertyKey) || [];\n  existingOptionalParameters.push(parameterIndex);\n  Reflect.defineMetadata(\n    optionalMetadataKey,\n    existingOptionalParameters,\n    target,\n    propertyKey\n  );\n}\n","/* eslint-disable prefer-rest-params */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { utils } from 'ethers';\nimport { canBeEnsAddress } from '../utils/parsings';\n// import 'reflect-metadata';\nimport {\n  is0OrPositiveMetadataKey,\n  isEthAddressMetadataKey,\n  isEthAddressOrENSMetadataKey,\n  isPositiveMetadataKey,\n  isPositiveOrMinusOneMetadataKey,\n  optionalMetadataKey,\n  paramsType,\n} from './paramValidators';\n\nexport function optionalValidator(\n  target: any,\n  propertyName: string,\n  methodArguments: any\n): boolean[] {\n  const optionalParameters = Reflect.getOwnMetadata(\n    optionalMetadataKey,\n    target,\n    propertyName\n  );\n\n  const isParamOptional: boolean[] = [];\n  if (optionalParameters) {\n    optionalParameters.forEach((parameterIndex: number) => {\n      if (methodArguments[parameterIndex] == null) {\n        isParamOptional[parameterIndex] = true;\n      }\n    });\n  }\n  return isParamOptional;\n}\n\nexport function isEthAddressValidator(\n  target: any,\n  propertyName: string,\n  methodArguments: any,\n  isParamOptional?: boolean[]\n): void {\n  const addressParameters: paramsType[] = Reflect.getOwnMetadata(\n    isEthAddressMetadataKey,\n    target,\n    propertyName\n  );\n\n  if (addressParameters) {\n    addressParameters.forEach((storedParams) => {\n      if (storedParams.field) {\n        if (\n          methodArguments[0][storedParams.field] &&\n          !utils.isAddress(methodArguments[0][storedParams.field])\n        ) {\n          throw new Error(\n            `Address: ${\n              methodArguments[0][storedParams.field]\n            } is not a valid ethereum Address`\n          );\n        }\n      } else {\n        const isOptional =\n          isParamOptional && isParamOptional[storedParams.index];\n        if (\n          methodArguments[storedParams.index] &&\n          !isOptional &&\n          !utils.isAddress(methodArguments[storedParams.index])\n        ) {\n          throw new Error(\n            `Address: ${\n              methodArguments[storedParams.index]\n            } is not a valid ethereum Address`\n          );\n        }\n      }\n    });\n  }\n}\n\nexport function isEthAddressOrEnsValidator(\n  target: any,\n  propertyName: string,\n  methodArguments: any,\n  isParamOptional?: boolean[]\n): void {\n  const addressParameters: paramsType[] = Reflect.getOwnMetadata(\n    isEthAddressOrENSMetadataKey,\n    target,\n    propertyName\n  );\n\n  if (addressParameters) {\n    addressParameters.forEach((storedParams) => {\n      if (storedParams.field) {\n        if (\n          methodArguments[0][storedParams.field] &&\n          !utils.isAddress(methodArguments[0][storedParams.field])\n        ) {\n          if (!canBeEnsAddress(methodArguments[0][storedParams.field])) {\n            throw new Error(\n              `Address ${\n                methodArguments[0][storedParams.field]\n              } is not valid ENS format or a valid ethereum Address`\n            );\n          }\n        }\n      } else {\n        const isOptional =\n          isParamOptional && isParamOptional[storedParams.index];\n        if (\n          methodArguments[storedParams.index] &&\n          !isOptional &&\n          !utils.isAddress(methodArguments[storedParams.index])\n        ) {\n          if (!canBeEnsAddress(methodArguments[storedParams.index])) {\n            throw new Error(\n              `Address ${\n                methodArguments[storedParams.index]\n              } is not valid ENS format or a valid ethereum Address`\n            );\n          }\n        }\n      }\n    });\n  }\n}\n\nexport function amountGtThan0Validator(\n  target: any,\n  propertyName: string,\n  methodArguments: any,\n  isParamOptional?: boolean[]\n): void {\n  const amountParameters: paramsType[] = Reflect.getOwnMetadata(\n    isPositiveMetadataKey,\n    target,\n    propertyName\n  );\n\n  if (amountParameters) {\n    amountParameters.forEach((storedParams) => {\n      if (storedParams.field) {\n        if (\n          methodArguments[0][storedParams.field] &&\n          !(Number(methodArguments[0][storedParams.field]) > 0)\n        ) {\n          throw new Error(\n            `Amount: ${\n              methodArguments[0][storedParams.field]\n            } needs to be greater than 0`\n          );\n        }\n      } else {\n        const isOptional =\n          isParamOptional && isParamOptional[storedParams.index];\n        if (!isOptional && !(Number(methodArguments[storedParams.index]) > 0)) {\n          throw new Error(\n            `Amount: ${\n              methodArguments[storedParams.index]\n            } needs to be greater than 0`\n          );\n        }\n      }\n    });\n  }\n}\n\nexport function amount0OrPositiveValidator(\n  target: any,\n  propertyName: string,\n  methodArguments: any,\n  isParamOptional?: boolean[]\n): void {\n  const amountParameters: paramsType[] = Reflect.getOwnMetadata(\n    is0OrPositiveMetadataKey,\n    target,\n    propertyName\n  );\n\n  if (amountParameters) {\n    amountParameters.forEach((storedParams) => {\n      if (storedParams.field) {\n        if (\n          methodArguments[0][storedParams.field] &&\n          !(Number(methodArguments[0][storedParams.field]) >= 0)\n        ) {\n          throw new Error(\n            `Amount: ${\n              methodArguments[0][storedParams.field]\n            } needs to be greater than 0`\n          );\n        }\n      } else {\n        const isOptional =\n          isParamOptional && isParamOptional[storedParams.index];\n        if (\n          !isOptional &&\n          !(Number(methodArguments[storedParams.index]) >= 0)\n        ) {\n          throw new Error(\n            `Amount: ${\n              methodArguments[storedParams.index]\n            } needs to be greater than 0`\n          );\n        }\n      }\n    });\n  }\n}\n\nexport function amountGtThan0OrMinus1(\n  target: any,\n  propertyName: string,\n  methodArguments: any,\n  isParamOptional?: boolean[]\n): void {\n  const amountMinusOneParameters: paramsType[] = Reflect.getOwnMetadata(\n    isPositiveOrMinusOneMetadataKey,\n    target,\n    propertyName\n  );\n\n  if (amountMinusOneParameters) {\n    amountMinusOneParameters.forEach((storedParams) => {\n      if (storedParams.field) {\n        if (\n          methodArguments[0][storedParams.field] &&\n          !(\n            Number(methodArguments[0][storedParams.field]) > 0 ||\n            methodArguments[0][storedParams.field] === '-1'\n          )\n        ) {\n          throw new Error(\n            `Amount: ${\n              methodArguments[0][storedParams.field]\n            } needs to be greater than 0 or -1`\n          );\n        }\n      } else {\n        const isOptional =\n          isParamOptional && isParamOptional[storedParams.index];\n        if (\n          !isOptional &&\n          !(\n            Number(methodArguments[storedParams.index]) > 0 ||\n            methodArguments[storedParams.index] === '-1'\n          )\n        ) {\n          throw new Error(\n            `Amount: ${\n              methodArguments[storedParams.index]\n            } needs to be greater than 0 or -1`\n          );\n        }\n      }\n    });\n  }\n}\n","/* eslint-disable prefer-rest-params */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Network } from '../types';\nimport {\n  amount0OrPositiveValidator,\n  amountGtThan0OrMinus1,\n  amountGtThan0Validator,\n  isEthAddressOrEnsValidator,\n  isEthAddressValidator,\n  optionalValidator,\n} from './validations';\nimport { enabledNetworksByService } from '../config';\n\nexport function LPValidator(\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  target: any,\n  propertyName: string,\n  descriptor: TypedPropertyDescriptor<any>\n): any {\n  const method = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function () {\n    const currentNetwork = this.config.network;\n    const acceptedNetworks: Network[] =\n      enabledNetworksByService.lendingPool[this.market];\n    if (acceptedNetworks.indexOf(currentNetwork) === -1) {\n      return [];\n    }\n\n    isEthAddressValidator(target, propertyName, arguments);\n\n    amountGtThan0Validator(target, propertyName, arguments);\n\n    amountGtThan0OrMinus1(target, propertyName, arguments);\n\n    return method?.apply(this, arguments);\n  };\n}\n\nexport function LiquiditySwapValidator(\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  target: any,\n  propertyName: string,\n  descriptor: TypedPropertyDescriptor<any>\n): any {\n  const method = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function () {\n    const currentNetwork = this.config.network;\n    const acceptedNetworks: Network[] =\n      enabledNetworksByService.liquiditySwapAdapter;\n    if (acceptedNetworks.indexOf(currentNetwork) === -1) {\n      return [];\n    }\n\n    isEthAddressValidator(target, propertyName, arguments);\n\n    amountGtThan0Validator(target, propertyName, arguments);\n\n    amountGtThan0OrMinus1(target, propertyName, arguments);\n\n    return method?.apply(this, arguments);\n  };\n}\n\nexport function RepayWithCollateralValidator(\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  target: any,\n  propertyName: string,\n  descriptor: TypedPropertyDescriptor<any>\n): any {\n  const method = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function () {\n    const currentNetwork = this.config.network;\n    const acceptedNetworks: Network[] =\n      enabledNetworksByService.repayWithCollateralAdapter;\n    if (acceptedNetworks.indexOf(currentNetwork) === -1) {\n      return [];\n    }\n\n    isEthAddressValidator(target, propertyName, arguments);\n\n    amountGtThan0Validator(target, propertyName, arguments);\n\n    amountGtThan0OrMinus1(target, propertyName, arguments);\n\n    return method?.apply(this, arguments);\n  };\n}\n\nexport function StakingValidator(\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  target: any,\n  propertyName: string,\n  descriptor: TypedPropertyDescriptor<any>\n): any {\n  const method = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function () {\n    const currentNetwork = this.config.network;\n    const acceptedNetworks: Network[] =\n      enabledNetworksByService.staking[this.tokenStake];\n    if (acceptedNetworks.indexOf(currentNetwork) === -1) {\n      return [];\n    }\n\n    const isParamOptional = optionalValidator(target, propertyName, arguments);\n\n    isEthAddressValidator(target, propertyName, arguments, isParamOptional);\n\n    amountGtThan0Validator(target, propertyName, arguments, isParamOptional);\n\n    return method?.apply(this, arguments);\n  };\n}\n\nexport function FaucetValidator(\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  target: any,\n  propertyName: string,\n  descriptor: TypedPropertyDescriptor<any>\n): any {\n  const method = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function () {\n    const currentNetwork = this.config.network;\n    const acceptedNetworks: Network[] = enabledNetworksByService.faucet;\n    if (acceptedNetworks.indexOf(currentNetwork) === -1) {\n      return [];\n    }\n\n    const isParamOptional = optionalValidator(target, propertyName, arguments);\n\n    isEthAddressValidator(target, propertyName, arguments, isParamOptional);\n\n    amountGtThan0Validator(target, propertyName, arguments, isParamOptional);\n\n    return method?.apply(this, arguments);\n  };\n}\n\nexport function WETHValidator(\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  target: any,\n  propertyName: string,\n  descriptor: TypedPropertyDescriptor<any>\n): any {\n  const method = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function () {\n    const currentNetwork = this.config.network;\n    const acceptedNetworks: Network[] = enabledNetworksByService.wethGateway;\n    if (acceptedNetworks.indexOf(currentNetwork) === -1) {\n      return [];\n    }\n\n    isEthAddressValidator(target, propertyName, arguments);\n\n    amountGtThan0Validator(target, propertyName, arguments);\n\n    amountGtThan0OrMinus1(target, propertyName, arguments);\n\n    return method?.apply(this, arguments);\n  };\n}\n\nexport function GovValidator(\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  target: any,\n  propertyName: string,\n  descriptor: TypedPropertyDescriptor<any>\n): any {\n  const method = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function () {\n    const currentNetwork = this.config.network;\n    const acceptedNetworks: Network[] =\n      enabledNetworksByService.aaveGovernanceV2;\n    if (acceptedNetworks.indexOf(currentNetwork) === -1) {\n      return [];\n    }\n\n    isEthAddressValidator(target, propertyName, arguments);\n\n    amount0OrPositiveValidator(target, propertyName, arguments);\n\n    return method?.apply(this, arguments);\n  };\n}\n\nexport function GovDelegationValidator(\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  target: any,\n  propertyName: string,\n  descriptor: TypedPropertyDescriptor<any>\n): any {\n  const method = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function () {\n    const currentNetwork = this.config.network;\n    const acceptedNetworks: Network[] =\n      enabledNetworksByService.aaveGovernanceV2;\n    if (acceptedNetworks.indexOf(currentNetwork) === -1) {\n      return [];\n    }\n\n    isEthAddressValidator(target, propertyName, arguments);\n    isEthAddressOrEnsValidator(target, propertyName, arguments);\n    amountGtThan0Validator(target, propertyName, arguments);\n    amount0OrPositiveValidator(target, propertyName, arguments);\n\n    return method?.apply(this, arguments);\n  };\n}\n","import { BigNumber } from 'ethers';\nimport { transactionType, Configuration } from '../types';\n\nconst DEFAULT_SURPLUS = 15; // 15%\n\nexport const estimateGas = async (\n  tx: transactionType,\n  config: Configuration,\n  gasSurplus?: number\n): Promise<BigNumber> => {\n  const estimatedGas = await config.provider.estimateGas(tx);\n  return estimatedGas.add(\n    estimatedGas.mul(gasSurplus || DEFAULT_SURPLUS).div(100)\n  );\n};\n\nexport const getGasPrice = async (\n  config: Configuration\n): Promise<BigNumber> => {\n  const gasPrice = await config.provider.getGasPrice();\n  return gasPrice;\n};\n","import { BigNumber, Contract, PopulatedTransaction } from 'ethers';\nimport {\n  Configuration,\n  tEthereumAddress,\n  TransactionGenerationMethod,\n  transactionType,\n  GasResponse,\n  ProtocolAction,\n  EthereumTransactionTypeExtended,\n  eEthereumTxType,\n} from '../types';\nimport { ContractsFactory } from '../interfaces/ContractsFactory';\nimport { estimateGas, getGasPrice } from '../utils/gasStation';\nimport { DEFAULT_NULL_VALUE_ON_TX, gasLimitRecommendations } from '../config';\n\nexport default class BaseService<T extends Contract> {\n  readonly contractInstances: { [address: string]: T };\n\n  readonly contractFactory: ContractsFactory;\n\n  readonly config: Configuration;\n\n  constructor(config: Configuration, contractFactory: ContractsFactory) {\n    this.config = config;\n    this.contractFactory = contractFactory;\n    this.contractInstances = {};\n  }\n\n  public getContractInstance = (address: tEthereumAddress): T => {\n    if (!this.contractInstances[address]) {\n      const { provider }: Configuration = this.config;\n      this.contractInstances[address] = this.contractFactory.connect(\n        address,\n        provider\n      ) as T;\n    }\n\n    return this.contractInstances[address];\n  };\n\n  readonly generateTxCallback = ({\n    rawTxMethod,\n    from,\n    value,\n    gasSurplus,\n    action,\n  }: TransactionGenerationMethod): (() => Promise<transactionType>) => async () => {\n    const txRaw: PopulatedTransaction = await rawTxMethod();\n\n    const tx: transactionType = {\n      ...txRaw,\n      from,\n      value: value || DEFAULT_NULL_VALUE_ON_TX,\n    };\n\n    tx.gasLimit = await estimateGas(tx, this.config, gasSurplus);\n\n    if (\n      action &&\n      gasLimitRecommendations[action] &&\n      tx.gasLimit.lte(BigNumber.from(gasLimitRecommendations[action].limit))\n    ) {\n      tx.gasLimit = BigNumber.from(gasLimitRecommendations[action].recommended);\n    }\n\n    return tx;\n  };\n\n  readonly generateTxPriceEstimation = (\n    txs: EthereumTransactionTypeExtended[],\n    txCallback: () => Promise<transactionType>,\n    action: string = ProtocolAction.default\n  ): GasResponse => async () => {\n    try {\n      const gasPrice = await getGasPrice(this.config);\n      const hasPendingApprovals = txs.find(\n        (tx) => tx.txType === eEthereumTxType.ERC20_APPROVAL\n      );\n      if (!hasPendingApprovals) {\n        const {\n          gasLimit,\n          gasPrice: gasPriceProv,\n        }: transactionType = await txCallback();\n        if (!gasLimit) {\n          // If we don't recieve the correct gas we throw a error\n          throw new Error('Transaction calculation error');\n        }\n\n        return {\n          gasLimit: gasLimit.toString(),\n          gasPrice: gasPriceProv\n            ? gasPriceProv.toString()\n            : gasPrice.toString(),\n        };\n      }\n      return {\n        gasLimit: gasLimitRecommendations[action].recommended,\n        gasPrice: gasPrice.toString(),\n      };\n    } catch (error) {\n      console.error(\n        'Calculate error on calculate estimation gas price.',\n        error\n      );\n      return null;\n    }\n  };\n}\n","import { BigNumber, constants, utils } from 'ethers';\nimport {\n  API_ETH_MOCK_ADDRESS,\n  commonContractAddressBetweenMarketsV2,\n  DEFAULT_APPROVE_AMOUNT,\n  distinctContractAddressBetweenMarketsV2,\n  SURPLUS,\n} from '../../config';\nimport { ILendingPool, ILendingPool__factory } from '../../contract-types';\nimport IERC20ServiceInterface from '../../interfaces/ERC20';\nimport SynthetixInterface from '../../interfaces/Synthetix';\nimport LendingPoolInterface from '../../interfaces/v2/LendingPool';\nimport {\n  Configuration,\n  eEthereumTxType,\n  EthereumTransactionTypeExtended,\n  InterestRate,\n  Market,\n  ProtocolAction,\n  TokenMetadataType,\n  transactionType,\n  tStringDecimalUnits,\n} from '../../types';\nimport { getTxValue, parseNumber } from '../../utils/parsings';\nimport { LPValidator } from '../../validators/methodValidators';\nimport {\n  LPBorrowParamsType,\n  LPDepositParamsType,\n  LPLiquidationCall,\n  LPRepayParamsType,\n  LPRepayWithCollateral,\n  LPSetUsageAsCollateral,\n  LPSwapBorrowRateMode,\n  LPSwapCollateral,\n  LPWithdrawParamsType,\n  LPFlashLiquidation,\n} from '../../types/LendingPoolMethodTypes';\nimport WETHGatewayInterface from '../../interfaces/WETHGateway';\nimport {\n  IsEthAddress,\n  IsPositiveAmount,\n  IsPositiveOrMinusOneAmount,\n} from '../../validators/paramValidators';\nimport LiquiditySwapAdapterInterface from '../../interfaces/LiquiditySwapAdapter';\nimport RepayWithCollateralAdapterInterface from '../../interfaces/RepayWithCollateralAdapter';\nimport BaseService from '../BaseService';\n\nexport default class LendingPool\n  extends BaseService<ILendingPool>\n  implements LendingPoolInterface {\n  readonly market: Market;\n\n  readonly erc20Service: IERC20ServiceInterface;\n\n  readonly lendingPoolAddress: string;\n\n  readonly synthetixService: SynthetixInterface;\n\n  readonly wethGatewayService: WETHGatewayInterface;\n\n  readonly liquiditySwapAdapterService: LiquiditySwapAdapterInterface;\n\n  readonly repayWithCollateralAdapterService: RepayWithCollateralAdapterInterface;\n\n  constructor(\n    config: Configuration,\n    erc20Service: IERC20ServiceInterface,\n    synthetixService: SynthetixInterface,\n    wethGatewayService: WETHGatewayInterface,\n    liquiditySwapAdapterService: LiquiditySwapAdapterInterface,\n    repayWithCollateralAdapterService: RepayWithCollateralAdapterInterface,\n    market: Market\n  ) {\n    super(config, ILendingPool__factory);\n    this.erc20Service = erc20Service;\n    this.synthetixService = synthetixService;\n    this.wethGatewayService = wethGatewayService;\n    this.liquiditySwapAdapterService = liquiditySwapAdapterService;\n    this.repayWithCollateralAdapterService = repayWithCollateralAdapterService;\n    this.market = market;\n\n    const { network } = this.config;\n    this.lendingPoolAddress =\n      distinctContractAddressBetweenMarketsV2[this.market][\n        network\n      ].LENDINGPOOL_ADDRESS;\n  }\n\n  @LPValidator\n  public async deposit(\n    @IsEthAddress('user')\n    @IsEthAddress('reserve')\n    @IsPositiveAmount('amount')\n    @IsEthAddress('onBehalfOf')\n    { user, reserve, amount, onBehalfOf, referralCode }: LPDepositParamsType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    if (reserve.toLowerCase() === API_ETH_MOCK_ADDRESS.toLowerCase()) {\n      return this.wethGatewayService.depositETH({\n        user,\n        amount,\n        onBehalfOf,\n        referralCode,\n      });\n    }\n    const {\n      isApproved,\n      approve,\n      decimalsOf,\n    }: IERC20ServiceInterface = this.erc20Service;\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const reserveDecimals: number = await decimalsOf(reserve);\n    const convertedAmount: tStringDecimalUnits = parseNumber(\n      amount,\n      reserveDecimals\n    );\n\n    const fundsAvailable: boolean = await this.synthetixService.synthetixValidation(\n      user,\n      reserve,\n      convertedAmount\n    );\n    if (!fundsAvailable) {\n      throw new Error('Not enough funds to execute operation');\n    }\n\n    const approved = await isApproved(\n      reserve,\n      user,\n      this.lendingPoolAddress,\n      amount\n    );\n    if (!approved) {\n      const approveTx: EthereumTransactionTypeExtended = approve(\n        user,\n        reserve,\n        this.lendingPoolAddress,\n        DEFAULT_APPROVE_AMOUNT\n      );\n      txs.push(approveTx);\n    }\n\n    const lendingPoolContract: ILendingPool = this.getContractInstance(\n      this.lendingPoolAddress\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        lendingPoolContract.populateTransaction.deposit(\n          reserve,\n          convertedAmount,\n          onBehalfOf || user,\n          referralCode || '0'\n        ),\n      from: user,\n      value: getTxValue(reserve, convertedAmount),\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.DLP_ACTION,\n      gas: this.generateTxPriceEstimation(\n        txs,\n        txCallback,\n        ProtocolAction.deposit\n      ),\n    });\n\n    return txs;\n  }\n\n  @LPValidator\n  public async withdraw(\n    @IsEthAddress('user')\n    @IsEthAddress('reserve')\n    @IsPositiveOrMinusOneAmount('amount')\n    @IsEthAddress('onBehalfOf')\n    @IsEthAddress('aTokenAddress')\n    { user, reserve, amount, onBehalfOf, aTokenAddress }: LPWithdrawParamsType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    if (reserve.toLowerCase() === API_ETH_MOCK_ADDRESS.toLowerCase()) {\n      if (!aTokenAddress) {\n        throw new Error(\n          'To withdraw ETH you need to pass the aWETH token address'\n        );\n      }\n\n      return this.wethGatewayService.withdrawETH({\n        user,\n        amount,\n        onBehalfOf,\n        aTokenAddress,\n      });\n    }\n    const { decimalsOf }: IERC20ServiceInterface = this.erc20Service;\n    const decimals: number = await decimalsOf(reserve);\n\n    const convertedAmount: tStringDecimalUnits =\n      amount === '-1'\n        ? constants.MaxUint256.toString()\n        : parseNumber(amount, decimals);\n\n    const lendingPoolContract: ILendingPool = this.getContractInstance(\n      this.lendingPoolAddress\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        lendingPoolContract.populateTransaction.withdraw(\n          reserve,\n          convertedAmount,\n          onBehalfOf || user\n        ),\n      from: user,\n      action: ProtocolAction.withdraw,\n    });\n\n    return [\n      {\n        tx: txCallback,\n        txType: eEthereumTxType.DLP_ACTION,\n        gas: this.generateTxPriceEstimation(\n          [],\n          txCallback,\n          ProtocolAction.withdraw\n        ),\n      },\n    ];\n  }\n\n  @LPValidator\n  public async borrow(\n    @IsEthAddress('user')\n    @IsEthAddress('reserve')\n    @IsPositiveAmount('amount')\n    @IsEthAddress('debtTokenAddress')\n    @IsEthAddress('onBehalfOf')\n    {\n      user,\n      reserve,\n      amount,\n      interestRateMode,\n      debtTokenAddress,\n      onBehalfOf,\n      referralCode,\n    }: LPBorrowParamsType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    if (reserve.toLowerCase() === API_ETH_MOCK_ADDRESS.toLowerCase()) {\n      if (!debtTokenAddress) {\n        throw new Error(\n          `To borrow ETH you need to pass the stable or variable WETH debt Token Address corresponding the interestRateMode`\n        );\n      }\n      return this.wethGatewayService.borrowETH({\n        user,\n        amount,\n        debtTokenAddress,\n        interestRateMode,\n        referralCode,\n      });\n    }\n    const { decimalsOf }: IERC20ServiceInterface = this.erc20Service;\n    const reserveDecimals = await decimalsOf(reserve);\n    const formatAmount: tStringDecimalUnits = parseNumber(\n      amount,\n      reserveDecimals\n    );\n\n    const numericRateMode = interestRateMode === InterestRate.Variable ? 2 : 1;\n\n    const lendingPoolContract = this.getContractInstance(\n      this.lendingPoolAddress\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        lendingPoolContract.populateTransaction.borrow(\n          reserve,\n          formatAmount,\n          numericRateMode,\n          referralCode || 0,\n          onBehalfOf || user\n        ),\n      from: user,\n    });\n\n    return [\n      {\n        tx: txCallback,\n        txType: eEthereumTxType.DLP_ACTION,\n        gas: this.generateTxPriceEstimation([], txCallback),\n      },\n    ];\n  }\n\n  @LPValidator\n  public async repay(\n    @IsEthAddress('user')\n    @IsEthAddress('reserve')\n    @IsPositiveOrMinusOneAmount('amount')\n    @IsEthAddress('onBehalfOf')\n    { user, reserve, amount, interestRateMode, onBehalfOf }: LPRepayParamsType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    if (reserve.toLowerCase() === API_ETH_MOCK_ADDRESS.toLowerCase()) {\n      return this.wethGatewayService.repayETH({\n        user,\n        amount,\n        interestRateMode,\n        onBehalfOf,\n      });\n    }\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const {\n      isApproved,\n      approve,\n      decimalsOf,\n    }: IERC20ServiceInterface = this.erc20Service;\n\n    const lendingPoolContract = this.getContractInstance(\n      this.lendingPoolAddress\n    );\n    const { populateTransaction }: ILendingPool = lendingPoolContract;\n    const numericRateMode = interestRateMode === InterestRate.Variable ? 2 : 1;\n    const decimals: number = await decimalsOf(reserve);\n\n    const convertedAmount: tStringDecimalUnits =\n      amount === '-1'\n        ? constants.MaxUint256.toString()\n        : parseNumber(amount, decimals);\n\n    if (amount !== '-1') {\n      const fundsAvailable: boolean = await this.synthetixService.synthetixValidation(\n        user,\n        reserve,\n        convertedAmount\n      );\n      if (!fundsAvailable) {\n        throw new Error('Not enough funds to execute operation');\n      }\n    }\n\n    const approved: boolean = await isApproved(\n      reserve,\n      user,\n      this.lendingPoolAddress,\n      amount\n    );\n\n    if (!approved) {\n      const approveTx: EthereumTransactionTypeExtended = approve(\n        user,\n        reserve,\n        this.lendingPoolAddress,\n        DEFAULT_APPROVE_AMOUNT\n      );\n      txs.push(approveTx);\n    }\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        populateTransaction.repay(\n          reserve,\n          convertedAmount,\n          numericRateMode,\n          onBehalfOf || user\n        ),\n      from: user,\n      value: getTxValue(reserve, convertedAmount),\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.DLP_ACTION,\n      gas: this.generateTxPriceEstimation(\n        txs,\n        txCallback,\n        ProtocolAction.repay\n      ),\n    });\n\n    return txs;\n  }\n\n  @LPValidator\n  public async swapBorrowRateMode(\n    @IsEthAddress('user')\n    @IsEthAddress('reserve')\n    { user, reserve, interestRateMode }: LPSwapBorrowRateMode\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const numericRateMode = interestRateMode === InterestRate.Variable ? 2 : 1;\n\n    const lendingPoolContract = this.getContractInstance(\n      this.lendingPoolAddress\n    );\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        lendingPoolContract.populateTransaction.swapBorrowRateMode(\n          reserve,\n          numericRateMode\n        ),\n      from: user,\n    });\n\n    return [\n      {\n        txType: eEthereumTxType.DLP_ACTION,\n        tx: txCallback,\n        gas: this.generateTxPriceEstimation([], txCallback),\n      },\n    ];\n  }\n\n  @LPValidator\n  public async setUsageAsCollateral(\n    @IsEthAddress('user')\n    @IsEthAddress('reserve')\n    { user, reserve, usageAsCollateral }: LPSetUsageAsCollateral\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const lendingPoolContract = this.getContractInstance(\n      this.lendingPoolAddress\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        lendingPoolContract.populateTransaction.setUserUseReserveAsCollateral(\n          reserve,\n          usageAsCollateral\n        ),\n      from: user,\n    });\n\n    return [\n      {\n        tx: txCallback,\n        txType: eEthereumTxType.DLP_ACTION,\n        gas: this.generateTxPriceEstimation([], txCallback),\n      },\n    ];\n  }\n\n  @LPValidator\n  public async liquidationCall(\n    @IsEthAddress('liquidator')\n    @IsEthAddress('liquidatedUser')\n    @IsEthAddress('debtReserve')\n    @IsEthAddress('collateralReserve')\n    @IsPositiveAmount('purchaseAmount')\n    {\n      liquidator,\n      liquidatedUser,\n      debtReserve,\n      collateralReserve,\n      purchaseAmount,\n      getAToken,\n    }: LPLiquidationCall\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const {\n      isApproved,\n      approve,\n      getTokenData,\n    }: IERC20ServiceInterface = this.erc20Service;\n\n    const approved = await isApproved(\n      debtReserve,\n      liquidator,\n      this.lendingPoolAddress,\n      purchaseAmount\n    );\n\n    if (!approved) {\n      const approveTx: EthereumTransactionTypeExtended = approve(\n        liquidator,\n        debtReserve,\n        this.lendingPoolAddress,\n        DEFAULT_APPROVE_AMOUNT\n      );\n\n      txs.push(approveTx);\n    }\n\n    const [debtReserveInfo]: TokenMetadataType[] = await Promise.all([\n      getTokenData(debtReserve),\n    ]);\n\n    const reserveDecimals: number = debtReserveInfo.decimals;\n\n    const convertedAmount: tStringDecimalUnits = parseNumber(\n      purchaseAmount,\n      reserveDecimals\n    );\n\n    const lendingPoolContract = this.getContractInstance(\n      this.lendingPoolAddress\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        lendingPoolContract.populateTransaction.liquidationCall(\n          collateralReserve,\n          debtReserve,\n          liquidatedUser,\n          convertedAmount,\n          getAToken || false\n        ),\n      from: liquidator,\n      value: getTxValue(debtReserve, convertedAmount),\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.DLP_ACTION,\n      gas: this.generateTxPriceEstimation(\n        txs,\n        txCallback,\n        ProtocolAction.liquidationCall\n      ),\n    });\n\n    return txs;\n  }\n\n  @LPValidator\n  public async swapCollateral(\n    @IsEthAddress('user')\n    @IsEthAddress('fromAsset')\n    @IsEthAddress('fromAToken')\n    @IsEthAddress('toAsset')\n    @IsEthAddress('onBehalfOf')\n    @IsPositiveAmount('fromAmount')\n    @IsPositiveAmount('toAmount')\n    {\n      user,\n      flash,\n      fromAsset,\n      fromAToken,\n      toAsset,\n      fromAmount,\n      toAmount,\n      maxSlippage,\n      permitSignature,\n      swapAll,\n      onBehalfOf,\n      referralCode,\n      useEthPath,\n    }: LPSwapCollateral\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n\n    const permitParams = permitSignature || {\n      amount: '0',\n      deadline: '0',\n      v: 0,\n      r: '0x0000000000000000000000000000000000000000000000000000000000000000',\n      s: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    };\n\n    const { SWAP_COLLATERAL_ADAPTER } = commonContractAddressBetweenMarketsV2[\n      this.config.network\n    ];\n\n    const approved: boolean = await this.erc20Service.isApproved(\n      fromAToken,\n      user,\n      SWAP_COLLATERAL_ADAPTER,\n      fromAmount\n    );\n\n    if (!approved) {\n      const approveTx: EthereumTransactionTypeExtended = this.erc20Service.approve(\n        user,\n        fromAToken,\n        SWAP_COLLATERAL_ADAPTER,\n        constants.MaxUint256.toString()\n      );\n\n      txs.push(approveTx);\n    }\n\n    const tokenDecimals: number = await this.erc20Service.decimalsOf(fromAsset);\n\n    const convertedAmount: string = parseNumber(fromAmount, tokenDecimals);\n\n    const tokenToDecimals: number = await this.erc20Service.decimalsOf(toAsset);\n\n    const amountSlippage = (\n      Number(toAmount) -\n      (Number(toAmount) * Number(maxSlippage)) / 100\n    ).toString();\n\n    const amountSlippageConverted: string = parseNumber(\n      amountSlippage,\n      tokenToDecimals\n    );\n\n    const lendingPoolContract = this.getContractInstance(\n      this.lendingPoolAddress\n    );\n\n    if (flash) {\n      const FLASHLOAN_PREMIUM_TOTAL: BigNumber = await lendingPoolContract.FLASHLOAN_PREMIUM_TOTAL();\n      const convertedAmountNoFees: string = BigNumber.from(convertedAmount)\n        .sub(\n          BigNumber.from(convertedAmount)\n            .mul(FLASHLOAN_PREMIUM_TOTAL)\n            .div(10000)\n        )\n        .toString();\n\n      const amountWithSurplus: string = (\n        Number(fromAmount) +\n        (Number(fromAmount) * Number(SURPLUS)) / 100\n      ).toString();\n\n      const convertedAmountWithSurplus: string = parseNumber(\n        amountWithSurplus,\n        tokenDecimals\n      );\n\n      const params: string = utils.defaultAbiCoder.encode(\n        [\n          'address[]',\n          'uint256[]',\n          'bool[]',\n          'uint256[]',\n          'uint256[]',\n          'uint8[]',\n          'bytes32[]',\n          'bytes32[]',\n          'bool[]',\n        ],\n        [\n          [toAsset],\n          [amountSlippageConverted],\n          [swapAll],\n          [permitParams.amount],\n          [permitParams.deadline],\n          [permitParams.v],\n          [permitParams.r],\n          [permitParams.s],\n          [useEthPath || false],\n        ]\n      );\n\n      const txCallback: () => Promise<transactionType> = this.generateTxCallback(\n        {\n          rawTxMethod: () =>\n            lendingPoolContract.populateTransaction.flashLoan(\n              SWAP_COLLATERAL_ADAPTER,\n              [fromAsset],\n              swapAll ? [convertedAmountWithSurplus] : [convertedAmountNoFees],\n              [0], // interest rate mode to NONE for flashloan to not open debt\n              onBehalfOf || user,\n              params,\n              referralCode || '0'\n            ),\n          from: user,\n        }\n      );\n\n      txs.push({\n        tx: txCallback,\n        txType: eEthereumTxType.DLP_ACTION,\n        gas: this.generateTxPriceEstimation(\n          txs,\n          txCallback,\n          ProtocolAction.swapCollateral\n        ),\n      });\n      return txs;\n    }\n\n    // Direct call to swap and deposit\n    const swapAndDepositTx: EthereumTransactionTypeExtended = await this.liquiditySwapAdapterService.swapAndDeposit(\n      {\n        user,\n        assetToSwapFrom: fromAsset,\n        assetToSwapTo: toAsset,\n        amountToSwap: swapAll\n          ? constants.MaxUint256.toString()\n          : convertedAmount,\n        minAmountToReceive: amountSlippageConverted,\n        permitParams,\n        useEthPath,\n      }\n    );\n\n    txs.push(swapAndDepositTx);\n    return txs;\n  }\n\n  @LPValidator\n  public async repayWithCollateral(\n    @IsEthAddress('user')\n    @IsEthAddress('fromAsset')\n    @IsEthAddress('fromAToken')\n    @IsEthAddress('assetToRepay')\n    @IsEthAddress('onBehalfOf')\n    @IsPositiveAmount('repayWithAmount')\n    @IsPositiveAmount('repayAmount')\n    {\n      user,\n      fromAsset,\n      fromAToken,\n      assetToRepay,\n      repayWithAmount,\n      repayAmount,\n      permitSignature,\n      repayAllDebt,\n      rateMode,\n      onBehalfOf,\n      referralCode,\n      flash,\n      useEthPath,\n    }: LPRepayWithCollateral\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n\n    const permitParams = permitSignature || {\n      amount: '0',\n      deadline: '0',\n      v: 0,\n      r: '0x0000000000000000000000000000000000000000000000000000000000000000',\n      s: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    };\n\n    const {\n      REPAY_WITH_COLLATERAL_ADAPTER,\n    } = commonContractAddressBetweenMarketsV2[this.config.network];\n\n    const approved: boolean = await this.erc20Service.isApproved(\n      fromAToken,\n      user,\n      REPAY_WITH_COLLATERAL_ADAPTER,\n      repayWithAmount\n    );\n\n    if (!approved) {\n      const approveTx: EthereumTransactionTypeExtended = this.erc20Service.approve(\n        user,\n        fromAToken,\n        REPAY_WITH_COLLATERAL_ADAPTER,\n        constants.MaxUint256.toString()\n      );\n\n      txs.push(approveTx);\n    }\n\n    const fromDecimals: number = await this.erc20Service.decimalsOf(fromAsset);\n    const convertedRepayWithAmount: string = parseNumber(\n      repayWithAmount,\n      fromDecimals\n    );\n\n    const repayAmountWithSurplus: string = (\n      Number(repayAmount) +\n      (Number(repayAmount) * Number(SURPLUS)) / 100\n    ).toString();\n\n    const decimals: number = await this.erc20Service.decimalsOf(assetToRepay);\n    const convertedRepayAmount: string = repayAllDebt\n      ? parseNumber(repayAmountWithSurplus, decimals)\n      : parseNumber(repayAmount, decimals);\n\n    let numericInterestRate = 0;\n    if (rateMode) {\n      numericInterestRate = rateMode === InterestRate.Stable ? 1 : 2;\n    }\n\n    if (flash) {\n      const params: string = utils.defaultAbiCoder.encode(\n        [\n          'address',\n          'uint256',\n          'uint256',\n          'uint256',\n          'uint256',\n          'uint8',\n          'bytes32',\n          'bytes32',\n          'bool',\n        ],\n        [\n          fromAsset,\n          convertedRepayWithAmount,\n          numericInterestRate,\n          permitParams.amount,\n          permitParams.deadline,\n          permitParams.v,\n          permitParams.r,\n          permitParams.s,\n          useEthPath || false,\n        ]\n      );\n\n      const lendingPoolContract = this.getContractInstance(\n        this.lendingPoolAddress\n      );\n\n      const txCallback: () => Promise<transactionType> = this.generateTxCallback(\n        {\n          rawTxMethod: () =>\n            lendingPoolContract.populateTransaction.flashLoan(\n              REPAY_WITH_COLLATERAL_ADAPTER,\n              [assetToRepay],\n              [convertedRepayAmount],\n              [0], // interest rate mode to NONE for flashloan to not open debt\n              onBehalfOf || user,\n              params,\n              referralCode || '0'\n            ),\n          from: user,\n        }\n      );\n\n      txs.push({\n        tx: txCallback,\n        txType: eEthereumTxType.DLP_ACTION,\n        gas: this.generateTxPriceEstimation(\n          txs,\n          txCallback,\n          ProtocolAction.repayCollateral\n        ),\n      });\n\n      return txs;\n    }\n\n    const swapAndRepayTx: EthereumTransactionTypeExtended = this.repayWithCollateralAdapterService.swapAndRepay(\n      {\n        user,\n        collateralAsset: fromAsset,\n        debtAsset: assetToRepay,\n        collateralAmount: convertedRepayWithAmount,\n        debtRepayAmount: convertedRepayAmount,\n        debtRateMode: numericInterestRate,\n        permit: permitParams,\n        useEthPath,\n      }\n    );\n\n    txs.push(swapAndRepayTx);\n\n    return txs;\n  }\n\n  @LPValidator\n  public async flashLiquidation(\n    @IsEthAddress('user')\n    @IsEthAddress('collateralAsset')\n    @IsEthAddress('borrowedAsset')\n    @IsPositiveAmount('debtTokenCover')\n    @IsEthAddress('initiator')\n    {\n      user,\n      collateralAsset,\n      borrowedAsset,\n      debtTokenCover,\n      liquidateAll,\n      initiator,\n      useEthPath,\n    }: LPFlashLiquidation\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const addSurplus = (amount: string): string => {\n      return (\n        Number(amount) +\n        (Number(amount) * Number(amount)) / 100\n      ).toString();\n    };\n\n    const txs: EthereumTransactionTypeExtended[] = [];\n\n    const { FLASHLIQUIDATION } = commonContractAddressBetweenMarketsV2[\n      this.config.network\n    ];\n\n    const lendingPoolContract: ILendingPool = this.getContractInstance(\n      this.lendingPoolAddress\n    );\n\n    const tokenDecimals: number = await this.erc20Service.decimalsOf(\n      borrowedAsset\n    );\n\n    const convertedDebt = parseNumber(debtTokenCover, tokenDecimals);\n\n    const convertedDebtTokenCover: string = liquidateAll\n      ? constants.MaxUint256.toString()\n      : convertedDebt;\n\n    const flashBorrowAmount = liquidateAll\n      ? parseNumber(addSurplus(debtTokenCover), tokenDecimals)\n      : convertedDebt;\n\n    const params: string = utils.defaultAbiCoder.encode(\n      ['address', 'address', 'address', 'uint256', 'bool'],\n      [\n        collateralAsset,\n        borrowedAsset,\n        user,\n        convertedDebtTokenCover,\n        useEthPath || false,\n      ]\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        lendingPoolContract.populateTransaction.flashLoan(\n          FLASHLIQUIDATION,\n          [borrowedAsset],\n          [flashBorrowAmount],\n          [0],\n          initiator,\n          params,\n          '0'\n        ),\n      from: initiator,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.DLP_ACTION,\n      gas: this.generateTxPriceEstimation(\n        txs,\n        txCallback,\n        ProtocolAction.liquidationFlash\n      ),\n    });\n    return txs;\n  }\n}\n","import { BigNumber } from 'ethers';\nimport IERC20ServiceInterface from '../interfaces/ERC20';\nimport {\n  Configuration,\n  eEthereumTxType,\n  EthereumTransactionTypeExtended,\n  tEthereumAddress,\n  transactionType,\n  tStringCurrencyUnits,\n  tStringDecimalUnits,\n  TokenMetadataType,\n} from '../types';\nimport { API_ETH_MOCK_ADDRESS, SUPER_BIG_ALLOWANCE_NUMBER } from '../config';\nimport { IERC20Detailed, IERC20Detailed__factory } from '../contract-types';\nimport BaseService from './BaseService';\nimport { parseNumber } from '../utils/parsings';\n\nexport default class ERC20Service\n  extends BaseService<IERC20Detailed>\n  implements IERC20ServiceInterface {\n  readonly tokenDecimals: { [address: string]: number };\n\n  constructor(config: Configuration) {\n    super(config, IERC20Detailed__factory);\n    this.tokenDecimals = {};\n  }\n\n  public approve = (\n    user: tEthereumAddress,\n    token: tEthereumAddress,\n    spender: tEthereumAddress,\n    amount: tStringDecimalUnits\n  ): EthereumTransactionTypeExtended => {\n    const erc20Contract = this.getContractInstance(token);\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        erc20Contract.populateTransaction.approve(spender, amount),\n      from: user,\n    });\n\n    return {\n      tx: txCallback,\n      txType: eEthereumTxType.ERC20_APPROVAL,\n      gas: this.generateTxPriceEstimation([], txCallback),\n    };\n  };\n\n  public isApproved = async (\n    token: tEthereumAddress,\n    userAddress: tEthereumAddress,\n    spender: tEthereumAddress,\n    amount: tStringCurrencyUnits\n  ): Promise<boolean> => {\n    if (token.toLowerCase() === API_ETH_MOCK_ADDRESS.toLowerCase()) return true;\n    const decimals = await this.decimalsOf(token);\n    const erc20Contract: IERC20Detailed = this.getContractInstance(token);\n    const allowance: BigNumber = await erc20Contract.allowance(\n      userAddress,\n      spender\n    );\n    const amountBNWithDecimals: BigNumber =\n      amount === '-1'\n        ? BigNumber.from(SUPER_BIG_ALLOWANCE_NUMBER)\n        : BigNumber.from(parseNumber(amount, decimals));\n    return allowance.gte(amountBNWithDecimals);\n  };\n\n  public decimalsOf = async (token: tEthereumAddress): Promise<number> => {\n    if (token.toLowerCase() === API_ETH_MOCK_ADDRESS.toLowerCase()) return 18;\n    if (!this.tokenDecimals[token]) {\n      const erc20Contract = this.getContractInstance(token);\n      this.tokenDecimals[token] = await erc20Contract.decimals();\n    }\n\n    return this.tokenDecimals[token];\n  };\n\n  public getTokenData = async (\n    token: tEthereumAddress\n  ): Promise<TokenMetadataType> => {\n    if (token.toLowerCase() === API_ETH_MOCK_ADDRESS.toLowerCase()) {\n      return {\n        name: 'Ethereum',\n        symbol: 'ETH',\n        decimals: 18,\n        address: token,\n      };\n    }\n    // Needed because MKR does not return string for symbol and Name\n    if (\n      token.toLowerCase() ===\n      '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'.toLowerCase()\n    ) {\n      return {\n        name: 'Maker',\n        symbol: 'MKR',\n        decimals: 18,\n        address: token,\n      };\n    }\n\n    const {\n      name: nameGetter,\n      symbol: symbolGetter,\n      decimals: decimalsGetter,\n    }: IERC20Detailed = this.getContractInstance(token);\n\n    const [name, symbol, decimals]: [\n      string,\n      string,\n      number\n    ] = await Promise.all([nameGetter(), symbolGetter(), decimalsGetter()]);\n\n    return {\n      name,\n      symbol,\n      decimals,\n      address: token,\n    };\n  };\n}\n","import {\n  commonContractAddressBetweenMarketsV2,\n  DEFAULT_NULL_VALUE_ON_TX,\n  enabledNetworksByService,\n} from '../config';\nimport {\n  IFaucet,\n  IMinter,\n  IFaucet__factory,\n  IMinter__factory,\n} from '../contract-types';\nimport FaucetInterface from '../interfaces/Faucet';\nimport {\n  Configuration,\n  eEthereumTxType,\n  EthereumTransactionTypeExtended,\n  tEthereumAddress,\n  transactionType,\n  tStringDecimalUnits,\n} from '../types';\nimport { FaucetParamsType } from '../types/FaucetMethodTypes';\nimport { mintAmountsPerToken } from '../utils/parsings';\nimport { FaucetValidator } from '../validators/methodValidators';\nimport { IsEthAddress } from '../validators/paramValidators';\nimport BaseService from './BaseService';\n\nexport default class FaucetService\n  extends BaseService<IMinter>\n  implements FaucetInterface {\n  readonly faucetAddress: string;\n\n  readonly faucetContract: IFaucet;\n\n  constructor(config: Configuration) {\n    super(config, IMinter__factory);\n\n    const { provider, network } = this.config;\n\n    const { FAUCET } = commonContractAddressBetweenMarketsV2[network];\n    this.faucetAddress = FAUCET;\n\n    if (enabledNetworksByService.faucet.indexOf(network) > -1) {\n      this.faucetContract = IFaucet__factory.connect(\n        this.faucetAddress,\n        provider\n      );\n    }\n  }\n\n  @FaucetValidator\n  public async mint(\n    @IsEthAddress('userAddress')\n    @IsEthAddress('reserve')\n    { userAddress, reserve, tokenSymbol }: FaucetParamsType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const amount: string = mintAmountsPerToken[tokenSymbol];\n    const txValue = await this.getTxValue(reserve, amount);\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        this.faucetContract.populateTransaction.mint(reserve, amount),\n      from: userAddress,\n      value: txValue,\n    });\n\n    return [\n      {\n        tx: txCallback,\n        txType: eEthereumTxType.FAUCET_MINT,\n        gas: this.generateTxPriceEstimation([], txCallback),\n      },\n    ];\n  }\n\n  private async getTxValue(\n    token: tEthereumAddress,\n    amount: tStringDecimalUnits\n  ): Promise<tStringDecimalUnits> {\n    const minterAddress: string = await this.faucetContract.getMinter(token);\n    const minterContract: IMinter = this.getContractInstance(minterAddress);\n\n    const isEthRequired: boolean = await minterContract.isEthRequired();\n\n    return isEthRequired ? amount : DEFAULT_NULL_VALUE_ON_TX;\n  }\n}\n","import IERC20ServiceInterface from '../interfaces/ERC20';\nimport {\n  commonContractAddressBetweenMarketsV2,\n  DEFAULT_APPROVE_AMOUNT,\n} from '../config';\nimport {\n  ILendToAaveMigrator,\n  ILendToAaveMigrator__factory,\n} from '../contract-types';\nimport LTAMigratorInterface from '../interfaces/LTAMigrator';\nimport {\n  Configuration,\n  eEthereumTxType,\n  EthereumTransactionTypeExtended,\n  Network,\n  tEthereumAddress,\n  transactionType,\n  tStringCurrencyUnits,\n} from '../types';\nimport { parseNumber } from '../utils/parsings';\nimport BaseService from './BaseService';\n\nexport default class LTAMigratorService\n  extends BaseService<ILendToAaveMigrator>\n  implements LTAMigratorInterface {\n  readonly erc20Service: IERC20ServiceInterface;\n\n  readonly migratorAddress: string;\n\n  constructor(config: Configuration, erc20Service: IERC20ServiceInterface) {\n    super(config, ILendToAaveMigrator__factory);\n    this.erc20Service = erc20Service;\n    const { network }: Configuration = this.config;\n\n    this.migratorAddress =\n      commonContractAddressBetweenMarketsV2[network].LEND_TO_AAVE_MIGRATOR;\n  }\n\n  public migrateLendToAave = async (\n    user: tEthereumAddress,\n    amount: tStringCurrencyUnits\n  ): Promise<EthereumTransactionTypeExtended[]> => {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    // TODO: delete conditional when mainnet address\n    if (this.config.network === Network.ropsten) {\n      return txs;\n    }\n\n    const { isApproved, approve, decimalsOf } = this.erc20Service;\n\n    const migratorContract: ILendToAaveMigrator = this.getContractInstance(\n      this.migratorAddress\n    );\n    const lendToken: string = await migratorContract.LEND();\n\n    const approved: boolean = await isApproved(\n      lendToken,\n      user,\n      this.migratorAddress,\n      amount\n    );\n\n    if (!approved) {\n      txs.push(\n        approve(user, lendToken, this.migratorAddress, DEFAULT_APPROVE_AMOUNT)\n      );\n    }\n\n    const decimals: number = await decimalsOf(lendToken);\n    const convertedAmount: string = await parseNumber(amount, decimals);\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        migratorContract.populateTransaction.migrateFromLEND(convertedAmount),\n      from: user,\n    });\n\n    txs.push({\n      txType: eEthereumTxType.MIGRATION_LEND_AAVE,\n      tx: txCallback,\n      gas: this.generateTxPriceEstimation(txs, txCallback),\n    });\n\n    return txs;\n  };\n}\n","import { constants, utils, Signature } from 'ethers';\nimport IERC20ServiceInterface from '../interfaces/ERC20';\nimport {\n  DEFAULT_APPROVE_AMOUNT,\n  distinctStakingAddressesBetweenTokens,\n  MAX_UINT_AMOUNT,\n} from '../config';\nimport {\n  IStakedToken,\n  IAaveStakingHelper,\n  IAaveStakingHelper__factory,\n  IStakedToken__factory,\n} from '../contract-types';\nimport StakingInterface from '../interfaces/Staking';\nimport {\n  ChainId,\n  Configuration,\n  eEthereumTxType,\n  EthereumTransactionTypeExtended,\n  Stake,\n  tEthereumAddress,\n  transactionType,\n  tStringCurrencyUnits,\n  tStringDecimalUnits,\n} from '../types';\nimport { parseNumber } from '../utils/parsings';\nimport { StakingValidator } from '../validators/methodValidators';\nimport {\n  IsEthAddress,\n  IsPositiveAmount,\n  IsPositiveOrMinusOneAmount,\n  Optional,\n} from '../validators/paramValidators';\nimport BaseService from './BaseService';\n\nexport default class StakingService\n  extends BaseService<IStakedToken>\n  implements StakingInterface {\n  readonly stakingHelperContract: IAaveStakingHelper;\n\n  readonly stakingContractAddress: string;\n\n  readonly stakingHelperContractAddress: string;\n\n  readonly erc20Service: IERC20ServiceInterface;\n\n  readonly tokenStake: Stake;\n\n  readonly canUsePermit: boolean;\n\n  constructor(\n    config: Configuration,\n    erc20Service: IERC20ServiceInterface,\n    tokenStake: Stake\n  ) {\n    super(config, IStakedToken__factory);\n    this.tokenStake = tokenStake;\n    this.erc20Service = erc20Service;\n\n    const { provider, network } = this.config;\n\n    const {\n      TOKEN_STAKING_ADDRESS,\n      STAKING_HELPER_ADDRESS,\n      canUsePermit,\n    } = distinctStakingAddressesBetweenTokens[this.tokenStake][network];\n\n    this.stakingContractAddress = TOKEN_STAKING_ADDRESS;\n    this.stakingHelperContractAddress = STAKING_HELPER_ADDRESS;\n    this.canUsePermit = canUsePermit;\n\n    if (this.canUsePermit) {\n      this.stakingHelperContract = IAaveStakingHelper__factory.connect(\n        STAKING_HELPER_ADDRESS,\n        provider\n      );\n    }\n  }\n\n  @StakingValidator\n  public async signStaking(\n    @IsEthAddress() user: tEthereumAddress,\n    @IsPositiveAmount() amount: tStringCurrencyUnits,\n    nonce: string\n  ): Promise<string> {\n    if (!this.canUsePermit) return '';\n\n    const { getTokenData } = this.erc20Service;\n    const stakingContract: IStakedToken = this.getContractInstance(\n      this.stakingContractAddress\n    );\n    const stakedToken: string = await stakingContract.STAKED_TOKEN();\n    const { name, decimals } = await getTokenData(stakedToken);\n    const convertedAmount: tStringDecimalUnits = parseNumber(amount, decimals);\n\n    const typeData = {\n      types: {\n        EIP712Domain: [\n          { name: 'name', type: 'string' },\n          { name: 'version', type: 'string' },\n          { name: 'chainId', type: 'uint256' },\n          { name: 'verifyingContract', type: 'address' },\n        ],\n        Permit: [\n          { name: 'owner', type: 'address' },\n          { name: 'spender', type: 'address' },\n          { name: 'value', type: 'uint256' },\n          { name: 'nonce', type: 'uint256' },\n          { name: 'deadline', type: 'uint256' },\n        ],\n      },\n      primaryType: 'Permit' as const,\n      domain: {\n        name,\n        version: '1',\n        chainId: ChainId[this.config.network],\n        verifyingContract: stakedToken,\n      },\n      message: {\n        owner: user,\n        spender: this.stakingHelperContractAddress,\n        value: convertedAmount,\n        nonce,\n        deadline: constants.MaxUint256.toString(),\n      },\n    };\n\n    return JSON.stringify(typeData);\n  }\n\n  @StakingValidator\n  public async stakeWithPermit(\n    @IsEthAddress() user: tEthereumAddress,\n    @IsPositiveAmount() amount: tStringCurrencyUnits,\n    signature: string\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    if (!this.canUsePermit) return [];\n\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const { decimalsOf } = this.erc20Service;\n    const stakingContract: IStakedToken = this.getContractInstance(\n      this.stakingContractAddress\n    );\n    const stakedToken: string = await stakingContract.STAKED_TOKEN();\n    const stakedTokenDecimals: number = await decimalsOf(stakedToken);\n    const convertedAmount: tStringDecimalUnits = parseNumber(\n      amount,\n      stakedTokenDecimals\n    );\n    const sig: Signature = utils.splitSignature(signature);\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        this.stakingHelperContract.populateTransaction.stake(\n          user,\n          convertedAmount,\n          sig.v,\n          sig.r,\n          sig.s\n        ),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.STAKE_ACTION,\n      gas: this.generateTxPriceEstimation(txs, txCallback),\n    });\n\n    return txs;\n  }\n\n  @StakingValidator\n  public async stake(\n    @IsEthAddress() user: tEthereumAddress,\n    @IsPositiveAmount() amount: tStringCurrencyUnits,\n    @Optional @IsEthAddress() onBehalfOf?: tEthereumAddress\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const { decimalsOf, isApproved, approve } = this.erc20Service;\n    const stakingContract: IStakedToken = this.getContractInstance(\n      this.stakingContractAddress\n    );\n    const stakedToken: string = await stakingContract.STAKED_TOKEN();\n    const stakedTokenDecimals: number = await decimalsOf(stakedToken);\n    const convertedAmount: tStringDecimalUnits = parseNumber(\n      amount,\n      stakedTokenDecimals\n    );\n    const approved: boolean = await isApproved(\n      stakedToken,\n      user,\n      this.stakingContractAddress,\n      amount\n    );\n    if (!approved) {\n      const approveTx = approve(\n        user,\n        stakedToken,\n        this.stakingContractAddress,\n        DEFAULT_APPROVE_AMOUNT\n      );\n      txs.push(approveTx);\n    }\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        stakingContract.populateTransaction.stake(\n          onBehalfOf || user,\n          convertedAmount\n        ),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.STAKE_ACTION,\n      gas: this.generateTxPriceEstimation(txs, txCallback),\n    });\n\n    return txs;\n  }\n\n  @StakingValidator\n  public async redeem(\n    @IsEthAddress() user: tEthereumAddress,\n    @IsPositiveOrMinusOneAmount() amount: tStringCurrencyUnits\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    let convertedAmount: tStringDecimalUnits;\n    const stakingContract: IStakedToken = this.getContractInstance(\n      this.stakingContractAddress\n    );\n    if (amount === '-1') {\n      convertedAmount = MAX_UINT_AMOUNT;\n    } else {\n      const { decimalsOf } = this.erc20Service;\n\n      const stakedToken: string = await stakingContract.STAKED_TOKEN();\n      const stakedTokenDecimals: number = await decimalsOf(stakedToken);\n      convertedAmount = parseNumber(amount, stakedTokenDecimals);\n    }\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        stakingContract.populateTransaction.redeem(user, convertedAmount),\n      from: user,\n      gasSurplus: 20,\n    });\n\n    return [\n      {\n        tx: txCallback,\n        txType: eEthereumTxType.STAKE_ACTION,\n        gas: this.generateTxPriceEstimation([], txCallback),\n      },\n    ];\n  }\n\n  @StakingValidator\n  public async cooldown(\n    @IsEthAddress() user: tEthereumAddress\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const stakingContract: IStakedToken = this.getContractInstance(\n      this.stakingContractAddress\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () => stakingContract.populateTransaction.cooldown(),\n      from: user,\n    });\n\n    return [\n      {\n        tx: txCallback,\n        txType: eEthereumTxType.STAKE_ACTION,\n        gas: this.generateTxPriceEstimation([], txCallback),\n      },\n    ];\n  }\n\n  @StakingValidator\n  public async claimRewards(\n    @IsEthAddress() user: tEthereumAddress,\n    @IsPositiveOrMinusOneAmount() amount: tStringCurrencyUnits\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    let convertedAmount: tStringDecimalUnits;\n    const stakingContract: IStakedToken = this.getContractInstance(\n      this.stakingContractAddress\n    );\n    if (amount === '-1') {\n      convertedAmount = MAX_UINT_AMOUNT;\n    } else {\n      const { decimalsOf } = this.erc20Service;\n      const stakedToken: string = await stakingContract.REWARD_TOKEN();\n      const stakedTokenDecimals: number = await decimalsOf(stakedToken);\n      convertedAmount = parseNumber(amount, stakedTokenDecimals);\n    }\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        stakingContract.populateTransaction.claimRewards(user, convertedAmount),\n      from: user,\n      gasSurplus: 20,\n    });\n\n    return [\n      {\n        tx: txCallback,\n        txType: eEthereumTxType.STAKE_ACTION,\n        gas: this.generateTxPriceEstimation([], txCallback),\n      },\n    ];\n  }\n}\n","import { BigNumber } from 'ethers';\nimport BaseService from './BaseService';\nimport { Configuration, tStringDecimalUnits } from '../types';\nimport { ISynthetix, ISynthetix__factory } from '../contract-types';\nimport SynthetixInterface from '../interfaces/Synthetix';\nimport { commonContractAddressBetweenMarketsV2 } from '../config';\n\nexport default class SynthetixService\n  extends BaseService<ISynthetix>\n  implements SynthetixInterface {\n  constructor(config: Configuration) {\n    super(config, ISynthetix__factory);\n  }\n\n  public synthetixValidation = async (\n    userAddress: string,\n    reserve: string,\n    amount: tStringDecimalUnits\n  ): Promise<boolean> => {\n    const synthAddress =\n      commonContractAddressBetweenMarketsV2[this.config.network]\n        .SYNTHETIX_PROXY_ADDRESS;\n\n    if (reserve.toUpperCase() === synthAddress.toUpperCase()) {\n      return this.isSnxTransferable(userAddress, amount);\n    }\n    return true;\n  };\n\n  readonly isSnxTransferable = async (\n    userAddress: string,\n    amount: tStringDecimalUnits\n  ): Promise<boolean> => {\n    const synthContract = this.getContractInstance(\n      commonContractAddressBetweenMarketsV2[this.config.network]\n        .SYNTHETIX_PROXY_ADDRESS\n    );\n\n    const transferableAmount: BigNumber = await synthContract.transferableSynthetix(\n      userAddress\n    );\n    return BigNumber.from(amount).lte(transferableAmount);\n  };\n}\n","import { ethers, providers } from 'ethers';\nimport FaucetInterface from './interfaces/Faucet';\nimport IERC20ServiceInterface from './interfaces/ERC20';\nimport LTAMigratorInterface from './interfaces/LTAMigrator';\nimport StakingInterface from './interfaces/Staking';\nimport SynthetixInterface from './interfaces/Synthetix';\nimport ERC20Service from './services/ERC20';\nimport FaucetService from './services/Faucet';\nimport LTAMigratorService from './services/LTAMigrator';\nimport StakingService from './services/Staking';\nimport SynthetixService from './services/SynthetixService';\nimport { Configuration, DefaultProviderKeys, Network, Stake } from './types';\n\nexport default class BaseTxBuilder {\n  readonly configuration: Configuration;\n\n  public erc20Service: IERC20ServiceInterface;\n\n  public synthetixService: SynthetixInterface;\n\n  public ltaMigratorService: LTAMigratorInterface;\n\n  public faucetService: FaucetInterface;\n\n  readonly stakings: { [stake: string]: StakingInterface };\n\n  constructor(\n    network: Network = Network.mainnet,\n    injectedProvider?:\n      | providers.ExternalProvider\n      | providers.Web3Provider\n      | string\n      | undefined,\n    defaultProviderKeys?: DefaultProviderKeys\n  ) {\n    let provider:\n      | providers.JsonRpcProvider\n      | providers.BaseProvider\n      | providers.Web3Provider;\n\n    if (!injectedProvider) {\n      if (defaultProviderKeys && Object.keys(defaultProviderKeys).length > 1) {\n        provider = ethers.getDefaultProvider(network, defaultProviderKeys);\n      } else {\n        provider = ethers.getDefaultProvider(network);\n        console.log(\n          `These API keys are a provided as a community resource by the backend services for low-traffic projects and for early prototyping.\n          It is highly recommended to use own keys: https://docs.ethers.io/v5/api-keys/`\n        );\n      }\n    } else if (typeof injectedProvider === 'string') {\n      provider = new providers.JsonRpcProvider(injectedProvider, network);\n    } else if (injectedProvider instanceof providers.Web3Provider) {\n      provider = injectedProvider;\n    } else {\n      provider = new providers.Web3Provider(injectedProvider, network);\n    }\n\n    this.configuration = { network, provider };\n\n    this.erc20Service = new ERC20Service(this.configuration);\n    this.synthetixService = new SynthetixService(this.configuration);\n    this.ltaMigratorService = new LTAMigratorService(\n      this.configuration,\n      this.erc20Service\n    );\n    this.faucetService = new FaucetService(this.configuration);\n\n    this.stakings = {};\n  }\n\n  public getStaking = (stake?: Stake): StakingInterface => {\n    const stakeToken = stake || Stake.Aave;\n    if (!this.stakings[stakeToken]) {\n      this.stakings[stakeToken] = new StakingService(\n        this.configuration,\n        this.erc20Service,\n        stakeToken\n      );\n    }\n\n    return this.stakings[stakeToken];\n  };\n}\n","import { constants } from 'ethers';\nimport { commonContractAddressBetweenMarketsV2 } from '../config';\nimport { IWETHGateway, IWETHGateway__factory } from '../contract-types';\nimport BaseDebtTokenInterface from '../interfaces/BaseDebtToken';\nimport IERC20ServiceInterface from '../interfaces/ERC20';\nimport WETHGatewayInterface from '../interfaces/WETHGateway';\nimport {\n  Configuration,\n  eEthereumTxType,\n  EthereumTransactionTypeExtended,\n  InterestRate,\n  ProtocolAction,\n  transactionType,\n  tStringDecimalUnits,\n} from '../types';\nimport {\n  WETHBorrowParamsType,\n  WETHDepositParamsType,\n  WETHRepayParamsType,\n  WETHWithdrawParamsType,\n} from '../types/WethGatewayMethodTypes';\nimport { parseNumber } from '../utils/parsings';\nimport { WETHValidator } from '../validators/methodValidators';\nimport {\n  IsEthAddress,\n  IsPositiveAmount,\n  IsPositiveOrMinusOneAmount,\n} from '../validators/paramValidators';\nimport BaseService from './BaseService';\n\nexport default class WETHGatewayService\n  extends BaseService<IWETHGateway>\n  implements WETHGatewayInterface {\n  readonly wethGatewayAddress: string;\n\n  readonly config: Configuration;\n\n  readonly baseDebtTokenService: BaseDebtTokenInterface;\n\n  readonly erc20Service: IERC20ServiceInterface;\n\n  constructor(\n    config: Configuration,\n    baseDebtTokenService: BaseDebtTokenInterface,\n    erc20Service: IERC20ServiceInterface\n  ) {\n    super(config, IWETHGateway__factory);\n    this.config = config;\n    this.baseDebtTokenService = baseDebtTokenService;\n    this.erc20Service = erc20Service;\n\n    const { network } = this.config;\n    const { WETH_GATEWAY } = commonContractAddressBetweenMarketsV2[network];\n\n    this.wethGatewayAddress = WETH_GATEWAY;\n  }\n\n  @WETHValidator\n  public async depositETH(\n    @IsEthAddress('user')\n    @IsEthAddress('onBehalfOf')\n    @IsPositiveAmount('amount')\n    { user, amount, onBehalfOf, referralCode }: WETHDepositParamsType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const convertedAmount: tStringDecimalUnits = parseNumber(amount, 18);\n\n    const wethGatewayContract: IWETHGateway = this.getContractInstance(\n      this.wethGatewayAddress\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        wethGatewayContract.populateTransaction.depositETH(\n          onBehalfOf || user,\n          referralCode || '0'\n        ),\n      from: user,\n      value: convertedAmount,\n    });\n\n    return [\n      {\n        tx: txCallback,\n        txType: eEthereumTxType.DLP_ACTION,\n        gas: this.generateTxPriceEstimation([], txCallback),\n      },\n    ];\n  }\n\n  @WETHValidator\n  public async borrowETH(\n    @IsEthAddress('user')\n    @IsPositiveAmount('amount')\n    @IsEthAddress('debtTokenAddress')\n    {\n      user,\n      amount,\n      debtTokenAddress,\n      interestRateMode,\n      referralCode,\n    }: WETHBorrowParamsType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const convertedAmount: tStringDecimalUnits = parseNumber(amount, 18);\n    const numericRateMode = interestRateMode === InterestRate.Variable ? 2 : 1;\n\n    const delegationApproved: boolean = await this.baseDebtTokenService.isDelegationApproved(\n      debtTokenAddress,\n      user,\n      this.wethGatewayAddress,\n      amount\n    );\n\n    if (!delegationApproved) {\n      const approveDelegationTx: EthereumTransactionTypeExtended = this.baseDebtTokenService.approveDelegation(\n        user,\n        this.wethGatewayAddress,\n        debtTokenAddress,\n        constants.MaxUint256.toString()\n      );\n\n      txs.push(approveDelegationTx);\n    }\n    const wethGatewayContract: IWETHGateway = this.getContractInstance(\n      this.wethGatewayAddress\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        wethGatewayContract.populateTransaction.borrowETH(\n          convertedAmount,\n          numericRateMode,\n          referralCode || '0'\n        ),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.DLP_ACTION,\n      gas: this.generateTxPriceEstimation(\n        txs,\n        txCallback,\n        ProtocolAction.borrowETH\n      ),\n    });\n\n    return txs;\n  }\n\n  @WETHValidator\n  public async withdrawETH(\n    @IsEthAddress('user')\n    @IsEthAddress('onBehalfOf')\n    @IsPositiveOrMinusOneAmount('amount')\n    @IsEthAddress('aTokenAddress')\n    { user, amount, onBehalfOf, aTokenAddress }: WETHWithdrawParamsType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const { isApproved, approve }: IERC20ServiceInterface = this.erc20Service;\n    const convertedAmount: tStringDecimalUnits =\n      amount === '-1'\n        ? constants.MaxUint256.toString()\n        : parseNumber(amount, 18);\n\n    const approved: boolean = await isApproved(\n      aTokenAddress,\n      user,\n      this.wethGatewayAddress,\n      amount\n    );\n\n    if (!approved) {\n      const approveTx: EthereumTransactionTypeExtended = approve(\n        user,\n        aTokenAddress,\n        this.wethGatewayAddress,\n        constants.MaxUint256.toString()\n      );\n      txs.push(approveTx);\n    }\n    const wethGatewayContract: IWETHGateway = this.getContractInstance(\n      this.wethGatewayAddress\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        wethGatewayContract.populateTransaction.withdrawETH(\n          convertedAmount,\n          onBehalfOf || user\n        ),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.DLP_ACTION,\n      gas: this.generateTxPriceEstimation(\n        txs,\n        txCallback,\n        ProtocolAction.withdrawETH\n      ),\n    });\n\n    return txs;\n  }\n\n  @WETHValidator\n  public async repayETH(\n    @IsEthAddress('user')\n    @IsEthAddress('onBehalfOf')\n    @IsPositiveAmount('amount')\n    { user, amount, interestRateMode, onBehalfOf }: WETHRepayParamsType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const convertedAmount: tStringDecimalUnits = parseNumber(amount, 18);\n    const numericRateMode = interestRateMode === InterestRate.Variable ? 2 : 1;\n    const wethGatewayContract: IWETHGateway = this.getContractInstance(\n      this.wethGatewayAddress\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        wethGatewayContract.populateTransaction.repayETH(\n          convertedAmount,\n          numericRateMode,\n          onBehalfOf || user\n        ),\n      from: user,\n      value: convertedAmount,\n    });\n\n    return [\n      {\n        tx: txCallback,\n        txType: eEthereumTxType.DLP_ACTION,\n        gas: this.generateTxPriceEstimation([], txCallback),\n      },\n    ];\n  }\n}\n","import { BigNumber } from 'ethers';\nimport { IDebtTokenBase, IDebtTokenBase__factory } from '../contract-types';\nimport BaseDebtTokenInterface from '../interfaces/BaseDebtToken';\nimport IERC20ServiceInterface from '../interfaces/ERC20';\nimport {\n  Configuration,\n  eEthereumTxType,\n  EthereumTransactionTypeExtended,\n  tEthereumAddress,\n  transactionType,\n  tStringCurrencyUnits,\n  tStringDecimalUnits,\n} from '../types';\nimport { parseNumber } from '../utils/parsings';\nimport BaseService from './BaseService';\n\nexport default class BaseDebtToken\n  extends BaseService<IDebtTokenBase>\n  implements BaseDebtTokenInterface {\n  readonly erc20Service: IERC20ServiceInterface;\n\n  constructor(config: Configuration, erc20Service: IERC20ServiceInterface) {\n    super(config, IDebtTokenBase__factory);\n    this.erc20Service = erc20Service;\n  }\n\n  public approveDelegation(\n    user: tEthereumAddress,\n    delegatee: tEthereumAddress,\n    debtTokenAddress: tEthereumAddress,\n    amount: tStringDecimalUnits\n  ): EthereumTransactionTypeExtended {\n    const debtTokenContract: IDebtTokenBase = this.getContractInstance(\n      debtTokenAddress\n    );\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        debtTokenContract.populateTransaction.approveDelegation(\n          delegatee,\n          amount\n        ),\n      from: user,\n    });\n\n    return {\n      tx: txCallback,\n      txType: eEthereumTxType.ERC20_APPROVAL,\n      gas: this.generateTxPriceEstimation([], txCallback),\n    };\n  }\n\n  public async isDelegationApproved(\n    debtTokenAddress: tEthereumAddress,\n    allowanceGiver: tEthereumAddress,\n    allowanceReceiver: tEthereumAddress,\n    amount: tStringCurrencyUnits\n  ): Promise<boolean> {\n    const decimals: number = await this.erc20Service.decimalsOf(\n      debtTokenAddress\n    );\n    const debtTokenContract: IDebtTokenBase = this.getContractInstance(\n      debtTokenAddress\n    );\n    const delegatedAllowance: BigNumber = await debtTokenContract.borrowAllowance(\n      allowanceGiver,\n      allowanceReceiver\n    );\n    const amountBNWithDecimals: BigNumber = BigNumber.from(\n      parseNumber(amount, decimals)\n    );\n\n    return delegatedAllowance.gt(amountBNWithDecimals);\n  }\n}\n","import { commonContractAddressBetweenMarketsV2 } from '../config';\nimport { ISwapCollateral__factory, ISwapCollateral } from '../contract-types';\nimport LiquiditySwapAdapterInterface from '../interfaces/LiquiditySwapAdapter';\nimport {\n  Configuration,\n  eEthereumTxType,\n  EthereumTransactionTypeExtended,\n  transactionType,\n} from '../types';\nimport { SwapAndDepositMethodType } from '../types/LiquiditySwapAdapterMethodTypes';\nimport { LiquiditySwapValidator } from '../validators/methodValidators';\nimport { IsEthAddress, IsPositiveAmount } from '../validators/paramValidators';\nimport BaseService from './BaseService';\n\nexport default class LiquiditySwapAdapterService\n  extends BaseService<ISwapCollateral>\n  implements LiquiditySwapAdapterInterface {\n  readonly liquiditySwapAdapterAddress: string;\n\n  constructor(config: Configuration) {\n    super(config, ISwapCollateral__factory);\n\n    const { SWAP_COLLATERAL_ADAPTER } = commonContractAddressBetweenMarketsV2[\n      this.config.network\n    ];\n    this.liquiditySwapAdapterAddress = SWAP_COLLATERAL_ADAPTER;\n  }\n\n  @LiquiditySwapValidator\n  public swapAndDeposit(\n    @IsEthAddress('user')\n    @IsEthAddress('assetToSwapFrom')\n    @IsEthAddress('assetToSwapTo')\n    @IsPositiveAmount('amountToSwap')\n    @IsPositiveAmount('minAmountToReceive')\n    {\n      user,\n      assetToSwapFrom,\n      assetToSwapTo,\n      amountToSwap,\n      minAmountToReceive,\n      permitParams,\n      useEthPath,\n    }: SwapAndDepositMethodType\n  ): EthereumTransactionTypeExtended {\n    const liquiditySwapContract = this.getContractInstance(\n      this.liquiditySwapAdapterAddress\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        liquiditySwapContract.populateTransaction.swapAndDeposit(\n          [assetToSwapFrom],\n          [assetToSwapTo],\n          [amountToSwap],\n          [minAmountToReceive],\n          [permitParams],\n          [useEthPath || false]\n        ),\n      from: user,\n    });\n\n    return {\n      tx: txCallback,\n      txType: eEthereumTxType.DLP_ACTION,\n      gas: this.generateTxPriceEstimation([], txCallback),\n    };\n  }\n}\n","import { commonContractAddressBetweenMarketsV2 } from '../config';\nimport {\n  IRepayWithCollateral,\n  IRepayWithCollateral__factory,\n} from '../contract-types';\nimport RepayWithCollateralAdapterInterface from '../interfaces/RepayWithCollateralAdapter';\nimport {\n  Configuration,\n  eEthereumTxType,\n  EthereumTransactionTypeExtended,\n  transactionType,\n} from '../types';\nimport { RepayWithCollateralType } from '../types/RepayWithCollateralMethodTypes';\nimport { RepayWithCollateralValidator } from '../validators/methodValidators';\nimport { IsEthAddress, IsPositiveAmount } from '../validators/paramValidators';\nimport BaseService from './BaseService';\n\nexport default class RepayWithCollateralAdapterService\n  extends BaseService<IRepayWithCollateral>\n  implements RepayWithCollateralAdapterInterface {\n  readonly repayWithCollateralAddress: string;\n\n  constructor(config: Configuration) {\n    super(config, IRepayWithCollateral__factory);\n\n    const {\n      REPAY_WITH_COLLATERAL_ADAPTER,\n    } = commonContractAddressBetweenMarketsV2[this.config.network];\n\n    this.repayWithCollateralAddress = REPAY_WITH_COLLATERAL_ADAPTER;\n  }\n\n  @RepayWithCollateralValidator\n  public swapAndRepay(\n    @IsEthAddress('user')\n    @IsEthAddress('collateralAsset')\n    @IsEthAddress('debtAsset')\n    @IsPositiveAmount('collateralAmount')\n    @IsPositiveAmount('debtRepayAmount')\n    {\n      user,\n      collateralAsset,\n      debtAsset,\n      collateralAmount,\n      debtRepayAmount,\n      debtRateMode,\n      permit,\n      useEthPath,\n    }: RepayWithCollateralType\n  ): EthereumTransactionTypeExtended {\n    const repayWithCollateralContract: IRepayWithCollateral = this.getContractInstance(\n      this.repayWithCollateralAddress\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        repayWithCollateralContract.populateTransaction.swapAndRepay(\n          collateralAsset,\n          debtAsset,\n          collateralAmount,\n          debtRepayAmount,\n          debtRateMode,\n          permit,\n          useEthPath || false\n        ),\n      from: user,\n    });\n\n    return {\n      tx: txCallback,\n      txType: eEthereumTxType.DLP_ACTION,\n      gas: this.generateTxPriceEstimation([], txCallback),\n    };\n  }\n}\n","import { BytesLike } from 'ethers';\nimport { tEthereumAddress } from '.';\n\nexport enum ExecutorType {\n  Short,\n  Long,\n}\n\nexport type GovCreateType = {\n  user: tEthereumAddress;\n  targets: tEthereumAddress[];\n  values: string[];\n  signatures: string[];\n  calldatas: BytesLike[];\n  withDelegateCalls: boolean[];\n  ipfsHash: BytesLike;\n  executor: ExecutorType;\n};\nexport type GovCancelType = {\n  user: tEthereumAddress;\n  proposalId: number;\n};\nexport type GovQueueType = {\n  user: tEthereumAddress;\n  proposalId: number;\n};\nexport type GovExecuteType = {\n  user: tEthereumAddress;\n  proposalId: number;\n};\nexport type GovSubmitVoteType = {\n  user: tEthereumAddress;\n  proposalId: number;\n  support: boolean;\n};\nexport type GovSubmitVoteSignType = {\n  user: tEthereumAddress;\n  proposalId: number;\n  support: boolean;\n  signature: string;\n};\n\nexport type GovSignVotingType = {\n  user: tEthereumAddress;\n  support: boolean;\n  proposalId: number;\n  nonce: number;\n};\n\nexport type GovGetProposalsType = {\n  skip: number;\n  limit: number;\n};\n\nexport type GovGetProposalType = {\n  proposalId: number;\n};\n\nexport type GovGetVotingSupplyType = {\n  block: number;\n  strategy: tEthereumAddress;\n};\n\nexport type GovGetVotingAtBlockType = {\n  user: tEthereumAddress;\n  strategy: tEthereumAddress;\n  block: number;\n};\n\nexport type GovGetTokensVotingPower = {\n  user: tEthereumAddress;\n  tokens: tEthereumAddress[];\n};\n\nexport type GovGetVoteOnProposal = {\n  proposalId: string;\n  user: tEthereumAddress;\n};\n","import { BigNumber } from 'ethers';\nimport { tEthereumAddress } from '.';\n\nexport enum ProposalState {\n  Pending = 'Pending',\n  Canceled = 'Canceled',\n  Active = 'Active',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Queued = 'Queued',\n  Expired = 'Expired',\n  Executed = 'Executed',\n}\n\nexport type Proposal = {\n  id: number;\n  title: string;\n  description: string;\n  shortDescription: string;\n  creator: tEthereumAddress;\n  executor: tEthereumAddress;\n  targets: tEthereumAddress[];\n  values: BigNumber[];\n  signatures: string[];\n  calldatas: string[];\n  withDelegatecalls: boolean[];\n  startBlock: number;\n  endBlock: number;\n  executionTime: string;\n  executionTimeWithGracePeriod: string;\n  forVotes: string;\n  againstVotes: string;\n  executed: boolean;\n  canceled: boolean;\n  strategy: string;\n  ipfsHash: string;\n  state: ProposalState;\n  minimumQuorum: string;\n  minimumDiff: string;\n  proposalCreated: number;\n  totalVotingSupply: string;\n};\n\nexport type ProposalRPC = {\n  totalVotingSupply: BigNumber;\n  minimumQuorum: BigNumber;\n  minimumDiff: BigNumber;\n  executionTimeWithGracePeriod: BigNumber;\n  proposalCreated: BigNumber;\n  id: BigNumber;\n  creator: string;\n  executor: string;\n  targets: string[];\n  values: BigNumber[];\n  signatures: string[];\n  calldatas: string[];\n  withDelegatecalls: boolean[];\n  startBlock: BigNumber;\n  endBlock: BigNumber;\n  executionTime: BigNumber;\n  forVotes: BigNumber;\n  againstVotes: BigNumber;\n  executed: boolean;\n  canceled: boolean;\n  strategy: string;\n  ipfsHash: string;\n  proposalState: number;\n};\n\nexport type ProposalMetadata = {\n  title: string;\n  description: string;\n  shortDescription: string;\n  ipfsHash: string;\n};\n\nexport type Power = {\n  votingPower: BigNumber;\n  delegatedAddressVotingPower: string;\n  propositionPower: BigNumber;\n  delegatedAddressPropositionPower: string;\n};\n\nexport type Vote = { support: boolean; votingPower: BigNumber };\n","import axios from 'axios';\nimport { base58 } from 'ethers/lib/utils';\nimport { ProposalMetadata } from '../types/GovernanceV2ReturnTypes';\n\nconst ipfsEndpoint = 'https://cloudflare-ipfs.com/ipfs';\n\nexport function getLink(hash: string): string {\n  return `${ipfsEndpoint}/${hash}`;\n}\n\ninterface MemorizeMetadata {\n  [key: string]: ProposalMetadata;\n}\n\nconst MEMORIZE: MemorizeMetadata = {};\n\nexport async function getProposalMetadata(\n  hash: string\n): Promise<ProposalMetadata> {\n  const ipfsHash = base58.encode(Buffer.from(`1220${hash.slice(2)}`, 'hex'));\n  if (MEMORIZE[ipfsHash]) return MEMORIZE[ipfsHash];\n  try {\n    const { data } = await axios.get(getLink(ipfsHash), { timeout: 2000 });\n\n    if (!data?.title) {\n      throw Error('Missing title field at proposal metadata.');\n    }\n    if (!data?.description) {\n      throw Error('Missing description field at proposal metadata.');\n    }\n    if (!data?.shortDescription) {\n      throw Error('Missing shortDescription field at proposal metadata.');\n    }\n\n    MEMORIZE[ipfsHash] = {\n      ipfsHash,\n      title: data.title,\n      description: data.description,\n      shortDescription: data.shortDescription,\n    };\n    return MEMORIZE[ipfsHash];\n  } catch (e) {\n    console.error(`@aave/protocol-js: IPFS fetch Error: ${e.message}`);\n    return {\n      ipfsHash,\n      title: `Proposal - ${ipfsHash}`,\n      description: `Proposal with invalid metadata format or IPFS gateway is down`,\n      shortDescription: `Proposal with invalid metadata format or IPFS gateway is down`,\n    };\n  }\n}\n","import { Signature, utils } from 'ethers';\nimport { formatEther } from 'ethers/lib/utils';\nimport { aaveGovernanceV2Addresses } from '../../config';\nimport {\n  IGovernanceStrategy,\n  IGovernanceStrategy__factory,\n  IGovernanceV2Helper,\n  IGovernanceV2Helper__factory,\n} from '../../contract-types';\nimport { IAaveGovernanceV2__factory } from '../../contract-types/factories/IAaveGovernanceV2__factory';\nimport { IAaveGovernanceV2 } from '../../contract-types/IAaveGovernanceV2';\nimport AaveGovernanceV2Interface from '../../interfaces/v2/AaveGovernanceV2';\nimport {\n  ChainId,\n  Configuration,\n  eEthereumTxType,\n  EthereumTransactionTypeExtended,\n  tEthereumAddress,\n  transactionType,\n} from '../../types';\nimport {\n  ExecutorType,\n  GovCancelType,\n  GovCreateType,\n  GovExecuteType,\n  GovGetProposalsType,\n  GovGetProposalType,\n  GovGetVotingAtBlockType,\n  GovGetVotingSupplyType,\n  GovQueueType,\n  GovSignVotingType,\n  GovSubmitVoteSignType,\n  GovSubmitVoteType,\n  GovGetTokensVotingPower as GovGetPower,\n  GovGetVoteOnProposal,\n} from '../../types/GovernanceV2MethodTypes';\nimport {\n  Proposal,\n  ProposalState,\n  Power,\n  ProposalRPC,\n  Vote,\n} from '../../types/GovernanceV2ReturnTypes';\nimport { getProposalMetadata } from '../../utils/ipfs';\nimport { GovValidator } from '../../validators/methodValidators';\nimport {\n  Is0OrPositiveAmount,\n  IsEthAddress,\n} from '../../validators/paramValidators';\nimport BaseService from '../BaseService';\n\nconst parseProposal = async (rawProposal: ProposalRPC): Promise<Proposal> => {\n  const {\n    id,\n    creator,\n    executor,\n    targets,\n    values,\n    signatures,\n    calldatas,\n    withDelegatecalls,\n    startBlock,\n    endBlock,\n    executionTime,\n    forVotes,\n    againstVotes,\n    executed,\n    canceled,\n    strategy,\n    ipfsHash: ipfsHex,\n    totalVotingSupply,\n    minimumQuorum,\n    minimumDiff,\n    executionTimeWithGracePeriod,\n    proposalCreated,\n    proposalState,\n  } = rawProposal;\n\n  const proposalMetadata = await getProposalMetadata(ipfsHex);\n  const proposal: Proposal = {\n    id: Number(id.toString()),\n    creator,\n    executor,\n    targets,\n    values,\n    signatures,\n    calldatas,\n    withDelegatecalls,\n    startBlock: Number(startBlock.toString()),\n    endBlock: Number(endBlock.toString()),\n    executionTime: executionTime.toString(),\n    forVotes: forVotes.toString(),\n    againstVotes: againstVotes.toString(),\n    executed,\n    canceled,\n    strategy,\n    ipfsHash: proposalMetadata.ipfsHash,\n    state: Object.values(ProposalState)[proposalState],\n    minimumQuorum: minimumQuorum.toString(),\n    minimumDiff: minimumDiff.toString(),\n    executionTimeWithGracePeriod: executionTimeWithGracePeriod.toString(),\n    title: proposalMetadata.title,\n    description: proposalMetadata.description,\n    shortDescription: proposalMetadata.shortDescription,\n    proposalCreated: Number(proposalCreated.toString()),\n    totalVotingSupply: totalVotingSupply.toString(),\n  };\n\n  return proposal;\n};\nexport default class AaveGovernanceV2Service\n  extends BaseService<IAaveGovernanceV2>\n  implements AaveGovernanceV2Interface {\n  readonly aaveGovernanceV2Address: string;\n\n  readonly aaveGovernanceV2HelperAddress: string;\n\n  readonly executors: tEthereumAddress[] = [];\n\n  constructor(config: Configuration) {\n    super(config, IAaveGovernanceV2__factory);\n\n    const { network } = this.config;\n    const {\n      AAVE_GOVERNANCE_V2,\n      AAVE_GOVERNANCE_V2_HELPER,\n      AAVE_GOVERNANCE_V2_EXECUTOR_SHORT,\n      AAVE_GOVERNANCE_V2_EXECUTOR_LONG,\n    } = aaveGovernanceV2Addresses[network];\n\n    this.aaveGovernanceV2Address = AAVE_GOVERNANCE_V2;\n    this.aaveGovernanceV2HelperAddress = AAVE_GOVERNANCE_V2_HELPER;\n    this.executors[ExecutorType.Short] = AAVE_GOVERNANCE_V2_EXECUTOR_SHORT;\n    this.executors[ExecutorType.Long] = AAVE_GOVERNANCE_V2_EXECUTOR_LONG;\n  }\n\n  @GovValidator\n  public async create(\n    @IsEthAddress('user')\n    {\n      user,\n      targets,\n      values,\n      signatures,\n      calldatas,\n      withDelegateCalls,\n      ipfsHash,\n      executor,\n    }: GovCreateType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n\n    const govContract: IAaveGovernanceV2 = this.getContractInstance(\n      this.aaveGovernanceV2Address\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        govContract.populateTransaction.create(\n          this.executors[executor],\n          targets,\n          values,\n          signatures,\n          calldatas,\n          withDelegateCalls,\n          ipfsHash\n        ),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.GOVERNANCE_ACTION,\n      gas: this.generateTxPriceEstimation(txs, txCallback),\n    });\n    return txs;\n  }\n\n  @GovValidator\n  public async cancel(\n    @IsEthAddress('user')\n    @Is0OrPositiveAmount('proposalId')\n    { user, proposalId }: GovCancelType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const govContract: IAaveGovernanceV2 = this.getContractInstance(\n      this.aaveGovernanceV2Address\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () => govContract.populateTransaction.cancel(proposalId),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.GOVERNANCE_ACTION,\n      gas: this.generateTxPriceEstimation(txs, txCallback),\n    });\n    return txs;\n  }\n\n  @GovValidator\n  public async queue(\n    @IsEthAddress('user')\n    @Is0OrPositiveAmount('proposalId')\n    { user, proposalId }: GovQueueType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const govContract: IAaveGovernanceV2 = this.getContractInstance(\n      this.aaveGovernanceV2Address\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () => govContract.populateTransaction.queue(proposalId),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.GOVERNANCE_ACTION,\n      gas: this.generateTxPriceEstimation(txs, txCallback),\n    });\n    return txs;\n  }\n\n  @GovValidator\n  public async execute(\n    @IsEthAddress('user')\n    @Is0OrPositiveAmount('proposalId')\n    { user, proposalId }: GovExecuteType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const govContract: IAaveGovernanceV2 = this.getContractInstance(\n      this.aaveGovernanceV2Address\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () => govContract.populateTransaction.execute(proposalId),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.GOVERNANCE_ACTION,\n      gas: this.generateTxPriceEstimation(txs, txCallback),\n    });\n    return txs;\n  }\n\n  @GovValidator\n  public async submitVote(\n    @IsEthAddress('user')\n    @Is0OrPositiveAmount('proposalId')\n    { user, proposalId, support }: GovSubmitVoteType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const govContract: IAaveGovernanceV2 = this.getContractInstance(\n      this.aaveGovernanceV2Address\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        govContract.populateTransaction.submitVote(proposalId, support),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.GOVERNANCE_ACTION,\n      gas: this.generateTxPriceEstimation(txs, txCallback),\n    });\n    return txs;\n  }\n\n  @GovValidator\n  public async signVoting(\n    @Is0OrPositiveAmount('proposalId')\n    { support, proposalId }: GovSignVotingType\n  ): Promise<string> {\n    const typeData = {\n      types: {\n        EIP712Domain: [\n          { name: 'name', type: 'string' },\n          { name: 'chainId', type: 'uint256' },\n          { name: 'verifyingContract', type: 'address' },\n        ],\n        VoteEmitted: [\n          { name: 'id', type: 'uint256' },\n          { name: 'support', type: 'bool' },\n        ],\n      },\n      primaryType: 'VoteEmitted' as const,\n      domain: {\n        name: 'Aave Governance v2',\n        chainId: ChainId[this.config.network],\n        verifyingContract: this.aaveGovernanceV2Address,\n      },\n      message: {\n        support,\n        id: proposalId,\n      },\n    };\n\n    return JSON.stringify(typeData);\n  }\n\n  @GovValidator\n  public async submitVoteBySignature(\n    @IsEthAddress('user')\n    @Is0OrPositiveAmount('proposalId')\n    { user, proposalId, support, signature }: GovSubmitVoteSignType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const govContract: IAaveGovernanceV2 = this.getContractInstance(\n      this.aaveGovernanceV2Address\n    );\n\n    const sig: Signature = utils.splitSignature(signature);\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        govContract.populateTransaction.submitVoteBySignature(\n          proposalId,\n          support,\n          sig.v,\n          sig.r,\n          sig.s\n        ),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.GOVERNANCE_ACTION,\n      gas: this.generateTxPriceEstimation(txs, txCallback),\n    });\n    return txs;\n  }\n\n  @GovValidator\n  public async getProposals({\n    skip,\n    limit,\n  }: GovGetProposalsType): Promise<Proposal[]> {\n    const { provider }: Configuration = this.config;\n    const helper: IGovernanceV2Helper = IGovernanceV2Helper__factory.connect(\n      this.aaveGovernanceV2HelperAddress,\n      provider\n    );\n\n    const result = await helper.getProposals(\n      skip.toString(),\n      limit.toString(),\n      this.aaveGovernanceV2Address\n    );\n\n    const proposals: Promise<Proposal[]> = Promise.all(\n      result.map(\n        async (rawProposal: ProposalRPC): Promise<Proposal> =>\n          parseProposal(rawProposal)\n      )\n    );\n\n    return proposals;\n  }\n\n  @GovValidator\n  public async getProposal({\n    proposalId,\n  }: GovGetProposalType): Promise<Proposal> {\n    const { provider }: Configuration = this.config;\n    const helper: IGovernanceV2Helper = IGovernanceV2Helper__factory.connect(\n      this.aaveGovernanceV2HelperAddress,\n      provider\n    );\n\n    const proposal = await helper.getProposal(\n      proposalId,\n      this.aaveGovernanceV2Address\n    );\n\n    return parseProposal(proposal);\n  }\n\n  @GovValidator\n  public async getPropositionPowerAt({\n    user,\n    block,\n    strategy,\n  }: GovGetVotingAtBlockType): Promise<string> {\n    const { provider }: Configuration = this.config;\n    const proposalStrategy: IGovernanceStrategy = IGovernanceStrategy__factory.connect(\n      strategy,\n      provider\n    );\n\n    const power = await proposalStrategy.getPropositionPowerAt(\n      user,\n      block.toString()\n    );\n    return formatEther(power);\n  }\n\n  @GovValidator\n  public async getVotingPowerAt({\n    user,\n    block,\n    strategy,\n  }: GovGetVotingAtBlockType): Promise<string> {\n    const { provider }: Configuration = this.config;\n    const proposalStrategy: IGovernanceStrategy = IGovernanceStrategy__factory.connect(\n      strategy,\n      provider\n    );\n\n    const power = await proposalStrategy.getVotingPowerAt(\n      user,\n      block.toString()\n    );\n    return formatEther(power);\n  }\n\n  @GovValidator\n  public async getTotalPropositionSupplyAt({\n    block,\n    strategy,\n  }: GovGetVotingSupplyType): Promise<string> {\n    const { provider }: Configuration = this.config;\n    const proposalStrategy: IGovernanceStrategy = IGovernanceStrategy__factory.connect(\n      strategy,\n      provider\n    );\n\n    const total = await proposalStrategy.getTotalPropositionSupplyAt(\n      block.toString()\n    );\n    return formatEther(total);\n  }\n\n  @GovValidator\n  public async getTotalVotingSupplyAt({\n    block,\n    strategy,\n  }: GovGetVotingSupplyType): Promise<string> {\n    const { provider }: Configuration = this.config;\n    const proposalStrategy: IGovernanceStrategy = IGovernanceStrategy__factory.connect(\n      strategy,\n      provider\n    );\n\n    const total = await proposalStrategy.getTotalVotingSupplyAt(\n      block.toString()\n    );\n    return formatEther(total);\n  }\n\n  @GovValidator\n  public async getTokensPower({ user, tokens }: GovGetPower): Promise<Power[]> {\n    const { provider }: Configuration = this.config;\n    const helper: IGovernanceV2Helper = IGovernanceV2Helper__factory.connect(\n      this.aaveGovernanceV2HelperAddress,\n      provider\n    );\n    const power = helper.getTokensPower(user, tokens);\n    return power as Promise<Power[]>;\n  }\n\n  @GovValidator\n  public async getVoteOnProposal({\n    proposalId,\n    user,\n  }: GovGetVoteOnProposal): Promise<Vote> {\n    const govContract: IAaveGovernanceV2 = this.getContractInstance(\n      this.aaveGovernanceV2Address\n    );\n    return govContract.getVoteOnProposal(proposalId, user) as Promise<Vote>;\n  }\n}\n","import { splitSignature } from 'ethers/lib/utils';\nimport {\n  IGovernancePowerDelegationToken,\n  IGovernancePowerDelegationToken__factory,\n} from '../../contract-types';\nimport GovernanceDelegationTokenInterface from '../../interfaces/v2/GovernanceDelegationToken';\nimport {\n  ChainId,\n  Configuration,\n  eEthereumTxType,\n  EthereumTransactionTypeExtended,\n  tEthereumAddress,\n  transactionType,\n  tStringDecimalUnits,\n} from '../../types';\nimport {\n  GovDelegate,\n  GovDelegateBySig,\n  GovDelegateByType,\n  GovDelegateByTypeBySig,\n  GovGetDelegateeByType,\n  GovGetNonce,\n  GovGetPowerAtBlock,\n  GovGetPowerCurrent,\n  GovPrepareDelegateSig,\n  GovPrepareDelegateSigByType,\n} from '../../types/GovDelegationMethodTypes';\nimport { canBeEnsAddress } from '../../utils/parsings';\nimport { GovDelegationValidator } from '../../validators/methodValidators';\nimport {\n  Is0OrPositiveAmount,\n  IsEthAddress,\n  IsEthAddressOrENS,\n  IsPositiveAmount,\n} from '../../validators/paramValidators';\nimport BaseService from '../BaseService';\n\nexport default class GovernanceDelegationTokenService\n  extends BaseService<IGovernancePowerDelegationToken>\n  implements GovernanceDelegationTokenInterface {\n  constructor(config: Configuration) {\n    super(config, IGovernancePowerDelegationToken__factory);\n  }\n\n  @GovDelegationValidator\n  public async delegate(\n    @IsEthAddress('user')\n    @IsEthAddressOrENS('delegatee')\n    @IsEthAddress('governanceToken')\n    { user, delegatee, governanceToken }: GovDelegate\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const governanceDelegationToken: IGovernancePowerDelegationToken = this.getContractInstance(\n      governanceToken\n    );\n\n    const delegateeAddress: string = await this.getDelegateeAddress(delegatee);\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        governanceDelegationToken.populateTransaction.delegate(\n          delegateeAddress\n        ),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.GOV_DELEGATION_ACTION,\n      gas: this.generateTxPriceEstimation(txs, txCallback),\n    });\n\n    return txs;\n  }\n\n  @GovDelegationValidator\n  public async delegateByType(\n    @IsEthAddress('user')\n    @IsEthAddressOrENS('delegatee')\n    @IsEthAddress('governanceToken')\n    { user, delegatee, delegationType, governanceToken }: GovDelegateByType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const governanceDelegationToken: IGovernancePowerDelegationToken = this.getContractInstance(\n      governanceToken\n    );\n\n    const delegateeAddress: string = await this.getDelegateeAddress(delegatee);\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        governanceDelegationToken.populateTransaction.delegateByType(\n          delegateeAddress,\n          delegationType\n        ),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.GOV_DELEGATION_ACTION,\n      gas: this.generateTxPriceEstimation(txs, txCallback),\n    });\n\n    return txs;\n  }\n\n  @GovDelegationValidator\n  public async delegateBySig(\n    @IsEthAddress('user')\n    @IsEthAddressOrENS('delegatee')\n    @IsEthAddress('governanceToken')\n    { user, delegatee, expiry, signature, governanceToken }: GovDelegateBySig\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const governanceDelegationToken: IGovernancePowerDelegationToken = this.getContractInstance(\n      governanceToken\n    );\n    const nonce = await this.getNonce({ user, governanceToken });\n    const { v, r, s } = splitSignature(signature);\n\n    const delegateeAddress: string = await this.getDelegateeAddress(delegatee);\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        governanceDelegationToken.populateTransaction.delegateBySig(\n          delegateeAddress,\n          nonce,\n          expiry,\n          v,\n          r,\n          s\n        ),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.GOV_DELEGATION_ACTION,\n      gas: this.generateTxPriceEstimation(txs, txCallback),\n    });\n\n    return txs;\n  }\n\n  @GovDelegationValidator\n  public async delegateByTypeBySig(\n    @IsEthAddress('user')\n    @IsEthAddressOrENS('delegatee')\n    @IsEthAddress('governanceToken')\n    {\n      user,\n      delegatee,\n      delegationType,\n      expiry,\n      signature,\n      governanceToken,\n    }: GovDelegateByTypeBySig\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const governanceDelegationToken: IGovernancePowerDelegationToken = this.getContractInstance(\n      governanceToken\n    );\n    const nonce = await this.getNonce({ user, governanceToken });\n    const { v, r, s } = splitSignature(signature);\n\n    const delegateeAddress: string = await this.getDelegateeAddress(delegatee);\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        governanceDelegationToken.populateTransaction.delegateByTypeBySig(\n          delegateeAddress,\n          delegationType,\n          nonce,\n          expiry,\n          v,\n          r,\n          s\n        ),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.GOV_DELEGATION_ACTION,\n      gas: this.generateTxPriceEstimation(txs, txCallback),\n    });\n\n    return txs;\n  }\n\n  @GovDelegationValidator\n  public async prepareDelegateSignature(\n    @IsEthAddressOrENS('delegatee')\n    @IsEthAddress('governanceToken')\n    @Is0OrPositiveAmount('nonce')\n    {\n      delegatee,\n      nonce,\n      expiry,\n      governanceTokenName,\n      governanceToken,\n    }: GovPrepareDelegateSig\n  ): Promise<string> {\n    const delegateeAddress: string = await this.getDelegateeAddress(delegatee);\n\n    const typeData = {\n      types: {\n        EIP712Domain: [\n          { name: 'name', type: 'string' },\n          { name: 'chainId', type: 'uint256' },\n          { name: 'verifyingContract', type: 'address' },\n        ],\n        Delegate: [\n          { name: 'delegatee', type: 'address' },\n          { name: 'nonce', type: 'uint256' },\n          { name: 'expiry', type: 'uint256' },\n        ],\n      },\n      primaryType: 'Delegate' as const,\n      domain: {\n        name: governanceTokenName,\n        chainId: ChainId[this.config.network],\n        verifyingContract: governanceToken,\n      },\n      message: {\n        delegatee: delegateeAddress,\n        nonce,\n        expiry,\n      },\n    };\n\n    return JSON.stringify(typeData);\n  }\n\n  @GovDelegationValidator\n  public async prepareDelegateByTypeSignature(\n    @IsEthAddressOrENS('delegatee')\n    @IsEthAddress('governanceToken')\n    @Is0OrPositiveAmount('nonce')\n    {\n      delegatee,\n      type,\n      nonce,\n      expiry,\n      governanceTokenName,\n      governanceToken,\n    }: GovPrepareDelegateSigByType\n  ): Promise<string> {\n    const delegateeAddress: string = await this.getDelegateeAddress(delegatee);\n\n    const typeData = {\n      types: {\n        EIP712Domain: [\n          { name: 'name', type: 'string' },\n          { name: 'chainId', type: 'uint256' },\n          { name: 'verifyingContract', type: 'address' },\n        ],\n        DelegateByType: [\n          { name: 'delegatee', type: 'address' },\n          { name: 'type', type: 'uint256' },\n          { name: 'nonce', type: 'uint256' },\n          { name: 'expiry', type: 'uint256' },\n        ],\n      },\n      primaryType: 'DelegateByType' as const,\n      domain: {\n        name: governanceTokenName,\n        chainId: ChainId[this.config.network],\n        verifyingContract: governanceToken,\n      },\n      message: {\n        delegatee: delegateeAddress,\n        type,\n        nonce,\n        expiry,\n      },\n    };\n\n    return JSON.stringify(typeData);\n  }\n\n  @GovDelegationValidator\n  public async getDelegateeByType(\n    @IsEthAddress('delegator')\n    @IsEthAddress('governanceToken')\n    { delegator, delegationType, governanceToken }: GovGetDelegateeByType\n  ): Promise<tEthereumAddress> {\n    const governanceDelegationToken: IGovernancePowerDelegationToken = this.getContractInstance(\n      governanceToken\n    );\n    return governanceDelegationToken.getDelegateeByType(\n      delegator,\n      delegationType\n    );\n  }\n\n  @GovDelegationValidator\n  public async getPowerCurrent(\n    @IsEthAddress('user')\n    @IsEthAddress('governanceToken')\n    { user, delegationType, governanceToken }: GovGetPowerCurrent\n  ): Promise<tStringDecimalUnits> {\n    const governanceDelegationToken: IGovernancePowerDelegationToken = this.getContractInstance(\n      governanceToken\n    );\n    return (\n      await governanceDelegationToken.getPowerCurrent(user, delegationType)\n    ).toString();\n  }\n\n  @GovDelegationValidator\n  public async getPowerAtBlock(\n    @IsEthAddress('user')\n    @IsEthAddress('governanceToken')\n    @IsPositiveAmount('blockNumber')\n    { user, blockNumber, delegationType, governanceToken }: GovGetPowerAtBlock\n  ): Promise<tStringDecimalUnits> {\n    const governanceDelegationToken: IGovernancePowerDelegationToken = this.getContractInstance(\n      governanceToken\n    );\n    return (\n      await governanceDelegationToken.getPowerAtBlock(\n        user,\n        blockNumber,\n        delegationType\n      )\n    ).toString();\n  }\n\n  @GovDelegationValidator\n  public async getNonce(\n    @IsEthAddress('user')\n    @IsEthAddress('governanceToken')\n    { user, governanceToken }: GovGetNonce\n  ): Promise<tStringDecimalUnits> {\n    const governanceDelegationToken: IGovernancePowerDelegationToken = this.getContractInstance(\n      governanceToken\n    );\n    // eslint-disable-next-line no-underscore-dangle\n    return (await governanceDelegationToken._nonces(user)).toString();\n  }\n\n  private async getDelegateeAddress(delegatee: string): Promise<string> {\n    if (canBeEnsAddress(delegatee)) {\n      const delegateeAddress = await this.config.provider.resolveName(\n        delegatee\n      );\n      if (!delegateeAddress)\n        throw new Error(`Address ${delegatee} is not a valid ENS address`);\n\n      return delegateeAddress;\n    }\n\n    return delegatee;\n  }\n}\n","import { providers } from 'ethers';\nimport { Network, Market, DefaultProviderKeys } from './types';\nimport TxBuilderInterface from './interfaces/TxBuilder';\nimport LendingPoolInterface from './interfaces/v2/LendingPool';\nimport LendingPool from './services/v2/LendingPool';\nimport BaseTxBuilder from './txBuilder';\nimport WETHGatewayInterface from './interfaces/WETHGateway';\nimport WETHGatewayService from './services/WETHGateway';\nimport BaseDebtTokenInterface from './interfaces/BaseDebtToken';\nimport BaseDebtToken from './services/BaseDebtToken';\nimport LiquiditySwapAdapterService from './services/LiquiditySwapAdapter';\nimport LiquiditySwapAdapterInterface from './interfaces/LiquiditySwapAdapter';\nimport RepayWithCollateralAdapterService from './services/RepayWithCollateralAdapter';\nimport RepayWithCollateralAdapterInterface from './interfaces/RepayWithCollateralAdapter';\nimport AaveGovernanceV2Interface from './interfaces/v2/AaveGovernanceV2';\nimport GovernanceDelegationTokenInterface from './interfaces/v2/GovernanceDelegationToken';\nimport AaveGovernanceV2Service from './services/v2/AaveGovernanceV2';\nimport GovernanceDelegationTokenService from './services/v2/GovernanceDelegationTokenService';\n\nexport default class TxBuilder\n  extends BaseTxBuilder\n  implements TxBuilderInterface {\n  readonly lendingPools: {\n    [market: string]: LendingPoolInterface;\n  };\n\n  readonly baseDebtTokenService: BaseDebtTokenInterface;\n\n  readonly liquiditySwapAdapterService: LiquiditySwapAdapterInterface;\n\n  readonly repayWithCollateralAdapterService: RepayWithCollateralAdapterInterface;\n\n  public aaveGovernanceV2Service: AaveGovernanceV2Interface;\n\n  public governanceDelegationTokenService: GovernanceDelegationTokenInterface;\n\n  public wethGatewayService: WETHGatewayInterface;\n\n  constructor(\n    network: Network = Network.mainnet,\n    injectedProvider?:\n      | providers.ExternalProvider\n      | providers.Web3Provider\n      | string\n      | undefined,\n    defaultProviderKeys?: DefaultProviderKeys\n  ) {\n    super(network, injectedProvider, defaultProviderKeys);\n\n    this.lendingPools = {};\n    this.baseDebtTokenService = new BaseDebtToken(\n      this.configuration,\n      this.erc20Service\n    );\n    this.wethGatewayService = new WETHGatewayService(\n      this.configuration,\n      this.baseDebtTokenService,\n      this.erc20Service\n    );\n    this.liquiditySwapAdapterService = new LiquiditySwapAdapterService(\n      this.configuration\n    );\n    this.repayWithCollateralAdapterService = new RepayWithCollateralAdapterService(\n      this.configuration\n    );\n    this.aaveGovernanceV2Service = new AaveGovernanceV2Service(\n      this.configuration\n    );\n    this.governanceDelegationTokenService = new GovernanceDelegationTokenService(\n      this.configuration\n    );\n  }\n\n  public getLendingPool = (market: Market): LendingPoolInterface => {\n    if (!this.lendingPools[market]) {\n      this.lendingPools[market] = new LendingPool(\n        this.configuration,\n        this.erc20Service,\n        this.synthetixService,\n        this.wethGatewayService,\n        this.liquiditySwapAdapterService,\n        this.repayWithCollateralAdapterService,\n        market\n      );\n    }\n\n    return this.lendingPools[market];\n  };\n}\n"],"names":["BigNumberZD","BigNumber","clone","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","valueToBigNumber","amount","valueToZDBigNumber","bn10","bn10PowLookup","pow10","decimals","pow","normalize","n","dividedBy","toString","WAD","HALF_WAD","RAY","HALF_RAY","WAD_RAY_RATIO","wadMul","a","b","plus","multipliedBy","div","wadDiv","halfB","rayMul","rayDiv","rayToWad","halfRatio","wadToRay","decimalPlaces","rayPow","p","x","z","modulo","eq","binomialApproximatedRayPow","base","exp","expMinusOne","minus","expMinusTwo","gt","basePowerTwo","basePowerThree","firstTerm","secondTerm","thirdTerm","rayToDecimal","BorrowRateMode","SECONDS_PER_YEAR","ETH_DECIMALS","USD_DECIMALS","RAY_DECIMALS","getCompoundedBorrowBalance","reserve","userReserve","currentTimestamp","principalBorrows","cumulatedInterest","borrowRateMode","Variable","compoundedInterest","calculateCompoundedInterest","variableBorrowRate","lastUpdateTimestamp","RayMath","variableBorrowIndex","borrowRate","borrowBalanceRay","rate","timeDelta","ratePerSecond","calculateLinearInterest","timeDeltaInSeconds","calculateHealthFactorFromBalances","collateralBalanceETH","borrowBalanceETH","totalFeesETH","currentLiquidationThreshold","calculateHealthFactorFromBalancesBigUnits","calculateAvailableBorrowsETH","currentLtv","availableBorrowsETH","lt","borrowFee","getReserveNormalizedIncome","liquidityRate","liquidityIndex","calculateCumulatedBalance","balance","poolReserve","userBalanceIndex","calculateCurrentUnderlyingBalance","principalATokenBalance","redirectedBalance","interestRedirectionAddress","computeUserReserveData","usdPriceEth","priceInEth","price","currentUnderlyingBalance","currentUnderlyingBalanceETH","currentUnderlyingBalanceUSD","toFixed","principalBorrowsETH","principalBorrowsUSD","currentBorrows","currentBorrowsETH","currentBorrowsUSD","originationFeeETH","originationFee","originationFeeUSD","computeRawUserSummaryData","poolReservesData","rawUserReserves","userId","totalLiquidityETH","totalCollateralETH","totalBorrowsETH","userReservesData","map","find","id","Error","computedUserReserve","usageAsCollateralEnabled","usageAsCollateralEnabledOnUser","baseLTVasCollateral","reserveLiquidationThreshold","sort","symbol","healthFactor","totalCollateralUSD","totalLiquidityUSD","totalBorrowsUSD","totalFeesUSD","totalBorrowsWithFeesETH","totalBorrowsWithFeesUSD","totalBorrowsAndFeesETH","maxAmountToWithdrawInEth","currentLoanToValue","reservesData","formatUserSummaryData","userData","reserveDecimals","reserveLiquidationBonus","calculateAverageRate","index0","index1","timestamp0","timestamp1","formatReserves","reserves","reserveIndexes30DaysAgo","reserve30DaysAgo","res","paramsHistory","avg30DaysVariableBorrowRate","timestamp","undefined","avg30DaysLiquidityRate","stableBorrowRate","totalLiquidity","availableLiquidity","totalBorrows","totalBorrowsVariable","totalBorrowsStable","calculateInterestRates","amountToDeposit","amountToBorrow","borrowMode","optimalUtilisationRate","baseVariableBorrowRate","totalDeposits","utilizationRate","currentStableBorrowRate","currentVariableBorrowRate","currentLiquidityRate","excessUtilizationRateRatio","stableRateSlope1","stableRateSlope2","variableRateSlope1","variableRateSlope2","weightedVariableRate","weightedStableRate","averageStableBorrowRate","LTV_PRECISION","getCompoundedBalance","_principalBalance","_reserveIndex","_reserveRate","_lastUpdateTimestamp","principalBalance","principalBalanceRay","getCompoundedStableBalance","_userStableRate","getEthAndUsdBalance","balanceInEth","balanceInUsd","underlyingBalance","scaledATokenBalance","underlyingBalanceETH","underlyingBalanceUSD","variableBorrows","scaledVariableDebt","variableBorrowsETH","variableBorrowsUSD","stableBorrows","principalStableDebt","stableBorrowLastUpdateTimestamp","stableBorrowsETH","stableBorrowsUSD","totalVariableDebt","totalScaledVariableDebt","totalStableDebt","totalPrincipalStableDebt","averageStableRate","stableDebtLastUpdateTimestamp","totalDebt","reserveFactor","InterestRate","Market","Network","ChainId","eEthereumTxType","ProtocolAction","GovernanceVote","Stake","commonContractAddressBetweenMarketsV2","kovan","SYNTHETIX_PROXY_ADDRESS","GOVERNANCE_PROTO_CONTRACT","LEND_TO_AAVE_MIGRATOR","WETH_GATEWAY","FAUCET","SWAP_COLLATERAL_ADAPTER","REPAY_WITH_COLLATERAL_ADAPTER","FLASHLIQUIDATION","ropsten","mainnet","distinctContractAddressBetweenMarketsV2","Proto","LENDINGPOOL_ADDRESS","aaveGovernanceV2Addresses","AAVE_GOVERNANCE_V2","AAVE_GOVERNANCE_V2_EXECUTOR_SHORT","AAVE_GOVERNANCE_V2_EXECUTOR_LONG","AAVE_GOVERNANCE_V2_HELPER","DEFAULT_NULL_VALUE_ON_TX","from","toHexString","DEFAULT_APPROVE_AMOUNT","constants","MaxUint256","MAX_UINT_AMOUNT","SUPER_BIG_ALLOWANCE_NUMBER","API_ETH_MOCK_ADDRESS","uniswapEthAmount","SURPLUS","gasLimitRecommendations","limit","recommended","deposit","withdraw","liquidationCall","liquidationFlash","repay","borrowETH","withdrawETH","swapCollateral","repayCollateral","distinctStakingAddressesBetweenTokens","Aave","canUsePermit","TOKEN_STAKING_ADDRESS","STAKING_HELPER_ADDRESS","Balancer","enabledNetworksByService","staking","lendingPool","governance","wethGateway","faucet","liquiditySwapAdapter","repayWithCollateralAdapter","aaveGovernanceV2","IAaveGovernanceV2__factory","connect","address","signerOrProvider","Contract","_abi","anonymous","inputs","indexed","internalType","name","type","outputs","stateMutability","components","IAaveStakingHelper__factory","IDebtTokenBase__factory","IERC20Detailed__factory","IFaucet__factory","IGovernancePowerDelegationToken__factory","IGovernanceStrategy__factory","IGovernanceV2Helper__factory","ILendingPool__factory","ILendToAaveMigrator__factory","IMinter__factory","IRepayWithCollateral__factory","IStakedToken__factory","ISwapCollateral__factory","ISynthetix__factory","IWETHGateway__factory","parseNumber","value","getTxValue","toLowerCase","mintAmountsPerToken","AAVE","BAT","BUSD","DAI","ENJ","KNC","LEND","LINK","MANA","MKR","REN","REP","SNX","SUSD","TUSD","UNI","USDC","USDT","WBTC","YFI","ZRX","UNIUSDC","UNIDAI","UNIUSDT","UNIDAIETH","UNIUSDCETH","UNISETHETH","UNILENDETH","UNILINKETH","UNIMKRETH","canBeEnsAddress","ensAddress","endsWith","isEthAddressMetadataKey","Symbol","isEthAddressOrENSMetadataKey","isPositiveMetadataKey","isPositiveOrMinusOneMetadataKey","is0OrPositiveMetadataKey","optionalMetadataKey","IsEthAddress","field","target","propertyKey","parameterIndex","existingPossibleAddresses","Reflect","getOwnMetadata","push","index","defineMetadata","IsEthAddressOrENS","IsPositiveAmount","params","Is0OrPositiveAmount","IsPositiveOrMinusOneAmount","Optional","existingOptionalParameters","optionalValidator","propertyName","methodArguments","optionalParameters","isParamOptional","forEach","isEthAddressValidator","addressParameters","storedParams","utils","isAddress","isOptional","isEthAddressOrEnsValidator","amountGtThan0Validator","amountParameters","Number","amount0OrPositiveValidator","amountGtThan0OrMinus1","amountMinusOneParameters","LPValidator","descriptor","method","currentNetwork","config","network","acceptedNetworks","market","indexOf","arguments","apply","LiquiditySwapValidator","RepayWithCollateralValidator","StakingValidator","tokenStake","FaucetValidator","WETHValidator","GovValidator","GovDelegationValidator","DEFAULT_SURPLUS","estimateGas","tx","gasSurplus","provider","estimatedGas","add","mul","getGasPrice","gasPrice","BaseService","contractFactory","contractInstances","rawTxMethod","action","txRaw","gasLimit","lte","txs","txCallback","hasPendingApprovals","txType","ERC20_APPROVAL","gasPriceProv","console","error","LendingPool","erc20Service","synthetixService","wethGatewayService","liquiditySwapAdapterService","repayWithCollateralAdapterService","lendingPoolAddress","user","onBehalfOf","referralCode","depositETH","isApproved","approve","decimalsOf","convertedAmount","synthetixValidation","fundsAvailable","approved","approveTx","lendingPoolContract","getContractInstance","generateTxCallback","populateTransaction","DLP_ACTION","gas","generateTxPriceEstimation","aTokenAddress","borrow","interestRateMode","debtTokenAddress","formatAmount","numericRateMode","repayETH","swapBorrowRateMode","setUsageAsCollateral","usageAsCollateral","setUserUseReserveAsCollateral","liquidator","liquidatedUser","debtReserve","collateralReserve","purchaseAmount","getAToken","getTokenData","Promise","all","debtReserveInfo","flash","fromAsset","fromAToken","toAsset","fromAmount","toAmount","maxSlippage","permitSignature","swapAll","useEthPath","permitParams","deadline","v","r","s","tokenDecimals","tokenToDecimals","amountSlippage","amountSlippageConverted","FLASHLOAN_PREMIUM_TOTAL","convertedAmountNoFees","sub","amountWithSurplus","convertedAmountWithSurplus","defaultAbiCoder","encode","flashLoan","swapAndDeposit","assetToSwapFrom","assetToSwapTo","amountToSwap","minAmountToReceive","swapAndDepositTx","repayWithCollateral","assetToRepay","repayWithAmount","repayAmount","repayAllDebt","rateMode","fromDecimals","convertedRepayWithAmount","repayAmountWithSurplus","convertedRepayAmount","numericInterestRate","Stable","swapAndRepayTx","swapAndRepay","collateralAsset","debtAsset","collateralAmount","debtRepayAmount","debtRateMode","permit","flashLiquidation","borrowedAsset","debtTokenCover","liquidateAll","initiator","addSurplus","convertedDebt","convertedDebtTokenCover","flashBorrowAmount","__decorate","__param","ERC20Service","token","spender","erc20Contract","userAddress","allowance","amountBNWithDecimals","gte","nameGetter","symbolGetter","decimalsGetter","FaucetService","faucetAddress","faucetContract","mint","tokenSymbol","txValue","FAUCET_MINT","getMinter","minterAddress","minterContract","isEthRequired","LTAMigratorService","migratorContract","migratorAddress","lendToken","migrateFromLEND","MIGRATION_LEND_AAVE","StakingService","stakingContractAddress","stakingHelperContractAddress","stakingHelperContract","signStaking","nonce","stakingContract","STAKED_TOKEN","stakedToken","typeData","types","EIP712Domain","Permit","primaryType","domain","version","chainId","verifyingContract","message","owner","JSON","stringify","stakeWithPermit","signature","stakedTokenDecimals","sig","splitSignature","stake","STAKE_ACTION","redeem","cooldown","claimRewards","REWARD_TOKEN","SynthetixService","synthAddress","toUpperCase","isSnxTransferable","synthContract","transferableSynthetix","transferableAmount","BaseTxBuilder","injectedProvider","defaultProviderKeys","stakeToken","stakings","configuration","Object","keys","length","ethers","getDefaultProvider","log","providers","JsonRpcProvider","Web3Provider","ltaMigratorService","faucetService","WETHGatewayService","baseDebtTokenService","wethGatewayAddress","wethGatewayContract","isDelegationApproved","delegationApproved","approveDelegationTx","approveDelegation","BaseDebtToken","delegatee","debtTokenContract","allowanceGiver","allowanceReceiver","borrowAllowance","delegatedAllowance","LiquiditySwapAdapterService","liquiditySwapAdapterAddress","liquiditySwapContract","RepayWithCollateralAdapterService","repayWithCollateralAddress","repayWithCollateralContract","ExecutorType","ProposalState","ipfsEndpoint","getLink","hash","MEMORIZE","getProposalMetadata","ipfsHash","base58","Buffer","slice","axios","get","timeout","data","title","description","shortDescription","parseProposal","rawProposal","creator","executor","targets","values","signatures","calldatas","withDelegatecalls","startBlock","endBlock","executionTime","forVotes","againstVotes","executed","canceled","strategy","ipfsHex","totalVotingSupply","minimumQuorum","minimumDiff","executionTimeWithGracePeriod","proposalCreated","proposalState","proposalMetadata","proposal","state","AaveGovernanceV2Service","aaveGovernanceV2Address","aaveGovernanceV2HelperAddress","executors","Short","Long","create","withDelegateCalls","govContract","GOVERNANCE_ACTION","cancel","proposalId","queue","execute","submitVote","support","signVoting","VoteEmitted","submitVoteBySignature","getProposals","skip","helper","result","proposals","getProposal","getPropositionPowerAt","block","proposalStrategy","power","formatEther","getVotingPowerAt","getTotalPropositionSupplyAt","total","getTotalVotingSupplyAt","getTokensPower","tokens","getVoteOnProposal","GovernanceDelegationTokenService","delegate","governanceToken","governanceDelegationToken","getDelegateeAddress","delegateeAddress","GOV_DELEGATION_ACTION","delegateByType","delegationType","delegateBySig","expiry","getNonce","delegateByTypeBySig","prepareDelegateSignature","governanceTokenName","Delegate","prepareDelegateByTypeSignature","DelegateByType","getDelegateeByType","delegator","getPowerCurrent","getPowerAtBlock","blockNumber","_nonces","resolveName","TxBuilder","lendingPools","aaveGovernanceV2Service","governanceDelegationTokenService"],"mappings":"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"}